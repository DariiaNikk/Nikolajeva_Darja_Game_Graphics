{"version":3,"sources":["webpack://PicoGL/webpack/universalModuleDefinition","webpack://PicoGL/./build/module/constants.js","webpack://PicoGL/./build/module/cubemap.js","webpack://PicoGL/./build/module/draw-call.js","webpack://PicoGL/./build/module/texture.js","webpack://PicoGL/./build/module/renderbuffer.js","webpack://PicoGL/./build/module/framebuffer.js","webpack://PicoGL/./build/module/shader.js","webpack://PicoGL/./build/module/uniforms.js","webpack://PicoGL/./build/module/program.js","webpack://PicoGL/./build/module/query.js","webpack://PicoGL/./build/module/timer.js","webpack://PicoGL/./build/module/transform-feedback.js","webpack://PicoGL/./build/module/uniform-buffer.js","webpack://PicoGL/./build/module/vertex-array.js","webpack://PicoGL/./build/module/vertex-buffer.js","webpack://PicoGL/./build/module/app.js","webpack://PicoGL/./build/module/picogl.js","webpack://PicoGL/webpack/bootstrap","webpack://PicoGL/webpack/startup","webpack://PicoGL/webpack/runtime/define property getters","webpack://PicoGL/webpack/runtime/hasOwnProperty shorthand"],"names":["root","factory","exports","module","define","amd","self","GL","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","COLOR_BUFFER_BIT","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","FUNC_ADD","BLEND_EQUATION","BLEND_EQUATION_RGB","BLEND_EQUATION_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","BLEND_DST_RGB","BLEND_SRC_RGB","BLEND_DST_ALPHA","BLEND_SRC_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND_COLOR","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER_BINDING","ELEMENT_ARRAY_BUFFER_BINDING","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","BUFFER_SIZE","BUFFER_USAGE","CURRENT_VERTEX_ATTRIB","FRONT","BACK","FRONT_AND_BACK","CULL_FACE","BLEND","DITHER","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","POLYGON_OFFSET_FILL","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_COVERAGE","NO_ERROR","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","OUT_OF_MEMORY","CW","CCW","LINE_WIDTH","ALIASED_POINT_SIZE_RANGE","ALIASED_LINE_WIDTH_RANGE","CULL_FACE_MODE","FRONT_FACE","DEPTH_RANGE","DEPTH_WRITEMASK","DEPTH_CLEAR_VALUE","DEPTH_FUNC","STENCIL_CLEAR_VALUE","STENCIL_FUNC","STENCIL_FAIL","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_REF","STENCIL_VALUE_MASK","STENCIL_WRITEMASK","STENCIL_BACK_FUNC","STENCIL_BACK_FAIL","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_BACK_WRITEMASK","VIEWPORT","SCISSOR_BOX","COLOR_CLEAR_VALUE","COLOR_WRITEMASK","UNPACK_ALIGNMENT","PACK_ALIGNMENT","MAX_TEXTURE_SIZE","MAX_VIEWPORT_DIMS","SUBPIXEL_BITS","RED_BITS","GREEN_BITS","BLUE_BITS","ALPHA_BITS","DEPTH_BITS","STENCIL_BITS","POLYGON_OFFSET_UNITS","POLYGON_OFFSET_FACTOR","TEXTURE_BINDING_2D","SAMPLE_BUFFERS","SAMPLES","SAMPLE_COVERAGE_VALUE","SAMPLE_COVERAGE_INVERT","COMPRESSED_TEXTURE_FORMATS","DONT_CARE","FASTEST","NICEST","GENERATE_MIPMAP_HINT","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","DEPTH_COMPONENT","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","FRAGMENT_SHADER","VERTEX_SHADER","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VARYING_VECTORS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_IMAGE_UNITS","MAX_FRAGMENT_UNIFORM_VECTORS","SHADER_TYPE","DELETE_STATUS","LINK_STATUS","VALIDATE_STATUS","ATTACHED_SHADERS","ACTIVE_UNIFORMS","ACTIVE_ATTRIBUTES","SHADING_LANGUAGE_VERSION","CURRENT_PROGRAM","NEVER","LESS","EQUAL","LEQUAL","GREATER","NOTEQUAL","GEQUAL","ALWAYS","KEEP","REPLACE","INCR","DECR","INVERT","INCR_WRAP","DECR_WRAP","VENDOR","RENDERER","VERSION","NEAREST","LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE","TEXTURE_CUBE_MAP","TEXTURE_BINDING_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","MAX_CUBE_MAP_TEXTURE_SIZE","TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE30","TEXTURE31","ACTIVE_TEXTURE","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_ARRAY_NORMALIZED","VERTEX_ATTRIB_ARRAY_POINTER","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","IMPLEMENTATION_COLOR_READ_TYPE","IMPLEMENTATION_COLOR_READ_FORMAT","COMPILE_STATUS","LOW_FLOAT","MEDIUM_FLOAT","HIGH_FLOAT","LOW_INT","MEDIUM_INT","HIGH_INT","FRAMEBUFFER","RENDERBUFFER","RGBA4","RGB5_A1","RGB565","DEPTH_COMPONENT16","STENCIL_INDEX","STENCIL_INDEX8","DEPTH_STENCIL","RENDERBUFFER_WIDTH","RENDERBUFFER_HEIGHT","RENDERBUFFER_INTERNAL_FORMAT","RENDERBUFFER_RED_SIZE","RENDERBUFFER_GREEN_SIZE","RENDERBUFFER_BLUE_SIZE","RENDERBUFFER_ALPHA_SIZE","RENDERBUFFER_DEPTH_SIZE","RENDERBUFFER_STENCIL_SIZE","FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","NONE","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_BINDING","RENDERBUFFER_BINDING","MAX_RENDERBUFFER_SIZE","INVALID_FRAMEBUFFER_OPERATION","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","CONTEXT_LOST_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","READ_BUFFER","UNPACK_ROW_LENGTH","UNPACK_SKIP_ROWS","UNPACK_SKIP_PIXELS","PACK_ROW_LENGTH","PACK_SKIP_ROWS","PACK_SKIP_PIXELS","COLOR","DEPTH","STENCIL","RED","RGB8","RGBA8","RGB10_A2","TEXTURE_BINDING_3D","UNPACK_SKIP_IMAGES","UNPACK_IMAGE_HEIGHT","TEXTURE_3D","TEXTURE_WRAP_R","MAX_3D_TEXTURE_SIZE","UNSIGNED_INT_2_10_10_10_REV","MAX_ELEMENTS_VERTICES","MAX_ELEMENTS_INDICES","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","MIN","MAX","DEPTH_COMPONENT24","MAX_TEXTURE_LOD_BIAS","TEXTURE_COMPARE_MODE","TEXTURE_COMPARE_FUNC","CURRENT_QUERY","QUERY_RESULT","QUERY_RESULT_AVAILABLE","STREAM_READ","STREAM_COPY","STATIC_READ","STATIC_COPY","DYNAMIC_READ","DYNAMIC_COPY","MAX_DRAW_BUFFERS","DRAW_BUFFER0","DRAW_BUFFER1","DRAW_BUFFER2","DRAW_BUFFER3","DRAW_BUFFER4","DRAW_BUFFER5","DRAW_BUFFER6","DRAW_BUFFER7","DRAW_BUFFER8","DRAW_BUFFER9","DRAW_BUFFER10","DRAW_BUFFER11","DRAW_BUFFER12","DRAW_BUFFER13","DRAW_BUFFER14","DRAW_BUFFER15","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_VERTEX_UNIFORM_COMPONENTS","SAMPLER_3D","SAMPLER_2D_SHADOW","FRAGMENT_SHADER_DERIVATIVE_HINT","PIXEL_PACK_BUFFER","PIXEL_UNPACK_BUFFER","PIXEL_PACK_BUFFER_BINDING","PIXEL_UNPACK_BUFFER_BINDING","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4x2","FLOAT_MAT4x3","SRGB","SRGB8","SRGB8_ALPHA8","COMPARE_REF_TO_TEXTURE","RGBA32F","RGB32F","RGBA16F","RGB16F","VERTEX_ATTRIB_ARRAY_INTEGER","MAX_ARRAY_TEXTURE_LAYERS","MIN_PROGRAM_TEXEL_OFFSET","MAX_PROGRAM_TEXEL_OFFSET","MAX_VARYING_COMPONENTS","TEXTURE_2D_ARRAY","TEXTURE_BINDING_2D_ARRAY","R11F_G11F_B10F","UNSIGNED_INT_10F_11F_11F_REV","RGB9_E5","UNSIGNED_INT_5_9_9_9_REV","TRANSFORM_FEEDBACK_BUFFER_MODE","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","TRANSFORM_FEEDBACK_VARYINGS","TRANSFORM_FEEDBACK_BUFFER_START","TRANSFORM_FEEDBACK_BUFFER_SIZE","TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","RASTERIZER_DISCARD","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","INTERLEAVED_ATTRIBS","SEPARATE_ATTRIBS","TRANSFORM_FEEDBACK_BUFFER","TRANSFORM_FEEDBACK_BUFFER_BINDING","RGBA32UI","RGB32UI","RGBA16UI","RGB16UI","RGBA8UI","RGB8UI","RGBA32I","RGB32I","RGBA16I","RGB16I","RGBA8I","RGB8I","RED_INTEGER","RGB_INTEGER","RGBA_INTEGER","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","DEPTH_COMPONENT32F","DEPTH32F_STENCIL8","FLOAT_32_UNSIGNED_INT_24_8_REV","FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","FRAMEBUFFER_ATTACHMENT_RED_SIZE","FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","FRAMEBUFFER_DEFAULT","UNSIGNED_INT_24_8","DEPTH24_STENCIL8","UNSIGNED_NORMALIZED","DRAW_FRAMEBUFFER_BINDING","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","READ_FRAMEBUFFER_BINDING","RENDERBUFFER_SAMPLES","FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","MAX_COLOR_ATTACHMENTS","COLOR_ATTACHMENT1","COLOR_ATTACHMENT2","COLOR_ATTACHMENT3","COLOR_ATTACHMENT4","COLOR_ATTACHMENT5","COLOR_ATTACHMENT6","COLOR_ATTACHMENT7","COLOR_ATTACHMENT8","COLOR_ATTACHMENT9","COLOR_ATTACHMENT10","COLOR_ATTACHMENT11","COLOR_ATTACHMENT12","COLOR_ATTACHMENT13","COLOR_ATTACHMENT14","COLOR_ATTACHMENT15","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","MAX_SAMPLES","HALF_FLOAT","RG","RG_INTEGER","R8","RG8","R16F","R32F","RG16F","RG32F","R8I","R8UI","R16I","R16UI","R32I","R32UI","RG8I","RG8UI","RG16I","RG16UI","RG32I","RG32UI","VERTEX_ARRAY_BINDING","R8_SNORM","RG8_SNORM","RGB8_SNORM","RGBA8_SNORM","SIGNED_NORMALIZED","COPY_READ_BUFFER","COPY_WRITE_BUFFER","COPY_READ_BUFFER_BINDING","COPY_WRITE_BUFFER_BINDING","UNIFORM_BUFFER","UNIFORM_BUFFER_BINDING","UNIFORM_BUFFER_START","UNIFORM_BUFFER_SIZE","MAX_VERTEX_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_UNIFORM_BUFFER_BINDINGS","MAX_UNIFORM_BLOCK_SIZE","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","UNIFORM_BUFFER_OFFSET_ALIGNMENT","ACTIVE_UNIFORM_BLOCKS","UNIFORM_TYPE","UNIFORM_SIZE","UNIFORM_BLOCK_INDEX","UNIFORM_OFFSET","UNIFORM_ARRAY_STRIDE","UNIFORM_MATRIX_STRIDE","UNIFORM_IS_ROW_MAJOR","UNIFORM_BLOCK_BINDING","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORMS","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","INVALID_INDEX","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_SERVER_WAIT_TIMEOUT","OBJECT_TYPE","SYNC_CONDITION","SYNC_STATUS","SYNC_FLAGS","SYNC_FENCE","SYNC_GPU_COMMANDS_COMPLETE","UNSIGNALED","SIGNALED","ALREADY_SIGNALED","TIMEOUT_EXPIRED","CONDITION_SATISFIED","WAIT_FAILED","SYNC_FLUSH_COMMANDS_BIT","VERTEX_ATTRIB_ARRAY_DIVISOR","ANY_SAMPLES_PASSED","ANY_SAMPLES_PASSED_CONSERVATIVE","SAMPLER_BINDING","RGB10_A2UI","INT_2_10_10_10_REV","TRANSFORM_FEEDBACK","TRANSFORM_FEEDBACK_PAUSED","TRANSFORM_FEEDBACK_ACTIVE","TRANSFORM_FEEDBACK_BINDING","TEXTURE_IMMUTABLE_FORMAT","MAX_ELEMENT_INDEX","TEXTURE_IMMUTABLE_LEVELS","TIMEOUT_IGNORED","MAX_CLIENT_WAIT_TIMEOUT_WEBGL","QUERY_COUNTER_BITS_EXT","TIME_ELAPSED_EXT","TIMESTAMP_EXT","GPU_DISJOINT_EXT","TEXTURE_MAX_ANISOTROPY_EXT","MAX_TEXTURE_MAX_ANISOTROPY_EXT","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","COMPLETION_STATUS_KHR","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_R11_EAC","COMPRESSED_SIGNED_R11_EAC","COMPRESSED_RG11_EAC","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","TYPE_SIZE","TEXTURE_FORMATS","COMPRESSED_TEXTURE_TYPES","WEBGL_INFO","DUMMY_UNIT_ARRAY","Array","DUMMY_OBJECT","TEXTURE_FORMAT_DEFAULTS","Cubemap","gl","appState","options","this","texture","compressed","internalFormat","undefined","format","console","warn","Boolean","type","formatInfo","currentUnit","arrayData","isArray","negX","width","height","flipY","premultiplyAlpha","minFilter","magFilter","wrapS","wrapT","compareMode","compareFunc","minLOD","maxLOD","baseLevel","maxLevel","maxAnisotropy","Math","min","MAX_TEXTURE_ANISOTROPY","mipmaps","miplevelsProvided","length","levels","floor","log2","restore","createTexture","textures","bind","texParameteri","texStorage2D","posX","negY","posY","negZ","posZ","faceData","generateMipmap","deleteTexture","face","data","i","numLevels","pixelStorei","compressedTexSubImage2D","max","texSubImage2D","unit","currentTexture","activeTexture","bindTexture","DrawCall","program","vertexArray","primitive","currentProgram","drawPrimitive","currentVertexArray","currentTransformFeedback","uniformIndices","uniformNames","MAX_UNIFORMS","uniformValues","uniformCount","uniformBuffers","MAX_UNIFORM_BUFFERS","uniformBlockNames","uniformBlockCount","MAX_TEXTURE_UNITS","textureCount","offsets","Int32Array","numElements","numInstances","numDraws","drawCountsFromVertexArray","transformFeedback","name","value","index","samplers","buffer","base","uniformBlocks","counts","count","samplerCount","indexed","uIndex","uniform","tIndex","beginTransformFeedback","bindTransformFeedback","MULTI_DRAW_INSTANCED","ext","extensions","multiDrawInstanced","multiDrawElementsInstancedWEBGL","indexType","multiDrawArraysInstancedWEBGL","drawElementsInstanced","drawArraysInstanced","endTransformFeedback","Texture","binding","image","depth","is3D","wrapR","resize","texParameterf","texStorage3D","generateMipmaps","compressedTexSubImage3D","texSubImage3D","Renderbuffer","samples","renderbuffer","createRenderbuffer","bindRenderbuffer","renderbufferStorageMultisample","deleteRenderbuffer","Framebuffer","framebuffer","numColorTargets","colorAttachments","colorAttachmentEnums","colorAttachmentTargets","depthAttachment","depthAttachmentTarget","currentFramebuffers","framebuffers","createFramebuffer","attachment","target","currentFramebuffer","bindAndCaptureState","drawFramebufferBinding","framebufferRenderbuffer","framebufferTextureLayer","framebufferTexture2D","drawBuffers","restoreState","drawingBufferWidth","drawingBufferHeight","deleteFramebuffer","bindFramebuffer","status","checkFramebufferStatus","readFramebufferBinding","error","Shader","source","shader","trim","createShader","shaderSource","compileShader","DEBUG_SHADERS","debugShaders","getTranslatedShaderSource","deleteShader","getShaderParameter","lines","getShaderInfoLog","split","UNIFORM_FUNC_NAME","UNIFORM_COMPONENT_COUNT","UNIFORM_CACHE_CLASS","Uint32Array","Float32Array","SingleComponentUniform","handle","glFuncName","cache","MultiNumericUniform","len","set","MultiBoolUniform","fill","j","MatrixUniform","Program","vsSource","fsSource","xformFeebackVars","attributeLocations","transformFeedbackMode","transformFeedbackVaryings","uniforms","vertexSource","vertexShader","fragmentSource","fragmentShader","linked","initialize","link","checkLinkage","translatedSource","delete","deleteProgram","useProgram","createProgram","attachShader","bindAttribLocation","linkProgram","PARALLEL_SHADER_COMPILE","getProgramParameter","initVariables","getProgramInfoLog","checkCompilation","textureUnit","numUniforms","uniformInfo","getActiveUniform","uniformHandle","getUniformLocation","UniformClass","size","uniform1i","numUniformBlocks","blockName","getActiveUniformBlockName","blockIndex","getUniformBlockIndex","uniformBlockBase","uniformBlockBinding","Query","query","active","result","createQuery","beginQuery","endQuery","getQueryParameter","Number","deleteQuery","Timer","cpuTimer","window","performance","Date","gpuTimerQuery","cpuStartTime","cpuTime","gpuTime","GPU_TIMER","begin","now","end","gpuTimerAvailable","ready","gpuTimerDisjoint","getParameter","TransformFeedback","createTransformFeedback","bindBufferBase","deleteTransformFeedback","UniformBuffer","layout","usage","dataViews","sizes","types","currentBase","dirtyStart","dirtyEnd","createBuffer","bindBuffer","bufferData","view","offset","subarray","bufferSubData","deleteBuffer","currentBuffer","VertexArray","createVertexArray","attributeIndex","vertexBuffer","attributeBuffer","numItems","deleteVertexArray","bindVertexArray","instanced","itemSize","stride","normalized","integer","numColumns","ceil","byteLength","vertexAttribIPointer","vertexAttribPointer","vertexAttribDivisor","enableVertexAttribArray","INTEGER_TYPES","VertexBuffer","indexArray","dataLength","App","canvas","viewportX","viewportY","viewportWidth","viewportHeight","currentDrawCalls","emptyFragmentShader","state","freeUniformBufferBases","clearBits","viewport","contextLostExt","contextLostListener","contextRestoredListener","contextRestoredHandler","initExtensions","loseContext","restoreContext","fn","initContextListeners","cap","enable","disable","r","g","b","a","colorMask","clearColor","mask","clear","bindForDraw","bindForRead","readBinding","drawBinding","readFramebuffer","drawFramebuffer","defaultReadWidth","defaultReadHeight","defaultDrawWidth","defaultDrawHeight","srcStartX","srcStartY","srcEndX","srcEndY","dstStartX","dstStartY","dstEndX","dstEndY","filter","blitFramebuffer","near","far","depthRange","depthMask","func","depthFunc","src","dest","blendFunc","csrc","cdest","asrc","adest","blendFuncSeparate","mode","blendEquation","stencilMask","stencilMaskSeparate","ref","stencilFunc","stencilFuncSeparate","stencilFail","depthFail","pass","stencilOp","stencilOpSeparate","x","y","scissor","factor","units","polygonOffset","outColor","readPixels","opts","sources","Promise","resolve","reject","numPrograms","programs","pendingPrograms","numPending","poll","checkCompletion","Error","requestAnimationFrame","slice","bytesPerVertex","ArrayBuffer","isView","getExtension","e","preventDefault","addEventListener","removeEventListener","webglInfoInitialized","PicoGL","Object","assign","version","createApp","contextAttributes","tagName","getContext","FLOAT_RENDER_TARGETS","LINEAR_FLOAT_TEXTURES","S3TC_TEXTURES","S3TC_SRGB_TEXTURES","ETC_TEXTURES","ASTC_TEXTURES","PVRTC_TEXTURES","LOSE_CONTEXT","TEXTURE_ANISOTROPY","DEBUG_RENDERER_INFO","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"mappings":"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","file":"picogl.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PicoGL\"] = factory();\n\telse\n\t\troot[\"PicoGL\"] = factory();\n})(self, function() {\nreturn ","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\n// https://www.khronos.org/registry/webgl/specs/1.0/\n// https://www.khronos.org/registry/webgl/specs/latest/2.0/#1.1\nexport const GL = {\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_BUFFER_BIT\n        @private\n     */\n    DEPTH_BUFFER_BIT: 0x00000100,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_BUFFER_BIT\n        @private\n     */\n    STENCIL_BUFFER_BIT: 0x00000400,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_BUFFER_BIT\n        @private\n     */\n    COLOR_BUFFER_BIT: 0x00004000,\n    /**\n        @type {GLenum}\n        @name PicoGL.POINTS\n        @private\n     */\n    POINTS: 0x0000,\n    /**\n        @type {GLenum}\n        @name PicoGL.LINES\n        @private\n     */\n    LINES: 0x0001,\n    /**\n        @type {GLenum}\n        @name PicoGL.LINE_LOOP\n        @private\n     */\n    LINE_LOOP: 0x0002,\n    /**\n        @type {GLenum}\n        @name PicoGL.LINE_STRIP\n        @private\n     */\n    LINE_STRIP: 0x0003,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRIANGLES\n        @private\n     */\n    TRIANGLES: 0x0004,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRIANGLE_STRIP\n        @private\n     */\n    TRIANGLE_STRIP: 0x0005,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRIANGLE_FAN\n        @private\n     */\n    TRIANGLE_FAN: 0x0006,\n    /**\n        @type {GLenum}\n        @name PicoGL.ZERO\n        @private\n     */\n    ZERO: 0,\n    /**\n        @type {GLenum}\n        @name PicoGL.ONE\n        @private\n     */\n    ONE: 1,\n    /**\n        @type {GLenum}\n        @name PicoGL.SRC_COLOR\n        @private\n     */\n    SRC_COLOR: 0x0300,\n    /**\n        @type {GLenum}\n        @name PicoGL.ONE_MINUS_SRC_COLOR\n        @private\n     */\n    ONE_MINUS_SRC_COLOR: 0x0301,\n    /**\n        @type {GLenum}\n        @name PicoGL.SRC_ALPHA\n        @private\n     */\n    SRC_ALPHA: 0x0302,\n    /**\n        @type {GLenum}\n        @name PicoGL.ONE_MINUS_SRC_ALPHA\n        @private\n     */\n    ONE_MINUS_SRC_ALPHA: 0x0303,\n    /**\n        @type {GLenum}\n        @name PicoGL.DST_ALPHA\n        @private\n     */\n    DST_ALPHA: 0x0304,\n    /**\n        @type {GLenum}\n        @name PicoGL.ONE_MINUS_DST_ALPHA\n        @private\n     */\n    ONE_MINUS_DST_ALPHA: 0x0305,\n    /**\n        @type {GLenum}\n        @name PicoGL.DST_COLOR\n        @private\n     */\n    DST_COLOR: 0x0306,\n    /**\n        @type {GLenum}\n        @name PicoGL.ONE_MINUS_DST_COLOR\n        @private\n     */\n    ONE_MINUS_DST_COLOR: 0x0307,\n    /**\n        @type {GLenum}\n        @name PicoGL.SRC_ALPHA_SATURATE\n        @private\n     */\n    SRC_ALPHA_SATURATE: 0x0308,\n    /**\n        @type {GLenum}\n        @name PicoGL.FUNC_ADD\n        @private\n     */\n    FUNC_ADD: 0x8006,\n    /**\n        @type {GLenum}\n        @name PicoGL.BLEND_EQUATION\n        @private\n     */\n    BLEND_EQUATION: 0x8009,\n    /**\n        @type {GLenum}\n        @name PicoGL.BLEND_EQUATION_RGB\n        @private\n     */\n    BLEND_EQUATION_RGB: 0x8009,\n    /**\n        @type {GLenum}\n        @name PicoGL.BLEND_EQUATION_ALPHA\n        @private\n     */\n    BLEND_EQUATION_ALPHA: 0x883D,\n    /**\n        @type {GLenum}\n        @name PicoGL.FUNC_SUBTRACT\n        @private\n     */\n    FUNC_SUBTRACT: 0x800A,\n    /**\n        @type {GLenum}\n        @name PicoGL.FUNC_REVERSE_SUBTRACT\n        @private\n     */\n    FUNC_REVERSE_SUBTRACT: 0x800B,\n    /**\n        @type {GLenum}\n        @name PicoGL.BLEND_DST_RGB\n        @private\n     */\n    BLEND_DST_RGB: 0x80C8,\n    /**\n        @type {GLenum}\n        @name PicoGL.BLEND_SRC_RGB\n        @private\n     */\n    BLEND_SRC_RGB: 0x80C9,\n    /**\n        @type {GLenum}\n        @name PicoGL.BLEND_DST_ALPHA\n        @private\n     */\n    BLEND_DST_ALPHA: 0x80CA,\n    /**\n        @type {GLenum}\n        @name PicoGL.BLEND_SRC_ALPHA\n        @private\n     */\n    BLEND_SRC_ALPHA: 0x80CB,\n    /**\n        @type {GLenum}\n        @name PicoGL.CONSTANT_COLOR\n        @private\n     */\n    CONSTANT_COLOR: 0x8001,\n    /**\n        @type {GLenum}\n        @name PicoGL.ONE_MINUS_CONSTANT_COLOR\n        @private\n     */\n    ONE_MINUS_CONSTANT_COLOR: 0x8002,\n    /**\n        @type {GLenum}\n        @name PicoGL.CONSTANT_ALPHA\n        @private\n     */\n    CONSTANT_ALPHA: 0x8003,\n    /**\n        @type {GLenum}\n        @name PicoGL.ONE_MINUS_CONSTANT_ALPHA\n        @private\n     */\n    ONE_MINUS_CONSTANT_ALPHA: 0x8004,\n    /**\n        @type {GLenum}\n        @name PicoGL.BLEND_COLOR\n        @private\n     */\n    BLEND_COLOR: 0x8005,\n    /**\n        @type {GLenum}\n        @name PicoGL.ARRAY_BUFFER\n        @private\n     */\n    ARRAY_BUFFER: 0x8892,\n    /**\n        @type {GLenum}\n        @name PicoGL.ELEMENT_ARRAY_BUFFER\n        @private\n     */\n    ELEMENT_ARRAY_BUFFER: 0x8893,\n    /**\n        @type {GLenum}\n        @name PicoGL.ARRAY_BUFFER_BINDING\n        @private\n     */\n    ARRAY_BUFFER_BINDING: 0x8894,\n    /**\n        @type {GLenum}\n        @name PicoGL.ELEMENT_ARRAY_BUFFER_BINDING\n        @private\n     */\n    ELEMENT_ARRAY_BUFFER_BINDING: 0x8895,\n    /**\n        @type {GLenum}\n        @name PicoGL.STREAM_DRAW\n        @private\n     */\n    STREAM_DRAW: 0x88E0,\n    /**\n        @type {GLenum}\n        @name PicoGL.STATIC_DRAW\n        @private\n     */\n    STATIC_DRAW: 0x88E4,\n    /**\n        @type {GLenum}\n        @name PicoGL.DYNAMIC_DRAW\n        @private\n     */\n    DYNAMIC_DRAW: 0x88E8,\n    /**\n        @type {GLenum}\n        @name PicoGL.BUFFER_SIZE\n        @private\n     */\n    BUFFER_SIZE: 0x8764,\n    /**\n        @type {GLenum}\n        @name PicoGL.BUFFER_USAGE\n        @private\n     */\n    BUFFER_USAGE: 0x8765,\n    /**\n        @type {GLenum}\n        @name PicoGL.CURRENT_VERTEX_ATTRIB\n        @private\n     */\n    CURRENT_VERTEX_ATTRIB: 0x8626,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRONT\n        @private\n     */\n    FRONT: 0x0404,\n    /**\n        @type {GLenum}\n        @name PicoGL.BACK\n        @private\n     */\n    BACK: 0x0405,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRONT_AND_BACK\n        @private\n     */\n    FRONT_AND_BACK: 0x0408,\n    /**\n        @type {GLenum}\n        @name PicoGL.CULL_FACE\n        @private\n     */\n    CULL_FACE: 0x0B44,\n    /**\n        @type {GLenum}\n        @name PicoGL.BLEND\n        @private\n     */\n    BLEND: 0x0BE2,\n    /**\n        @type {GLenum}\n        @name PicoGL.DITHER\n        @private\n     */\n    DITHER: 0x0BD0,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_TEST\n        @private\n     */\n    STENCIL_TEST: 0x0B90,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_TEST\n        @private\n     */\n    DEPTH_TEST: 0x0B71,\n    /**\n        @type {GLenum}\n        @name PicoGL.SCISSOR_TEST\n        @private\n     */\n    SCISSOR_TEST: 0x0C11,\n    /**\n        @type {GLenum}\n        @name PicoGL.POLYGON_OFFSET_FILL\n        @private\n     */\n    POLYGON_OFFSET_FILL: 0x8037,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLE_ALPHA_TO_COVERAGE\n        @private\n     */\n    SAMPLE_ALPHA_TO_COVERAGE: 0x809E,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLE_COVERAGE\n        @private\n     */\n    SAMPLE_COVERAGE: 0x80A0,\n    /**\n        @type {GLenum}\n        @name PicoGL.NO_ERROR\n        @private\n     */\n    NO_ERROR: 0,\n    /**\n        @type {GLenum}\n        @name PicoGL.INVALID_ENUM\n        @private\n     */\n    INVALID_ENUM: 0x0500,\n    /**\n        @type {GLenum}\n        @name PicoGL.INVALID_VALUE\n        @private\n     */\n    INVALID_VALUE: 0x0501,\n    /**\n        @type {GLenum}\n        @name PicoGL.INVALID_OPERATION\n        @private\n     */\n    INVALID_OPERATION: 0x0502,\n    /**\n        @type {GLenum}\n        @name PicoGL.OUT_OF_MEMORY\n        @private\n     */\n    OUT_OF_MEMORY: 0x0505,\n    /**\n        @type {GLenum}\n        @name PicoGL.CW\n        @private\n     */\n    CW: 0x0900,\n    /**\n        @type {GLenum}\n        @name PicoGL.CCW\n        @private\n     */\n    CCW: 0x0901,\n    /**\n        @type {GLenum}\n        @name PicoGL.LINE_WIDTH\n        @private\n     */\n    LINE_WIDTH: 0x0B21,\n    /**\n        @type {GLenum}\n        @name PicoGL.ALIASED_POINT_SIZE_RANGE\n        @private\n     */\n    ALIASED_POINT_SIZE_RANGE: 0x846D,\n    /**\n        @type {GLenum}\n        @name PicoGL.ALIASED_LINE_WIDTH_RANGE\n        @private\n     */\n    ALIASED_LINE_WIDTH_RANGE: 0x846E,\n    /**\n        @type {GLenum}\n        @name PicoGL.CULL_FACE_MODE\n        @private\n     */\n    CULL_FACE_MODE: 0x0B45,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRONT_FACE\n        @private\n     */\n    FRONT_FACE: 0x0B46,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_RANGE\n        @private\n     */\n    DEPTH_RANGE: 0x0B70,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_WRITEMASK\n        @private\n     */\n    DEPTH_WRITEMASK: 0x0B72,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_CLEAR_VALUE\n        @private\n     */\n    DEPTH_CLEAR_VALUE: 0x0B73,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_FUNC\n        @private\n     */\n    DEPTH_FUNC: 0x0B74,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_CLEAR_VALUE\n        @private\n     */\n    STENCIL_CLEAR_VALUE: 0x0B91,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_FUNC\n        @private\n     */\n    STENCIL_FUNC: 0x0B92,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_FAIL\n        @private\n     */\n    STENCIL_FAIL: 0x0B94,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_PASS_DEPTH_FAIL\n        @private\n     */\n    STENCIL_PASS_DEPTH_FAIL: 0x0B95,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_PASS_DEPTH_PASS\n        @private\n     */\n    STENCIL_PASS_DEPTH_PASS: 0x0B96,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_REF\n        @private\n     */\n    STENCIL_REF: 0x0B97,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_VALUE_MASK\n        @private\n     */\n    STENCIL_VALUE_MASK: 0x0B93,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_WRITEMASK\n        @private\n     */\n    STENCIL_WRITEMASK: 0x0B98,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_BACK_FUNC\n        @private\n     */\n    STENCIL_BACK_FUNC: 0x8800,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_BACK_FAIL\n        @private\n     */\n    STENCIL_BACK_FAIL: 0x8801,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_BACK_PASS_DEPTH_FAIL\n        @private\n     */\n    STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_BACK_PASS_DEPTH_PASS\n        @private\n     */\n    STENCIL_BACK_PASS_DEPTH_PASS: 0x8803,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_BACK_REF\n        @private\n     */\n    STENCIL_BACK_REF: 0x8CA3,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_BACK_VALUE_MASK\n        @private\n     */\n    STENCIL_BACK_VALUE_MASK: 0x8CA4,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_BACK_WRITEMASK\n        @private\n     */\n    STENCIL_BACK_WRITEMASK: 0x8CA5,\n    /**\n        @type {GLenum}\n        @name PicoGL.VIEWPORT\n        @private\n     */\n    VIEWPORT: 0x0BA2,\n    /**\n        @type {GLenum}\n        @name PicoGL.SCISSOR_BOX\n        @private\n     */\n    SCISSOR_BOX: 0x0C10,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_CLEAR_VALUE\n        @private\n     */\n    COLOR_CLEAR_VALUE: 0x0C22,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_WRITEMASK\n        @private\n     */\n    COLOR_WRITEMASK: 0x0C23,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNPACK_ALIGNMENT\n        @private\n     */\n    UNPACK_ALIGNMENT: 0x0CF5,\n    /**\n        @type {GLenum}\n        @name PicoGL.PACK_ALIGNMENT\n        @private\n     */\n    PACK_ALIGNMENT: 0x0D05,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_TEXTURE_SIZE\n        @private\n     */\n    MAX_TEXTURE_SIZE: 0x0D33,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_VIEWPORT_DIMS\n        @private\n     */\n    MAX_VIEWPORT_DIMS: 0x0D3A,\n    /**\n        @type {GLenum}\n        @name PicoGL.SUBPIXEL_BITS\n        @private\n     */\n    SUBPIXEL_BITS: 0x0D50,\n    /**\n        @type {GLenum}\n        @name PicoGL.RED_BITS\n        @private\n     */\n    RED_BITS: 0x0D52,\n    /**\n        @type {GLenum}\n        @name PicoGL.GREEN_BITS\n        @private\n     */\n    GREEN_BITS: 0x0D53,\n    /**\n        @type {GLenum}\n        @name PicoGL.BLUE_BITS\n        @private\n     */\n    BLUE_BITS: 0x0D54,\n    /**\n        @type {GLenum}\n        @name PicoGL.ALPHA_BITS\n        @private\n     */\n    ALPHA_BITS: 0x0D55,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_BITS\n        @private\n     */\n    DEPTH_BITS: 0x0D56,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_BITS\n        @private\n     */\n    STENCIL_BITS: 0x0D57,\n    /**\n        @type {GLenum}\n        @name PicoGL.POLYGON_OFFSET_UNITS\n        @private\n     */\n    POLYGON_OFFSET_UNITS: 0x2A00,\n    /**\n        @type {GLenum}\n        @name PicoGL.POLYGON_OFFSET_FACTOR\n        @private\n     */\n    POLYGON_OFFSET_FACTOR: 0x8038,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_BINDING_2D\n        @private\n     */\n    TEXTURE_BINDING_2D: 0x8069,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLE_BUFFERS\n        @private\n     */\n    SAMPLE_BUFFERS: 0x80A8,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLES\n        @private\n     */\n    SAMPLES: 0x80A9,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLE_COVERAGE_VALUE\n        @private\n     */\n    SAMPLE_COVERAGE_VALUE: 0x80AA,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLE_COVERAGE_INVERT\n        @private\n     */\n    SAMPLE_COVERAGE_INVERT: 0x80AB,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_TEXTURE_FORMATS\n        @private\n     */\n    COMPRESSED_TEXTURE_FORMATS: 0x86A3,\n    /**\n        @type {GLenum}\n        @name PicoGL.DONT_CARE\n        @private\n     */\n    DONT_CARE: 0x1100,\n    /**\n        @type {GLenum}\n        @name PicoGL.FASTEST\n        @private\n     */\n    FASTEST: 0x1101,\n    /**\n        @type {GLenum}\n        @name PicoGL.NICEST\n        @private\n     */\n    NICEST: 0x1102,\n    /**\n        @type {GLenum}\n        @name PicoGL.GENERATE_MIPMAP_HINT\n        @private\n     */\n    GENERATE_MIPMAP_HINT: 0x8192,\n    /**\n        @type {GLenum}\n        @name PicoGL.BYTE\n        @private\n     */\n    BYTE: 0x1400,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_BYTE\n        @private\n     */\n    UNSIGNED_BYTE: 0x1401,\n    /**\n        @type {GLenum}\n        @name PicoGL.SHORT\n        @private\n     */\n    SHORT: 0x1402,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_SHORT\n        @private\n     */\n    UNSIGNED_SHORT: 0x1403,\n    /**\n        @type {GLenum}\n        @name PicoGL.INT\n        @private\n     */\n    INT: 0x1404,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_INT\n        @private\n     */\n    UNSIGNED_INT: 0x1405,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT\n        @private\n     */\n    FLOAT: 0x1406,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_COMPONENT\n        @private\n     */\n    DEPTH_COMPONENT: 0x1902,\n    /**\n        @type {GLenum}\n        @name PicoGL.ALPHA\n        @private\n     */\n    ALPHA: 0x1906,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB\n        @private\n     */\n    RGB: 0x1907,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA\n        @private\n     */\n    RGBA: 0x1908,\n    /**\n        @type {GLenum}\n        @name PicoGL.LUMINANCE\n        @private\n     */\n    LUMINANCE: 0x1909,\n    /**\n        @type {GLenum}\n        @name PicoGL.LUMINANCE_ALPHA\n        @private\n     */\n    LUMINANCE_ALPHA: 0x190A,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_SHORT_4_4_4_4\n        @private\n     */\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_SHORT_5_5_5_1\n        @private\n     */\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_SHORT_5_6_5\n        @private\n     */\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAGMENT_SHADER\n        @private\n     */\n    FRAGMENT_SHADER: 0x8B30,\n    /**\n        @type {GLenum}\n        @name PicoGL.VERTEX_SHADER\n        @private\n     */\n    VERTEX_SHADER: 0x8B31,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_VERTEX_ATTRIBS\n        @private\n     */\n    MAX_VERTEX_ATTRIBS: 0x8869,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_VERTEX_UNIFORM_VECTORS\n        @private\n     */\n    MAX_VERTEX_UNIFORM_VECTORS: 0x8DFB,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_VARYING_VECTORS\n        @private\n     */\n    MAX_VARYING_VECTORS: 0x8DFC,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_COMBINED_TEXTURE_IMAGE_UNITS\n        @private\n     */\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8B4D,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_VERTEX_TEXTURE_IMAGE_UNITS\n        @private\n     */\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8B4C,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_TEXTURE_IMAGE_UNITS\n        @private\n     */\n    MAX_TEXTURE_IMAGE_UNITS: 0x8872,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_FRAGMENT_UNIFORM_VECTORS\n        @private\n     */\n    MAX_FRAGMENT_UNIFORM_VECTORS: 0x8DFD,\n    /**\n        @type {GLenum}\n        @name PicoGL.SHADER_TYPE\n        @private\n     */\n    SHADER_TYPE: 0x8B4F,\n    /**\n        @type {GLenum}\n        @name PicoGL.DELETE_STATUS\n        @private\n     */\n    DELETE_STATUS: 0x8B80,\n    /**\n        @type {GLenum}\n        @name PicoGL.LINK_STATUS\n        @private\n     */\n    LINK_STATUS: 0x8B82,\n    /**\n        @type {GLenum}\n        @name PicoGL.VALIDATE_STATUS\n        @private\n     */\n    VALIDATE_STATUS: 0x8B83,\n    /**\n        @type {GLenum}\n        @name PicoGL.ATTACHED_SHADERS\n        @private\n     */\n    ATTACHED_SHADERS: 0x8B85,\n    /**\n        @type {GLenum}\n        @name PicoGL.ACTIVE_UNIFORMS\n        @private\n     */\n    ACTIVE_UNIFORMS: 0x8B86,\n    /**\n        @type {GLenum}\n        @name PicoGL.ACTIVE_ATTRIBUTES\n        @private\n     */\n    ACTIVE_ATTRIBUTES: 0x8B89,\n    /**\n        @type {GLenum}\n        @name PicoGL.SHADING_LANGUAGE_VERSION\n        @private\n     */\n    SHADING_LANGUAGE_VERSION: 0x8B8C,\n    /**\n        @type {GLenum}\n        @name PicoGL.CURRENT_PROGRAM\n        @private\n     */\n    CURRENT_PROGRAM: 0x8B8D,\n    /**\n        @type {GLenum}\n        @name PicoGL.NEVER\n        @private\n     */\n    NEVER: 0x0200,\n    /**\n        @type {GLenum}\n        @name PicoGL.LESS\n        @private\n     */\n    LESS: 0x0201,\n    /**\n        @type {GLenum}\n        @name PicoGL.EQUAL\n        @private\n     */\n    EQUAL: 0x0202,\n    /**\n        @type {GLenum}\n        @name PicoGL.LEQUAL\n        @private\n     */\n    LEQUAL: 0x0203,\n    /**\n        @type {GLenum}\n        @name PicoGL.GREATER\n        @private\n     */\n    GREATER: 0x0204,\n    /**\n        @type {GLenum}\n        @name PicoGL.NOTEQUAL\n        @private\n     */\n    NOTEQUAL: 0x0205,\n    /**\n        @type {GLenum}\n        @name PicoGL.GEQUAL\n        @private\n     */\n    GEQUAL: 0x0206,\n    /**\n        @type {GLenum}\n        @name PicoGL.ALWAYS\n        @private\n     */\n    ALWAYS: 0x0207,\n    /**\n        @type {GLenum}\n        @name PicoGL.KEEP\n        @private\n     */\n    KEEP: 0x1E00,\n    /**\n        @type {GLenum}\n        @name PicoGL.REPLACE\n        @private\n     */\n    REPLACE: 0x1E01,\n    /**\n        @type {GLenum}\n        @name PicoGL.INCR\n        @private\n     */\n    INCR: 0x1E02,\n    /**\n        @type {GLenum}\n        @name PicoGL.DECR\n        @private\n     */\n    DECR: 0x1E03,\n    /**\n        @type {GLenum}\n        @name PicoGL.INVERT\n        @private\n     */\n    INVERT: 0x150A,\n    /**\n        @type {GLenum}\n        @name PicoGL.INCR_WRAP\n        @private\n     */\n    INCR_WRAP: 0x8507,\n    /**\n        @type {GLenum}\n        @name PicoGL.DECR_WRAP\n        @private\n     */\n    DECR_WRAP: 0x8508,\n    /**\n        @type {GLenum}\n        @name PicoGL.VENDOR\n        @private\n     */\n    VENDOR: 0x1F00,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERER\n        @private\n     */\n    RENDERER: 0x1F01,\n    /**\n        @type {GLenum}\n        @name PicoGL.VERSION\n        @private\n     */\n    VERSION: 0x1F02,\n    /**\n        @type {GLenum}\n        @name PicoGL.NEAREST\n        @private\n     */\n    NEAREST: 0x2600,\n    /**\n        @type {GLenum}\n        @name PicoGL.LINEAR\n        @private\n     */\n    LINEAR: 0x2601,\n    /**\n        @type {GLenum}\n        @name PicoGL.NEAREST_MIPMAP_NEAREST\n        @private\n     */\n    NEAREST_MIPMAP_NEAREST: 0x2700,\n    /**\n        @type {GLenum}\n        @name PicoGL.LINEAR_MIPMAP_NEAREST\n        @private\n     */\n    LINEAR_MIPMAP_NEAREST: 0x2701,\n    /**\n        @type {GLenum}\n        @name PicoGL.NEAREST_MIPMAP_LINEAR\n        @private\n     */\n    NEAREST_MIPMAP_LINEAR: 0x2702,\n    /**\n        @type {GLenum}\n        @name PicoGL.LINEAR_MIPMAP_LINEAR\n        @private\n     */\n    LINEAR_MIPMAP_LINEAR: 0x2703,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_MAG_FILTER\n        @private\n     */\n    TEXTURE_MAG_FILTER: 0x2800,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_MIN_FILTER\n        @private\n     */\n    TEXTURE_MIN_FILTER: 0x2801,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_WRAP_S\n        @private\n     */\n    TEXTURE_WRAP_S: 0x2802,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_WRAP_T\n        @private\n     */\n    TEXTURE_WRAP_T: 0x2803,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_2D\n        @private\n     */\n    TEXTURE_2D: 0x0DE1,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE\n        @private\n     */\n    TEXTURE: 0x1702,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_CUBE_MAP\n        @private\n     */\n    TEXTURE_CUBE_MAP: 0x8513,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_BINDING_CUBE_MAP\n        @private\n     */\n    TEXTURE_BINDING_CUBE_MAP: 0x8514,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_CUBE_MAP_POSITIVE_X\n        @private\n     */\n    TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_CUBE_MAP_NEGATIVE_X\n        @private\n     */\n    TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_CUBE_MAP_POSITIVE_Y\n        @private\n     */\n    TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_CUBE_MAP_NEGATIVE_Y\n        @private\n     */\n    TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_CUBE_MAP_POSITIVE_Z\n        @private\n     */\n    TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_CUBE_MAP_NEGATIVE_Z\n        @private\n     */\n    TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_CUBE_MAP_TEXTURE_SIZE\n        @private\n     */\n    MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE0\n        @private\n     */\n    TEXTURE0: 0x84C0,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE1\n        @private\n     */\n    TEXTURE1: 0x84C1,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE2\n        @private\n     */\n    TEXTURE2: 0x84C2,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE3\n        @private\n     */\n    TEXTURE3: 0x84C3,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE4\n        @private\n     */\n    TEXTURE4: 0x84C4,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE5\n        @private\n     */\n    TEXTURE5: 0x84C5,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE6\n        @private\n     */\n    TEXTURE6: 0x84C6,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE7\n        @private\n     */\n    TEXTURE7: 0x84C7,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE8\n        @private\n     */\n    TEXTURE8: 0x84C8,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE9\n        @private\n     */\n    TEXTURE9: 0x84C9,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE10\n        @private\n     */\n    TEXTURE10: 0x84CA,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE11\n        @private\n     */\n    TEXTURE11: 0x84CB,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE12\n        @private\n     */\n    TEXTURE12: 0x84CC,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE13\n        @private\n     */\n    TEXTURE13: 0x84CD,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE14\n        @private\n     */\n    TEXTURE14: 0x84CE,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE15\n        @private\n     */\n    TEXTURE15: 0x84CF,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE16\n        @private\n     */\n    TEXTURE16: 0x84D0,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE17\n        @private\n     */\n    TEXTURE17: 0x84D1,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE18\n        @private\n     */\n    TEXTURE18: 0x84D2,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE19\n        @private\n     */\n    TEXTURE19: 0x84D3,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE20\n        @private\n     */\n    TEXTURE20: 0x84D4,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE21\n        @private\n     */\n    TEXTURE21: 0x84D5,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE22\n        @private\n     */\n    TEXTURE22: 0x84D6,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE23\n        @private\n     */\n    TEXTURE23: 0x84D7,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE24\n        @private\n     */\n    TEXTURE24: 0x84D8,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE25\n        @private\n     */\n    TEXTURE25: 0x84D9,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE26\n        @private\n     */\n    TEXTURE26: 0x84DA,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE27\n        @private\n     */\n    TEXTURE27: 0x84DB,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE28\n        @private\n     */\n    TEXTURE28: 0x84DC,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE29\n        @private\n     */\n    TEXTURE29: 0x84DD,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE30\n        @private\n     */\n    TEXTURE30: 0x84DE,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE31\n        @private\n     */\n    TEXTURE31: 0x84DF,\n    /**\n        @type {GLenum}\n        @name PicoGL.ACTIVE_TEXTURE\n        @private\n     */\n    ACTIVE_TEXTURE: 0x84E0,\n    /**\n        @type {GLenum}\n        @name PicoGL.REPEAT\n        @private\n     */\n    REPEAT: 0x2901,\n    /**\n        @type {GLenum}\n        @name PicoGL.CLAMP_TO_EDGE\n        @private\n     */\n    CLAMP_TO_EDGE: 0x812F,\n    /**\n        @type {GLenum}\n        @name PicoGL.MIRRORED_REPEAT\n        @private\n     */\n    MIRRORED_REPEAT: 0x8370,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_VEC2\n        @private\n     */\n    FLOAT_VEC2: 0x8B50,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_VEC3\n        @private\n     */\n    FLOAT_VEC3: 0x8B51,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_VEC4\n        @private\n     */\n    FLOAT_VEC4: 0x8B52,\n    /**\n        @type {GLenum}\n        @name PicoGL.INT_VEC2\n        @private\n     */\n    INT_VEC2: 0x8B53,\n    /**\n        @type {GLenum}\n        @name PicoGL.INT_VEC3\n        @private\n     */\n    INT_VEC3: 0x8B54,\n    /**\n        @type {GLenum}\n        @name PicoGL.INT_VEC4\n        @private\n     */\n    INT_VEC4: 0x8B55,\n    /**\n        @type {GLenum}\n        @name PicoGL.BOOL\n        @private\n     */\n    BOOL: 0x8B56,\n    /**\n        @type {GLenum}\n        @name PicoGL.BOOL_VEC2\n        @private\n     */\n    BOOL_VEC2: 0x8B57,\n    /**\n        @type {GLenum}\n        @name PicoGL.BOOL_VEC3\n        @private\n     */\n    BOOL_VEC3: 0x8B58,\n    /**\n        @type {GLenum}\n        @name PicoGL.BOOL_VEC4\n        @private\n     */\n    BOOL_VEC4: 0x8B59,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_MAT2\n        @private\n     */\n    FLOAT_MAT2: 0x8B5A,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_MAT3\n        @private\n     */\n    FLOAT_MAT3: 0x8B5B,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_MAT4\n        @private\n     */\n    FLOAT_MAT4: 0x8B5C,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLER_2D\n        @private\n     */\n    SAMPLER_2D: 0x8B5E,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLER_CUBE\n        @private\n     */\n    SAMPLER_CUBE: 0x8B60,\n    /**\n        @type {GLenum}\n        @name PicoGL.VERTEX_ATTRIB_ARRAY_ENABLED\n        @private\n     */\n    VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622,\n    /**\n        @type {GLenum}\n        @name PicoGL.VERTEX_ATTRIB_ARRAY_SIZE\n        @private\n     */\n    VERTEX_ATTRIB_ARRAY_SIZE: 0x8623,\n    /**\n        @type {GLenum}\n        @name PicoGL.VERTEX_ATTRIB_ARRAY_STRIDE\n        @private\n     */\n    VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624,\n    /**\n        @type {GLenum}\n        @name PicoGL.VERTEX_ATTRIB_ARRAY_TYPE\n        @private\n     */\n    VERTEX_ATTRIB_ARRAY_TYPE: 0x8625,\n    /**\n        @type {GLenum}\n        @name PicoGL.VERTEX_ATTRIB_ARRAY_NORMALIZED\n        @private\n     */\n    VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886A,\n    /**\n        @type {GLenum}\n        @name PicoGL.VERTEX_ATTRIB_ARRAY_POINTER\n        @private\n     */\n    VERTEX_ATTRIB_ARRAY_POINTER: 0x8645,\n    /**\n        @type {GLenum}\n        @name PicoGL.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\n        @private\n     */\n    VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889F,\n    /**\n        @type {GLenum}\n        @name PicoGL.IMPLEMENTATION_COLOR_READ_TYPE\n        @private\n     */\n    IMPLEMENTATION_COLOR_READ_TYPE: 0x8B9A,\n    /**\n        @type {GLenum}\n        @name PicoGL.IMPLEMENTATION_COLOR_READ_FORMAT\n        @private\n     */\n    IMPLEMENTATION_COLOR_READ_FORMAT: 0x8B9B,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPILE_STATUS\n        @private\n     */\n    COMPILE_STATUS: 0x8B81,\n    /**\n        @type {GLenum}\n        @name PicoGL.LOW_FLOAT\n        @private\n     */\n    LOW_FLOAT: 0x8DF0,\n    /**\n        @type {GLenum}\n        @name PicoGL.MEDIUM_FLOAT\n        @private\n     */\n    MEDIUM_FLOAT: 0x8DF1,\n    /**\n        @type {GLenum}\n        @name PicoGL.HIGH_FLOAT\n        @private\n     */\n    HIGH_FLOAT: 0x8DF2,\n    /**\n        @type {GLenum}\n        @name PicoGL.LOW_INT\n        @private\n     */\n    LOW_INT: 0x8DF3,\n    /**\n        @type {GLenum}\n        @name PicoGL.MEDIUM_INT\n        @private\n     */\n    MEDIUM_INT: 0x8DF4,\n    /**\n        @type {GLenum}\n        @name PicoGL.HIGH_INT\n        @private\n     */\n    HIGH_INT: 0x8DF5,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER\n        @private\n     */\n    FRAMEBUFFER: 0x8D40,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERBUFFER\n        @private\n     */\n    RENDERBUFFER: 0x8D41,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA4\n        @private\n     */\n    RGBA4: 0x8056,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB5_A1\n        @private\n     */\n    RGB5_A1: 0x8057,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB565\n        @private\n     */\n    RGB565: 0x8D62,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_COMPONENT16\n        @private\n     */\n    DEPTH_COMPONENT16: 0x81A5,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_INDEX\n        @private\n     */\n    STENCIL_INDEX: 0x1901,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_INDEX8\n        @private\n     */\n    STENCIL_INDEX8: 0x8D48,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_STENCIL\n        @private\n     */\n    DEPTH_STENCIL: 0x84F9,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERBUFFER_WIDTH\n        @private\n     */\n    RENDERBUFFER_WIDTH: 0x8D42,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERBUFFER_HEIGHT\n        @private\n     */\n    RENDERBUFFER_HEIGHT: 0x8D43,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERBUFFER_INTERNAL_FORMAT\n        @private\n     */\n    RENDERBUFFER_INTERNAL_FORMAT: 0x8D44,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERBUFFER_RED_SIZE\n        @private\n     */\n    RENDERBUFFER_RED_SIZE: 0x8D50,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERBUFFER_GREEN_SIZE\n        @private\n     */\n    RENDERBUFFER_GREEN_SIZE: 0x8D51,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERBUFFER_BLUE_SIZE\n        @private\n     */\n    RENDERBUFFER_BLUE_SIZE: 0x8D52,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERBUFFER_ALPHA_SIZE\n        @private\n     */\n    RENDERBUFFER_ALPHA_SIZE: 0x8D53,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERBUFFER_DEPTH_SIZE\n        @private\n     */\n    RENDERBUFFER_DEPTH_SIZE: 0x8D54,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERBUFFER_STENCIL_SIZE\n        @private\n     */\n    RENDERBUFFER_STENCIL_SIZE: 0x8D55,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8CD0,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8CD1,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8CD2,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8CD3,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT0\n        @private\n     */\n    COLOR_ATTACHMENT0: 0x8CE0,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_ATTACHMENT\n        @private\n     */\n    DEPTH_ATTACHMENT: 0x8D00,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL_ATTACHMENT\n        @private\n     */\n    STENCIL_ATTACHMENT: 0x8D20,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_STENCIL_ATTACHMENT\n        @private\n     */\n    DEPTH_STENCIL_ATTACHMENT: 0x821A,\n    /**\n        @type {GLenum}\n        @name PicoGL.NONE\n        @private\n     */\n    NONE: 0,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_COMPLETE\n        @private\n     */\n    FRAMEBUFFER_COMPLETE: 0x8CD5,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_INCOMPLETE_ATTACHMENT\n        @private\n     */\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8CD6,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\n        @private\n     */\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8CD7,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_INCOMPLETE_DIMENSIONS\n        @private\n     */\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8CD9,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_UNSUPPORTED\n        @private\n     */\n    FRAMEBUFFER_UNSUPPORTED: 0x8CDD,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_BINDING\n        @private\n     */\n    FRAMEBUFFER_BINDING: 0x8CA6,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERBUFFER_BINDING\n        @private\n     */\n    RENDERBUFFER_BINDING: 0x8CA7,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_RENDERBUFFER_SIZE\n        @private\n     */\n    MAX_RENDERBUFFER_SIZE: 0x84E8,\n    /**\n        @type {GLenum}\n        @name PicoGL.INVALID_FRAMEBUFFER_OPERATION\n        @private\n     */\n    INVALID_FRAMEBUFFER_OPERATION: 0x0506,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNPACK_FLIP_Y_WEBGL\n        @private\n     */\n    UNPACK_FLIP_Y_WEBGL: 0x9240,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNPACK_PREMULTIPLY_ALPHA_WEBGL\n        @private\n     */\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241,\n    /**\n        @type {GLenum}\n        @name PicoGL.CONTEXT_LOST_WEBGL\n        @private\n     */\n    CONTEXT_LOST_WEBGL: 0x9242,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNPACK_COLORSPACE_CONVERSION_WEBGL\n        @private\n     */\n    UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243,\n    /**\n        @type {GLenum}\n        @name PicoGL.BROWSER_DEFAULT_WEBGL\n        @private\n     */\n    BROWSER_DEFAULT_WEBGL: 0x9244,\n    /**\n        @type {GLenum}\n        @name PicoGL.READ_BUFFER\n        @private\n     */\n    READ_BUFFER: 0x0C02,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNPACK_ROW_LENGTH\n        @private\n     */\n    UNPACK_ROW_LENGTH: 0x0CF2,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNPACK_SKIP_ROWS\n        @private\n     */\n    UNPACK_SKIP_ROWS: 0x0CF3,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNPACK_SKIP_PIXELS\n        @private\n     */\n    UNPACK_SKIP_PIXELS: 0x0CF4,\n    /**\n        @type {GLenum}\n        @name PicoGL.PACK_ROW_LENGTH\n        @private\n     */\n    PACK_ROW_LENGTH: 0x0D02,\n    /**\n        @type {GLenum}\n        @name PicoGL.PACK_SKIP_ROWS\n        @private\n     */\n    PACK_SKIP_ROWS: 0x0D03,\n    /**\n        @type {GLenum}\n        @name PicoGL.PACK_SKIP_PIXELS\n        @private\n     */\n    PACK_SKIP_PIXELS: 0x0D04,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR\n        @private\n     */\n    COLOR: 0x1800,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH\n        @private\n     */\n    DEPTH: 0x1801,\n    /**\n        @type {GLenum}\n        @name PicoGL.STENCIL\n        @private\n     */\n    STENCIL: 0x1802,\n    /**\n        @type {GLenum}\n        @name PicoGL.RED\n        @private\n     */\n    RED: 0x1903,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB8\n        @private\n     */\n    RGB8: 0x8051,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA8\n        @private\n     */\n    RGBA8: 0x8058,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB10_A2\n        @private\n     */\n    RGB10_A2: 0x8059,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_BINDING_3D\n        @private\n     */\n    TEXTURE_BINDING_3D: 0x806A,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNPACK_SKIP_IMAGES\n        @private\n     */\n    UNPACK_SKIP_IMAGES: 0x806D,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNPACK_IMAGE_HEIGHT\n        @private\n     */\n    UNPACK_IMAGE_HEIGHT: 0x806E,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_3D\n        @private\n     */\n    TEXTURE_3D: 0x806F,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_WRAP_R\n        @private\n     */\n    TEXTURE_WRAP_R: 0x8072,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_3D_TEXTURE_SIZE\n        @private\n     */\n    MAX_3D_TEXTURE_SIZE: 0x8073,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_INT_2_10_10_10_REV\n        @private\n     */\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_ELEMENTS_VERTICES\n        @private\n     */\n    MAX_ELEMENTS_VERTICES: 0x80E8,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_ELEMENTS_INDICES\n        @private\n     */\n    MAX_ELEMENTS_INDICES: 0x80E9,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_MIN_LOD\n        @private\n     */\n    TEXTURE_MIN_LOD: 0x813A,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_MAX_LOD\n        @private\n     */\n    TEXTURE_MAX_LOD: 0x813B,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_BASE_LEVEL\n        @private\n     */\n    TEXTURE_BASE_LEVEL: 0x813C,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_MAX_LEVEL\n        @private\n     */\n    TEXTURE_MAX_LEVEL: 0x813D,\n    /**\n        @type {GLenum}\n        @name PicoGL.MIN\n        @private\n     */\n    MIN: 0x8007,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX\n        @private\n     */\n    MAX: 0x8008,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_COMPONENT24\n        @private\n     */\n    DEPTH_COMPONENT24: 0x81A6,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_TEXTURE_LOD_BIAS\n        @private\n     */\n    MAX_TEXTURE_LOD_BIAS: 0x84FD,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_COMPARE_MODE\n        @private\n     */\n    TEXTURE_COMPARE_MODE: 0x884C,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_COMPARE_FUNC\n        @private\n     */\n    TEXTURE_COMPARE_FUNC: 0x884D,\n    /**\n        @type {GLenum}\n        @name PicoGL.CURRENT_QUERY\n        @private\n     */\n    CURRENT_QUERY: 0x8865,\n    /**\n        @type {GLenum}\n        @name PicoGL.QUERY_RESULT\n        @private\n     */\n    QUERY_RESULT: 0x8866,\n    /**\n        @type {GLenum}\n        @name PicoGL.QUERY_RESULT_AVAILABLE\n        @private\n     */\n    QUERY_RESULT_AVAILABLE: 0x8867,\n    /**\n        @type {GLenum}\n        @name PicoGL.STREAM_READ\n        @private\n     */\n    STREAM_READ: 0x88E1,\n    /**\n        @type {GLenum}\n        @name PicoGL.STREAM_COPY\n        @private\n     */\n    STREAM_COPY: 0x88E2,\n    /**\n        @type {GLenum}\n        @name PicoGL.STATIC_READ\n        @private\n     */\n    STATIC_READ: 0x88E5,\n    /**\n        @type {GLenum}\n        @name PicoGL.STATIC_COPY\n        @private\n     */\n    STATIC_COPY: 0x88E6,\n    /**\n        @type {GLenum}\n        @name PicoGL.DYNAMIC_READ\n        @private\n     */\n    DYNAMIC_READ: 0x88E9,\n    /**\n        @type {GLenum}\n        @name PicoGL.DYNAMIC_COPY\n        @private\n     */\n    DYNAMIC_COPY: 0x88EA,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_DRAW_BUFFERS\n        @private\n     */\n    MAX_DRAW_BUFFERS: 0x8824,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER0\n        @private\n     */\n    DRAW_BUFFER0: 0x8825,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER1\n        @private\n     */\n    DRAW_BUFFER1: 0x8826,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER2\n        @private\n     */\n    DRAW_BUFFER2: 0x8827,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER3\n        @private\n     */\n    DRAW_BUFFER3: 0x8828,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER4\n        @private\n     */\n    DRAW_BUFFER4: 0x8829,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER5\n        @private\n     */\n    DRAW_BUFFER5: 0x882A,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER6\n        @private\n     */\n    DRAW_BUFFER6: 0x882B,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER7\n        @private\n     */\n    DRAW_BUFFER7: 0x882C,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER8\n        @private\n     */\n    DRAW_BUFFER8: 0x882D,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER9\n        @private\n     */\n    DRAW_BUFFER9: 0x882E,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER10\n        @private\n     */\n    DRAW_BUFFER10: 0x882F,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER11\n        @private\n     */\n    DRAW_BUFFER11: 0x8830,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER12\n        @private\n     */\n    DRAW_BUFFER12: 0x8831,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER13\n        @private\n     */\n    DRAW_BUFFER13: 0x8832,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER14\n        @private\n     */\n    DRAW_BUFFER14: 0x8833,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_BUFFER15\n        @private\n     */\n    DRAW_BUFFER15: 0x8834,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_FRAGMENT_UNIFORM_COMPONENTS\n        @private\n     */\n    MAX_FRAGMENT_UNIFORM_COMPONENTS: 0x8B49,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_VERTEX_UNIFORM_COMPONENTS\n        @private\n     */\n    MAX_VERTEX_UNIFORM_COMPONENTS: 0x8B4A,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLER_3D\n        @private\n     */\n    SAMPLER_3D: 0x8B5F,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLER_2D_SHADOW\n        @private\n     */\n    SAMPLER_2D_SHADOW: 0x8B62,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAGMENT_SHADER_DERIVATIVE_HINT\n        @private\n     */\n    FRAGMENT_SHADER_DERIVATIVE_HINT: 0x8B8B,\n    /**\n        @type {GLenum}\n        @name PicoGL.PIXEL_PACK_BUFFER\n        @private\n     */\n    PIXEL_PACK_BUFFER: 0x88EB,\n    /**\n        @type {GLenum}\n        @name PicoGL.PIXEL_UNPACK_BUFFER\n        @private\n     */\n    PIXEL_UNPACK_BUFFER: 0x88EC,\n    /**\n        @type {GLenum}\n        @name PicoGL.PIXEL_PACK_BUFFER_BINDING\n        @private\n     */\n    PIXEL_PACK_BUFFER_BINDING: 0x88ED,\n    /**\n        @type {GLenum}\n        @name PicoGL.PIXEL_UNPACK_BUFFER_BINDING\n        @private\n     */\n    PIXEL_UNPACK_BUFFER_BINDING: 0x88EF,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_MAT2x3\n        @private\n     */\n    FLOAT_MAT2x3: 0x8B65,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_MAT2x4\n        @private\n     */\n    FLOAT_MAT2x4: 0x8B66,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_MAT3x2\n        @private\n     */\n    FLOAT_MAT3x2: 0x8B67,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_MAT3x4\n        @private\n     */\n    FLOAT_MAT3x4: 0x8B68,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_MAT4x2\n        @private\n     */\n    FLOAT_MAT4x2: 0x8B69,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_MAT4x3\n        @private\n     */\n    FLOAT_MAT4x3: 0x8B6A,\n    /**\n        @type {GLenum}\n        @name PicoGL.SRGB\n        @private\n     */\n    SRGB: 0x8C40,\n    /**\n        @type {GLenum}\n        @name PicoGL.SRGB8\n        @private\n     */\n    SRGB8: 0x8C41,\n    /**\n        @type {GLenum}\n        @name PicoGL.SRGB8_ALPHA8\n        @private\n     */\n    SRGB8_ALPHA8: 0x8C43,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPARE_REF_TO_TEXTURE\n        @private\n     */\n    COMPARE_REF_TO_TEXTURE: 0x884E,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA32F\n        @private\n     */\n    RGBA32F: 0x8814,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB32F\n        @private\n     */\n    RGB32F: 0x8815,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA16F\n        @private\n     */\n    RGBA16F: 0x881A,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB16F\n        @private\n     */\n    RGB16F: 0x881B,\n    /**\n        @type {GLenum}\n        @name PicoGL.VERTEX_ATTRIB_ARRAY_INTEGER\n        @private\n     */\n    VERTEX_ATTRIB_ARRAY_INTEGER: 0x88FD,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_ARRAY_TEXTURE_LAYERS\n        @private\n     */\n    MAX_ARRAY_TEXTURE_LAYERS: 0x88FF,\n    /**\n        @type {GLenum}\n        @name PicoGL.MIN_PROGRAM_TEXEL_OFFSET\n        @private\n     */\n    MIN_PROGRAM_TEXEL_OFFSET: 0x8904,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_PROGRAM_TEXEL_OFFSET\n        @private\n     */\n    MAX_PROGRAM_TEXEL_OFFSET: 0x8905,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_VARYING_COMPONENTS\n        @private\n     */\n    MAX_VARYING_COMPONENTS: 0x8B4B,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_2D_ARRAY\n        @private\n     */\n    TEXTURE_2D_ARRAY: 0x8C1A,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_BINDING_2D_ARRAY\n        @private\n     */\n    TEXTURE_BINDING_2D_ARRAY: 0x8C1D,\n    /**\n        @type {GLenum}\n        @name PicoGL.R11F_G11F_B10F\n        @private\n     */\n    R11F_G11F_B10F: 0x8C3A,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_INT_10F_11F_11F_REV\n        @private\n     */\n    UNSIGNED_INT_10F_11F_11F_REV: 0x8C3B,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB9_E5\n        @private\n     */\n    RGB9_E5: 0x8C3D,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_INT_5_9_9_9_REV\n        @private\n     */\n    UNSIGNED_INT_5_9_9_9_REV: 0x8C3E,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRANSFORM_FEEDBACK_BUFFER_MODE\n        @private\n     */\n    TRANSFORM_FEEDBACK_BUFFER_MODE: 0x8C7F,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS\n        @private\n     */\n    MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 0x8C80,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRANSFORM_FEEDBACK_VARYINGS\n        @private\n     */\n    TRANSFORM_FEEDBACK_VARYINGS: 0x8C83,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRANSFORM_FEEDBACK_BUFFER_START\n        @private\n     */\n    TRANSFORM_FEEDBACK_BUFFER_START: 0x8C84,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRANSFORM_FEEDBACK_BUFFER_SIZE\n        @private\n     */\n    TRANSFORM_FEEDBACK_BUFFER_SIZE: 0x8C85,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN\n        @private\n     */\n    TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 0x8C88,\n    /**\n        @type {GLenum}\n        @name PicoGL.RASTERIZER_DISCARD\n        @private\n     */\n    RASTERIZER_DISCARD: 0x8C89,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS\n        @private\n     */\n    MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 0x8C8A,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS\n        @private\n     */\n    MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 0x8C8B,\n    /**\n        @type {GLenum}\n        @name PicoGL.INTERLEAVED_ATTRIBS\n        @private\n     */\n    INTERLEAVED_ATTRIBS: 0x8C8C,\n    /**\n        @type {GLenum}\n        @name PicoGL.SEPARATE_ATTRIBS\n        @private\n     */\n    SEPARATE_ATTRIBS: 0x8C8D,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRANSFORM_FEEDBACK_BUFFER\n        @private\n     */\n    TRANSFORM_FEEDBACK_BUFFER: 0x8C8E,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRANSFORM_FEEDBACK_BUFFER_BINDING\n        @private\n     */\n    TRANSFORM_FEEDBACK_BUFFER_BINDING: 0x8C8F,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA32UI\n        @private\n     */\n    RGBA32UI: 0x8D70,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB32UI\n        @private\n     */\n    RGB32UI: 0x8D71,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA16UI\n        @private\n     */\n    RGBA16UI: 0x8D76,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB16UI\n        @private\n     */\n    RGB16UI: 0x8D77,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA8UI\n        @private\n     */\n    RGBA8UI: 0x8D7C,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB8UI\n        @private\n     */\n    RGB8UI: 0x8D7D,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA32I\n        @private\n     */\n    RGBA32I: 0x8D82,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB32I\n        @private\n     */\n    RGB32I: 0x8D83,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA16I\n        @private\n     */\n    RGBA16I: 0x8D88,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB16I\n        @private\n     */\n    RGB16I: 0x8D89,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA8I\n        @private\n     */\n    RGBA8I: 0x8D8E,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB8I\n        @private\n     */\n    RGB8I: 0x8D8F,\n    /**\n        @type {GLenum}\n        @name PicoGL.RED_INTEGER\n        @private\n     */\n    RED_INTEGER: 0x8D94,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB_INTEGER\n        @private\n     */\n    RGB_INTEGER: 0x8D98,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA_INTEGER\n        @private\n     */\n    RGBA_INTEGER: 0x8D99,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLER_2D_ARRAY\n        @private\n     */\n    SAMPLER_2D_ARRAY: 0x8DC1,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLER_2D_ARRAY_SHADOW\n        @private\n     */\n    SAMPLER_2D_ARRAY_SHADOW: 0x8DC4,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLER_CUBE_SHADOW\n        @private\n     */\n    SAMPLER_CUBE_SHADOW: 0x8DC5,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_INT_VEC2\n        @private\n     */\n    UNSIGNED_INT_VEC2: 0x8DC6,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_INT_VEC3\n        @private\n     */\n    UNSIGNED_INT_VEC3: 0x8DC7,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_INT_VEC4\n        @private\n     */\n    UNSIGNED_INT_VEC4: 0x8DC8,\n    /**\n        @type {GLenum}\n        @name PicoGL.INT_SAMPLER_2D\n        @private\n     */\n    INT_SAMPLER_2D: 0x8DCA,\n    /**\n        @type {GLenum}\n        @name PicoGL.INT_SAMPLER_3D\n        @private\n     */\n    INT_SAMPLER_3D: 0x8DCB,\n    /**\n        @type {GLenum}\n        @name PicoGL.INT_SAMPLER_CUBE\n        @private\n     */\n    INT_SAMPLER_CUBE: 0x8DCC,\n    /**\n        @type {GLenum}\n        @name PicoGL.INT_SAMPLER_2D_ARRAY\n        @private\n     */\n    INT_SAMPLER_2D_ARRAY: 0x8DCF,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_INT_SAMPLER_2D\n        @private\n     */\n    UNSIGNED_INT_SAMPLER_2D: 0x8DD2,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_INT_SAMPLER_3D\n        @private\n     */\n    UNSIGNED_INT_SAMPLER_3D: 0x8DD3,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_INT_SAMPLER_CUBE\n        @private\n     */\n    UNSIGNED_INT_SAMPLER_CUBE: 0x8DD4,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_INT_SAMPLER_2D_ARRAY\n        @private\n     */\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8DD7,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH_COMPONENT32F\n        @private\n     */\n    DEPTH_COMPONENT32F: 0x8CAC,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH32F_STENCIL8\n        @private\n     */\n    DEPTH32F_STENCIL8: 0x8CAD,\n    /**\n        @type {GLenum}\n        @name PicoGL.FLOAT_32_UNSIGNED_INT_24_8_REV\n        @private\n     */\n    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8DAD,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 0x8210,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 0x8211,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_RED_SIZE\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_RED_SIZE: 0x8212,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 0x8213,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 0x8214,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 0x8215,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 0x8216,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 0x8217,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_DEFAULT\n        @private\n     */\n    FRAMEBUFFER_DEFAULT: 0x8218,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_INT_24_8\n        @private\n     */\n    UNSIGNED_INT_24_8: 0x84FA,\n    /**\n        @type {GLenum}\n        @name PicoGL.DEPTH24_STENCIL8\n        @private\n     */\n    DEPTH24_STENCIL8: 0x88F0,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNED_NORMALIZED\n        @private\n     */\n    UNSIGNED_NORMALIZED: 0x8C17,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_FRAMEBUFFER_BINDING\n        @private\n     */\n    DRAW_FRAMEBUFFER_BINDING: 0x8CA6,\n    /**\n        @type {GLenum}\n        @name PicoGL.READ_FRAMEBUFFER\n        @private\n     */\n    READ_FRAMEBUFFER: 0x8CA8,\n    /**\n        @type {GLenum}\n        @name PicoGL.DRAW_FRAMEBUFFER\n        @private\n     */\n    DRAW_FRAMEBUFFER: 0x8CA9,\n    /**\n        @type {GLenum}\n        @name PicoGL.READ_FRAMEBUFFER_BINDING\n        @private\n     */\n    READ_FRAMEBUFFER_BINDING: 0x8CAA,\n    /**\n        @type {GLenum}\n        @name PicoGL.RENDERBUFFER_SAMPLES\n        @private\n     */\n    RENDERBUFFER_SAMPLES: 0x8CAB,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER\n        @private\n     */\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 0x8CD4,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_COLOR_ATTACHMENTS\n        @private\n     */\n    MAX_COLOR_ATTACHMENTS: 0x8CDF,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT1\n        @private\n     */\n    COLOR_ATTACHMENT1: 0x8CE1,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT2\n        @private\n     */\n    COLOR_ATTACHMENT2: 0x8CE2,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT3\n        @private\n     */\n    COLOR_ATTACHMENT3: 0x8CE3,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT4\n        @private\n     */\n    COLOR_ATTACHMENT4: 0x8CE4,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT5\n        @private\n     */\n    COLOR_ATTACHMENT5: 0x8CE5,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT6\n        @private\n     */\n    COLOR_ATTACHMENT6: 0x8CE6,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT7\n        @private\n     */\n    COLOR_ATTACHMENT7: 0x8CE7,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT8\n        @private\n     */\n    COLOR_ATTACHMENT8: 0x8CE8,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT9\n        @private\n     */\n    COLOR_ATTACHMENT9: 0x8CE9,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT10\n        @private\n     */\n    COLOR_ATTACHMENT10: 0x8CEA,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT11\n        @private\n     */\n    COLOR_ATTACHMENT11: 0x8CEB,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT12\n        @private\n     */\n    COLOR_ATTACHMENT12: 0x8CEC,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT13\n        @private\n     */\n    COLOR_ATTACHMENT13: 0x8CED,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT14\n        @private\n     */\n    COLOR_ATTACHMENT14: 0x8CEE,\n    /**\n        @type {GLenum}\n        @name PicoGL.COLOR_ATTACHMENT15\n        @private\n     */\n    COLOR_ATTACHMENT15: 0x8CEF,\n    /**\n        @type {GLenum}\n        @name PicoGL.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE\n        @private\n     */\n    FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 0x8D56,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_SAMPLES\n        @private\n     */\n    MAX_SAMPLES: 0x8D57,\n    /**\n        @type {GLenum}\n        @name PicoGL.HALF_FLOAT\n        @private\n     */\n    HALF_FLOAT: 0x140B,\n    /**\n        @type {GLenum}\n        @name PicoGL.RG\n        @private\n     */\n    RG: 0x8227,\n    /**\n        @type {GLenum}\n        @name PicoGL.RG_INTEGER\n        @private\n     */\n    RG_INTEGER: 0x8228,\n    /**\n        @type {GLenum}\n        @name PicoGL.R8\n        @private\n     */\n    R8: 0x8229,\n    /**\n        @type {GLenum}\n        @name PicoGL.RG8\n        @private\n     */\n    RG8: 0x822B,\n    /**\n        @type {GLenum}\n        @name PicoGL.R16F\n        @private\n     */\n    R16F: 0x822D,\n    /**\n        @type {GLenum}\n        @name PicoGL.R32F\n        @private\n     */\n    R32F: 0x822E,\n    /**\n        @type {GLenum}\n        @name PicoGL.RG16F\n        @private\n     */\n    RG16F: 0x822F,\n    /**\n        @type {GLenum}\n        @name PicoGL.RG32F\n        @private\n     */\n    RG32F: 0x8230,\n    /**\n        @type {GLenum}\n        @name PicoGL.R8I\n        @private\n     */\n    R8I: 0x8231,\n    /**\n        @type {GLenum}\n        @name PicoGL.R8UI\n        @private\n     */\n    R8UI: 0x8232,\n    /**\n        @type {GLenum}\n        @name PicoGL.R16I\n        @private\n     */\n    R16I: 0x8233,\n    /**\n        @type {GLenum}\n        @name PicoGL.R16UI\n        @private\n     */\n    R16UI: 0x8234,\n    /**\n        @type {GLenum}\n        @name PicoGL.R32I\n        @private\n     */\n    R32I: 0x8235,\n    /**\n        @type {GLenum}\n        @name PicoGL.R32UI\n        @private\n     */\n    R32UI: 0x8236,\n    /**\n        @type {GLenum}\n        @name PicoGL.RG8I\n        @private\n     */\n    RG8I: 0x8237,\n    /**\n        @type {GLenum}\n        @name PicoGL.RG8UI\n        @private\n     */\n    RG8UI: 0x8238,\n    /**\n        @type {GLenum}\n        @name PicoGL.RG16I\n        @private\n     */\n    RG16I: 0x8239,\n    /**\n        @type {GLenum}\n        @name PicoGL.RG16UI\n        @private\n     */\n    RG16UI: 0x823A,\n    /**\n        @type {GLenum}\n        @name PicoGL.RG32I\n        @private\n     */\n    RG32I: 0x823B,\n    /**\n        @type {GLenum}\n        @name PicoGL.RG32UI\n        @private\n     */\n    RG32UI: 0x823C,\n    /**\n        @type {GLenum}\n        @name PicoGL.VERTEX_ARRAY_BINDING\n        @private\n     */\n    VERTEX_ARRAY_BINDING: 0x85B5,\n    /**\n        @type {GLenum}\n        @name PicoGL.R8_SNORM\n        @private\n     */\n    R8_SNORM: 0x8F94,\n    /**\n        @type {GLenum}\n        @name PicoGL.RG8_SNORM\n        @private\n     */\n    RG8_SNORM: 0x8F95,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB8_SNORM\n        @private\n     */\n    RGB8_SNORM: 0x8F96,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGBA8_SNORM\n        @private\n     */\n    RGBA8_SNORM: 0x8F97,\n    /**\n        @type {GLenum}\n        @name PicoGL.SIGNED_NORMALIZED\n        @private\n     */\n    SIGNED_NORMALIZED: 0x8F9C,\n    /**\n        @type {GLenum}\n        @name PicoGL.COPY_READ_BUFFER\n        @private\n     */\n    COPY_READ_BUFFER: 0x8F36,\n    /**\n        @type {GLenum}\n        @name PicoGL.COPY_WRITE_BUFFER\n        @private\n     */\n    COPY_WRITE_BUFFER: 0x8F37,\n    /**\n        @type {GLenum}\n        @name PicoGL.COPY_READ_BUFFER_BINDING\n        @private\n     */\n    COPY_READ_BUFFER_BINDING: 0x8F36,\n    /**\n        @type {GLenum}\n        @name PicoGL.COPY_WRITE_BUFFER_BINDING\n        @private\n     */\n    COPY_WRITE_BUFFER_BINDING: 0x8F37,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_BUFFER\n        @private\n     */\n    UNIFORM_BUFFER: 0x8A11,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_BUFFER_BINDING\n        @private\n     */\n    UNIFORM_BUFFER_BINDING: 0x8A28,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_BUFFER_START\n        @private\n     */\n    UNIFORM_BUFFER_START: 0x8A29,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_BUFFER_SIZE\n        @private\n     */\n    UNIFORM_BUFFER_SIZE: 0x8A2A,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_VERTEX_UNIFORM_BLOCKS\n        @private\n     */\n    MAX_VERTEX_UNIFORM_BLOCKS: 0x8A2B,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_FRAGMENT_UNIFORM_BLOCKS\n        @private\n     */\n    MAX_FRAGMENT_UNIFORM_BLOCKS: 0x8A2D,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_COMBINED_UNIFORM_BLOCKS\n        @private\n     */\n    MAX_COMBINED_UNIFORM_BLOCKS: 0x8A2E,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_UNIFORM_BUFFER_BINDINGS\n        @private\n     */\n    MAX_UNIFORM_BUFFER_BINDINGS: 0x8A2F,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_UNIFORM_BLOCK_SIZE\n        @private\n     */\n    MAX_UNIFORM_BLOCK_SIZE: 0x8A30,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS\n        @private\n     */\n    MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 0x8A31,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS\n        @private\n     */\n    MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 0x8A33,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_BUFFER_OFFSET_ALIGNMENT\n        @private\n     */\n    UNIFORM_BUFFER_OFFSET_ALIGNMENT: 0x8A34,\n    /**\n        @type {GLenum}\n        @name PicoGL.ACTIVE_UNIFORM_BLOCKS\n        @private\n     */\n    ACTIVE_UNIFORM_BLOCKS: 0x8A36,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_TYPE\n        @private\n     */\n    UNIFORM_TYPE: 0x8A37,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_SIZE\n        @private\n     */\n    UNIFORM_SIZE: 0x8A38,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_BLOCK_INDEX\n        @private\n     */\n    UNIFORM_BLOCK_INDEX: 0x8A3A,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_OFFSET\n        @private\n     */\n    UNIFORM_OFFSET: 0x8A3B,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_ARRAY_STRIDE\n        @private\n     */\n    UNIFORM_ARRAY_STRIDE: 0x8A3C,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_MATRIX_STRIDE\n        @private\n     */\n    UNIFORM_MATRIX_STRIDE: 0x8A3D,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_IS_ROW_MAJOR\n        @private\n     */\n    UNIFORM_IS_ROW_MAJOR: 0x8A3E,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_BLOCK_BINDING\n        @private\n     */\n    UNIFORM_BLOCK_BINDING: 0x8A3F,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_BLOCK_DATA_SIZE\n        @private\n     */\n    UNIFORM_BLOCK_DATA_SIZE: 0x8A40,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_BLOCK_ACTIVE_UNIFORMS\n        @private\n     */\n    UNIFORM_BLOCK_ACTIVE_UNIFORMS: 0x8A42,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES\n        @private\n     */\n    UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 0x8A43,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER\n        @private\n     */\n    UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 0x8A44,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER\n        @private\n     */\n    UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 0x8A46,\n    /**\n        @type {GLenum}\n        @name PicoGL.INVALID_INDEX\n        @private\n     */\n    INVALID_INDEX: 0xFFFFFFFF,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_VERTEX_OUTPUT_COMPONENTS\n        @private\n     */\n    MAX_VERTEX_OUTPUT_COMPONENTS: 0x9122,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_FRAGMENT_INPUT_COMPONENTS\n        @private\n     */\n    MAX_FRAGMENT_INPUT_COMPONENTS: 0x9125,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_SERVER_WAIT_TIMEOUT\n        @private\n     */\n    MAX_SERVER_WAIT_TIMEOUT: 0x9111,\n    /**\n        @type {GLenum}\n        @name PicoGL.OBJECT_TYPE\n        @private\n     */\n    OBJECT_TYPE: 0x9112,\n    /**\n        @type {GLenum}\n        @name PicoGL.SYNC_CONDITION\n        @private\n     */\n    SYNC_CONDITION: 0x9113,\n    /**\n        @type {GLenum}\n        @name PicoGL.SYNC_STATUS\n        @private\n     */\n    SYNC_STATUS: 0x9114,\n    /**\n        @type {GLenum}\n        @name PicoGL.SYNC_FLAGS\n        @private\n     */\n    SYNC_FLAGS: 0x9115,\n    /**\n        @type {GLenum}\n        @name PicoGL.SYNC_FENCE\n        @private\n     */\n    SYNC_FENCE: 0x9116,\n    /**\n        @type {GLenum}\n        @name PicoGL.SYNC_GPU_COMMANDS_COMPLETE\n        @private\n     */\n    SYNC_GPU_COMMANDS_COMPLETE: 0x9117,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNSIGNALED\n        @private\n     */\n    UNSIGNALED: 0x9118,\n    /**\n        @type {GLenum}\n        @name PicoGL.SIGNALED\n        @private\n     */\n    SIGNALED: 0x9119,\n    /**\n        @type {GLenum}\n        @name PicoGL.ALREADY_SIGNALED\n        @private\n     */\n    ALREADY_SIGNALED: 0x911A,\n    /**\n        @type {GLenum}\n        @name PicoGL.TIMEOUT_EXPIRED\n        @private\n     */\n    TIMEOUT_EXPIRED: 0x911B,\n    /**\n        @type {GLenum}\n        @name PicoGL.CONDITION_SATISFIED\n        @private\n     */\n    CONDITION_SATISFIED: 0x911C,\n    /**\n        @type {GLenum}\n        @name PicoGL.WAIT_FAILED\n        @private\n     */\n    WAIT_FAILED: 0x911D,\n    /**\n        @type {GLenum}\n        @name PicoGL.SYNC_FLUSH_COMMANDS_BIT\n        @private\n     */\n    SYNC_FLUSH_COMMANDS_BIT: 0x00000001,\n    /**\n        @type {GLenum}\n        @name PicoGL.VERTEX_ATTRIB_ARRAY_DIVISOR\n        @private\n     */\n    VERTEX_ATTRIB_ARRAY_DIVISOR: 0x88FE,\n    /**\n        @type {GLenum}\n        @name PicoGL.ANY_SAMPLES_PASSED\n        @private\n     */\n    ANY_SAMPLES_PASSED: 0x8C2F,\n    /**\n        @type {GLenum}\n        @name PicoGL.ANY_SAMPLES_PASSED_CONSERVATIVE\n        @private\n     */\n    ANY_SAMPLES_PASSED_CONSERVATIVE: 0x8D6A,\n    /**\n        @type {GLenum}\n        @name PicoGL.SAMPLER_BINDING\n        @private\n     */\n    SAMPLER_BINDING: 0x8919,\n    /**\n        @type {GLenum}\n        @name PicoGL.RGB10_A2UI\n        @private\n     */\n    RGB10_A2UI: 0x906F,\n    /**\n        @type {GLenum}\n        @name PicoGL.INT_2_10_10_10_REV\n        @private\n     */\n    INT_2_10_10_10_REV: 0x8D9F,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRANSFORM_FEEDBACK\n        @private\n     */\n    TRANSFORM_FEEDBACK: 0x8E22,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRANSFORM_FEEDBACK_PAUSED\n        @private\n     */\n    TRANSFORM_FEEDBACK_PAUSED: 0x8E23,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRANSFORM_FEEDBACK_ACTIVE\n        @private\n     */\n    TRANSFORM_FEEDBACK_ACTIVE: 0x8E24,\n    /**\n        @type {GLenum}\n        @name PicoGL.TRANSFORM_FEEDBACK_BINDING\n        @private\n     */\n    TRANSFORM_FEEDBACK_BINDING: 0x8E25,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_IMMUTABLE_FORMAT\n        @private\n     */\n    TEXTURE_IMMUTABLE_FORMAT: 0x912F,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_ELEMENT_INDEX\n        @private\n     */\n    MAX_ELEMENT_INDEX: 0x8D6B,\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_IMMUTABLE_LEVELS\n        @private\n     */\n    TEXTURE_IMMUTABLE_LEVELS: 0x82DF,\n    /**\n        @type {GLenum}\n        @name PicoGL.TIMEOUT_IGNORED\n        @private\n     */\n    TIMEOUT_IGNORED: -1,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_CLIENT_WAIT_TIMEOUT_WEBGL\n        @private\n     */\n    MAX_CLIENT_WAIT_TIMEOUT_WEBGL: 0x9247,\n\n    // https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query_webgl2/\n    /**\n        @type {GLenum}\n        @name PicoGL.QUERY_COUNTER_BITS_EXT\n        @private\n     */\n    QUERY_COUNTER_BITS_EXT: 0x8864,\n    /**\n        @type {GLenum}\n        @name PicoGL.TIME_ELAPSED_EXT\n        @private\n     */\n    TIME_ELAPSED_EXT: 0x88BF,\n    /**\n        @type {GLenum}\n        @name PicoGL.TIMESTAMP_EXT\n        @private\n     */\n    TIMESTAMP_EXT: 0x8E28,\n    /**\n        @type {GLenum}\n        @name PicoGL.GPU_DISJOINT_EXT\n        @private\n     */\n    GPU_DISJOINT_EXT: 0x8FBB,\n\n    // https://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/\n    /**\n        @type {GLenum}\n        @name PicoGL.TEXTURE_MAX_ANISOTROPY_EXT\n        @private\n     */\n    TEXTURE_MAX_ANISOTROPY_EXT: 0x84FE,\n    /**\n        @type {GLenum}\n        @name PicoGL.MAX_TEXTURE_MAX_ANISOTROPY_EXT\n        @private\n     */\n    MAX_TEXTURE_MAX_ANISOTROPY_EXT: 0x84FF,\n\n    // https://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\n    /**\n        @type {GLenum}\n        @name PicoGL.UNMASKED_VENDOR_WEBGL\n        @private\n     */\n    UNMASKED_VENDOR_WEBGL: 0x9245,\n    /**\n        @type {GLenum}\n        @name PicoGL.UNMASKED_RENDERER_WEBGL\n        @private\n     */\n    UNMASKED_RENDERER_WEBGL: 0x9246,\n\n    // https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPLETION_STATUS_KHR\n        @private\n     */\n    COMPLETION_STATUS_KHR: 0x91B1,\n\n    // https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGB_S3TC_DXT1_EXT\n        @private\n     */\n    COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83F0,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_S3TC_DXT1_EXT\n        @private\n     */\n    COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83F1,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_S3TC_DXT3_EXT\n        @private\n     */\n    COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83F2,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_S3TC_DXT5_EXT\n        @private\n     */\n    COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83F3,\n\n    // https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB_S3TC_DXT1_EXT\n        @private\n     */\n    COMPRESSED_SRGB_S3TC_DXT1_EXT: 0x8C4C,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT\n        @private\n     */\n    COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: 0x8C4D,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT\n        @private\n     */\n    COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: 0x8C4E,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT\n        @private\n     */\n    COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: 0x8C4F,\n\n    // https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_R11_EAC\n        @private\n     */\n    COMPRESSED_R11_EAC: 0x9270,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SIGNED_R11_EAC\n        @private\n     */\n    COMPRESSED_SIGNED_R11_EAC: 0x9271,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RG11_EAC\n        @private\n     */\n    COMPRESSED_RG11_EAC: 0x9272,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SIGNED_RG11_EAC\n        @private\n     */\n    COMPRESSED_SIGNED_RG11_EAC: 0x9273,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGB8_ETC2\n        @private\n     */\n    COMPRESSED_RGB8_ETC2: 0x9274,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ETC2\n        @private\n     */\n    COMPRESSED_SRGB8_ETC2: 0x9275,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\n        @private\n     */\n    COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9276,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\n        @private\n     */\n    COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9277,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA8_ETC2_EAC\n        @private\n     */\n    COMPRESSED_RGBA8_ETC2_EAC: 0x9278,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9279,\n\n    // https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGB_PVRTC_4BPPV1_IMG\n        @private\n     */\n    COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8C00,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGB_PVRTC_2BPPV1_IMG\n        @private\n     */\n    COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8C01,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG\n        @private\n     */\n    COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8C02,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\n        @private\n     */\n    COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8C03,\n\n    // https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_4x4_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_4x4_KHR: 0x93B0,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_5x4_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_5x4_KHR: 0x93B1,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_5x5_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_5x5_KHR: 0x93B2,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_6x5_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_6x5_KHR: 0x93B3,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_6x6_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_6x6_KHR: 0x93B4,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_8x5_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_8x5_KHR: 0x93B5,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_8x6_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_8x6_KHR: 0x93B6,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_8x8_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_8x8_KHR: 0x93B7,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_10x5_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_10x5_KHR: 0x93B8,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_10x6_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_10x6_KHR: 0x93B9,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_10x8_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_10x8_KHR: 0x93BA,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_10x10_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_10x10_KHR: 0x93BB,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_12x10_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_12x10_KHR: 0x93BC,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_RGBA_ASTC_12x12_KHR\n        @private\n     */\n    COMPRESSED_RGBA_ASTC_12x12_KHR: 0x93BD,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: 0x93D0,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: 0x93D1,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: 0x93D2,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: 0x93D3,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: 0x93D4,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: 0x93D5,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: 0x93D6,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: 0x93D7,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: 0x93D8,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: 0x93D9,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: 0x93DA,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: 0x93DB,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: 0x93DC,\n    /**\n        @type {GLenum}\n        @name PicoGL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR\n        @private\n     */\n    COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: 0x93DD\n};\n\n\nexport const TYPE_SIZE = {\n    [GL.BYTE]: 1,\n    [GL.UNSIGNED_BYTE]: 1,\n    [GL.SHORT]: 2,\n    [GL.UNSIGNED_SHORT]: 2,\n    [GL.INT]: 4,\n    [GL.UNSIGNED_INT]: 4,\n    [GL.FLOAT]: 4\n};\n\n// Internal format => [format, type]\nexport const TEXTURE_FORMATS = {\n    [GL.R8]: [ GL.RED, GL.UNSIGNED_BYTE ],\n    [GL.R8_SNORM]: [ GL.RED, GL.BYTE ],\n    [GL.R16F]: [ GL.RED, GL.FLOAT ],\n    [GL.R32F]: [ GL.RED, GL.FLOAT ],\n    [GL.R8UI]: [ GL.RED_INTEGER, GL.UNSIGNED_BYTE ],\n    [GL.R8I]: [ GL.RED_INTEGER, GL.BYTE ],\n    [GL.R16UI]: [ GL.RED_INTEGER, GL.UNSIGNED_SHORT ],\n    [GL.R16I]: [ GL.RED_INTEGER, GL.SHORT ],\n    [GL.R32UI]: [ GL.RED_INTEGER, GL.UNSIGNED_INT ],\n    [GL.R32I]: [ GL.RED_INTEGER, GL.INT ],\n    [GL.RG8]: [ GL.RG, GL.UNSIGNED_BYTE ],\n    [GL.RG8_SNORM]: [ GL.RG, GL.BYTE ],\n    [GL.RG16F]: [ GL.RG, GL.FLOAT ],\n    [GL.RG32F]: [ GL.RG, GL.FLOAT ],\n    [GL.RG8UI]: [ GL.RG_INTEGER, GL.UNSIGNED_BYTE ],\n    [GL.RG8I]: [ GL.RG_INTEGER, GL.BYTE ],\n    [GL.RG16UI]: [ GL.RG_INTEGER, GL.UNSIGNED_SHORT ],\n    [GL.RG16I]: [ GL.RG_INTEGER, GL.SHORT ],\n    [GL.RG32UI]: [ GL.RG_INTEGER, GL.UNSIGNED_INT ],\n    [GL.RG32I]: [ GL.RG_INTEGER, GL.INT ],\n    [GL.RGB8]: [ GL.RGB, GL.UNSIGNED_BYTE ],\n    [GL.SRGB8]: [ GL.RGB, GL.UNSIGNED_BYTE ],\n    [GL.RGB565]: [ GL.RGB, GL.UNSIGNED_SHORT_5_6_5 ],\n    [GL.RGB8_SNORM]: [ GL.RGB, GL.BYTE ],\n    [GL.R11F_G11F_B10F]: [ GL.RGB, GL.UNSIGNED_INT_10F_11F_11F_REV ],\n    [GL.RGB9_E5]: [ GL.RGB, GL.UNSIGNED_INT_5_9_9_9_REV ],\n    [GL.RGB16F]: [ GL.RGB, GL.FLOAT ],\n    [GL.RGB32F]: [ GL.RGB, GL.FLOAT ],\n    [GL.RGB8UI]: [ GL.RGB_INTEGER, GL.UNSIGNED_BYTE ],\n    [GL.RGB8I]: [ GL.RGB_INTEGER, GL.BYTE ],\n    [GL.RGB16UI]: [ GL.RGB_INTEGER, GL.UNSIGNED_SHORT ],\n    [GL.RGB16I]: [ GL.RGB_INTEGER, GL.SHORT ],\n    [GL.RGB32UI]: [ GL.RGB_INTEGER, GL.UNSIGNED_INT ],\n    [GL.RGB32I]: [ GL.RGB_INTEGER, GL.INT ],\n    [GL.RGBA8]: [ GL.RGBA, GL.UNSIGNED_BYTE ],\n    [GL.SRGB8_ALPHA8]: [ GL.RGBA, GL.UNSIGNED_BYTE ],\n    [GL.RGBA8_SNORM]: [ GL.RGBA, GL.BYTE ],\n    [GL.RGB5_A1]: [ GL.RGBA, GL.UNSIGNED_SHORT_5_5_5_1 ],\n    [GL.RGBA4]: [ GL.RGBA, GL.UNSIGNED_SHORT_4_4_4_4 ],\n    [GL.RGB10_A2]: [ GL.RGBA, GL.UNSIGNED_INT_2_10_10_10_REV ],\n    [GL.RGBA16F]: [ GL.RGBA, GL.FLOAT ],\n    [GL.RGBA32F]: [ GL.RGBA, GL.FLOAT ],\n    [GL.RGBA8UI]: [ GL.RGBA_INTEGER, GL.UNSIGNED_BYTE ],\n    [GL.RGBA8I]: [ GL.RGBA_INTEGER, GL.BYTE ],\n    [GL.RGB10_A2UI]: [ GL.RGBA_INTEGER, GL.UNSIGNED_INT_2_10_10_10_REV ],\n    [GL.RGBA16UI]: [ GL.RGBA_INTEGER, GL.UNSIGNED_SHORT ],\n    [GL.RGBA16I]: [ GL.RGBA_INTEGER, GL.SHORT ],\n    [GL.RGBA32I]: [ GL.RGBA_INTEGER, GL.INT ],\n    [GL.RGBA32UI]: [ GL.RGBA_INTEGER, GL.UNSIGNED_INT ],\n    [GL.DEPTH_COMPONENT16]: [ GL.DEPTH_COMPONENT, GL.UNSIGNED_SHORT ],\n    [GL.DEPTH_COMPONENT24]: [ GL.DEPTH_COMPONENT, GL.UNSIGNED_INT ],\n    [GL.DEPTH_COMPONENT32F]: [ GL.DEPTH_COMPONENT, GL.FLOAT ],\n    [GL.DEPTH24_STENCIL8]: [ GL.DEPTH_STENCIL, GL.UNSIGNED_INT_24_8 ],\n    [GL.DEPTH32F_STENCIL8]: [ GL.DEPTH_STENCIL, GL.FLOAT_32_UNSIGNED_INT_24_8_REV ]\n};\n\nexport const COMPRESSED_TEXTURE_TYPES = {\n    [GL.COMPRESSED_RGB_S3TC_DXT1_EXT]: true,\n    [GL.COMPRESSED_RGBA_S3TC_DXT1_EXT]: true,\n    [GL.COMPRESSED_RGBA_S3TC_DXT3_EXT]: true,\n    [GL.COMPRESSED_RGBA_S3TC_DXT5_EXT]: true,\n    [GL.COMPRESSED_SRGB_S3TC_DXT1_EXT]: true,\n    [GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT]: true,\n    [GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT]: true,\n    [GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT]: true,\n    [GL.COMPRESSED_R11_EAC]: true,\n    [GL.COMPRESSED_SIGNED_R11_EAC]: true,\n    [GL.COMPRESSED_RG11_EAC]: true,\n    [GL.COMPRESSED_SIGNED_RG11_EAC]: true,\n    [GL.COMPRESSED_RGB8_ETC2]: true,\n    [GL.COMPRESSED_SRGB8_ETC2]: true,\n    [GL.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2]: true,\n    [GL.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2]: true,\n    [GL.COMPRESSED_RGBA8_ETC2_EAC]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC]: true,\n    [GL.COMPRESSED_RGBA_ASTC_4x4_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_5x4_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_5x5_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_6x5_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_6x6_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_8x5_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_8x6_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_8x8_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_10x5_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_10x6_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_10x8_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_10x10_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_12x10_KHR]: true,\n    [GL.COMPRESSED_RGBA_ASTC_12x12_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR]: true,\n    [GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR]: true,\n    [GL.COMPRESSED_RGB_PVRTC_4BPPV1_IMG]: true,\n    [GL.COMPRESSED_RGB_PVRTC_2BPPV1_IMG]: true,\n    [GL.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG]: true,\n    [GL.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG]: true\n};\n\nexport const WEBGL_INFO = {};\n\nexport const DUMMY_UNIT_ARRAY = new Array(1);\n\nexport const DUMMY_OBJECT = {};\n\n// DEPRECATED\nexport const TEXTURE_FORMAT_DEFAULTS = {\n    [GL.UNSIGNED_BYTE]: {\n        [GL.RED]: GL.R8,\n        [GL.RG]: GL.RG8,\n        [GL.RGB]: GL.RGB8,\n        [GL.RGBA]: GL.RGBA8\n    },\n\n    [GL.UNSIGNED_SHORT]: {\n        [GL.DEPTH_COMPONENT]: GL.DEPTH_COMPONENT16\n    },\n\n    [GL.FLOAT]: {\n        [GL.RED]: GL.R16F,\n        [GL.RG]: GL.RG16F,\n        [GL.RGB]: GL.RGB16F,\n        [GL.RGBA]: GL.RGBA16F,\n        [GL.DEPTH_COMPONENT]: GL.DEPTH_COMPONENT32F\n    }\n};\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport {\n    GL,\n    WEBGL_INFO,\n    TEXTURE_FORMATS,\n    COMPRESSED_TEXTURE_TYPES,\n    DUMMY_OBJECT,\n    DUMMY_UNIT_ARRAY,\n    // DEPRECATED\n    TEXTURE_FORMAT_DEFAULTS\n} from \"./constants.js\";\n\n/**\n    Cubemap for environment mapping.\n\n    @class Cubemap\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {WebGLTexture} texture Handle to the texture.\n    @prop {GLenum} type Type of data stored in the texture.\n    @prop {GLenum} format Layout of texture data.\n    @prop {GLenum} internalFormat Internal arrangement of the texture data.\n    @prop {Number} currentUnit The current texture unit this cubemap is bound to.\n    @prop {boolean} flipY Whether the y-axis is flipped for this cubemap.\n    @prop {boolean} premultiplyAlpha Whether alpha should be pre-multiplied when loading this cubemap.\n    @prop {Object} appState Tracked GL state.\n*/\nexport class Cubemap {\n\n    constructor(gl, appState, options) {\n\n        this.gl = gl;\n        this.texture = null;\n        this.appState = appState;\n\n        this.compressed = COMPRESSED_TEXTURE_TYPES[options.internalFormat];\n\n        if (options.format !== undefined) {\n            console.warn(\"Cubemap option 'format' is deprecated and will be removed. Use 'internalFormat' with a sized format instead.\");\n            this.compressed = Boolean(COMPRESSED_TEXTURE_TYPES[options.format]);\n            if (options.type === undefined) {\n                options.type = options.format === GL.DEPTH_COMPONENT ? GL.UNSIGNED_SHORT : GL.UNSIGNED_BYTE;\n            }\n            if (options.internalFormat === undefined) {\n                if (this.compressed) {\n                    options.internalFormat = options.format;\n                } else {\n                    options.internalFormat = TEXTURE_FORMAT_DEFAULTS[options.type][options.format];\n                }\n            }\n        }\n\n        if (this.compressed) {\n            // For compressed textures, just need to provide one of format, internalFormat.\n            // The other will be the same.\n            this.internalFormat = options.internalFormat;\n            this.format = options.internalFormat;\n            this.type = GL.UNSIGNED_BYTE;\n        } else {\n            this.internalFormat = options.internalFormat !== undefined ? options.internalFormat : GL.RGBA8;\n\n            let formatInfo = TEXTURE_FORMATS[this.internalFormat];\n            this.format = formatInfo[0];\n            this.type = options.type !== undefined ? options.type : formatInfo[1];\n        }\n\n        // -1 indicates unbound\n        this.currentUnit = -1;\n\n        let arrayData = Array.isArray(options.negX);\n        let negX = arrayData ? options.negX[0] : options.negX;\n\n        let {\n            width = negX.width,\n            height = negX.height,\n            flipY = false,\n            premultiplyAlpha = false,\n            minFilter = negX ? GL.LINEAR_MIPMAP_NEAREST : GL.NEAREST,\n            magFilter = negX ? GL.LINEAR : GL.NEAREST,\n            wrapS = GL.REPEAT,\n            wrapT = GL.REPEAT,\n            compareMode = GL.NONE,\n            compareFunc = GL.LEQUAL,\n            minLOD = null,\n            maxLOD = null,\n            baseLevel = null,\n            maxLevel = null,\n            maxAnisotropy = 1\n        } = options;\n\n        this.width = width;\n        this.height = height;\n        this.flipY = flipY;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.compareMode = compareMode;\n        this.compareFunc = compareFunc;\n        this.minLOD = minLOD;\n        this.maxLOD = maxLOD;\n        this.baseLevel = baseLevel;\n        this.maxLevel = maxLevel;\n        this.maxAnisotropy = Math.min(maxAnisotropy, WEBGL_INFO.MAX_TEXTURE_ANISOTROPY);\n        this.mipmaps = (minFilter === GL.LINEAR_MIPMAP_NEAREST || minFilter === GL.LINEAR_MIPMAP_LINEAR);\n        this.miplevelsProvided = arrayData && options.negX.length > 1;\n        this.levels = this.mipmaps ? Math.floor(Math.log2(Math.min(this.width, this.height))) + 1 : 1;\n\n        this.restore(options);\n    }\n\n    /**\n        Restore cubemap after context loss.\n\n        @method\n        @param {Object} [options] Texture options.\n        @param {HTMLElement|ArrayBufferView} [options.negX] The image data for the negative X direction.\n                Can be any format that would be accepted by texImage2D.\n        @param {HTMLElement|ArrayBufferView} [options.posX] The image data for the positive X direction.\n                Can be any format that would be accepted by texImage2D.\n        @param {HTMLElement|ArrayBufferView} [options.negY] The image data for the negative Y direction.\n                Can be any format that would be accepted by texImage2D.\n        @param {HTMLElement|ArrayBufferView} [options.posY] The image data for the positive Y direction.\n                Can be any format that would be accepted by texImage2D.\n        @param {HTMLElement|ArrayBufferView} [options.negZ] The image data for the negative Z direction.\n                Can be any format that would be accepted by texImage2D.\n        @param {HTMLElement|ArrayBufferView} [options.posZ] The image data for the positive Z direction.\n                Can be any format that would be accepted by texImage2D.\n        @return {Cubemap} The Cubemap object.\n    */\n    restore(options = DUMMY_OBJECT) {\n        this.texture = this.gl.createTexture();\n\n        if (this.currentUnit !== -1) {\n            this.appState.textures[this.currentUnit] = null;\n        }\n\n        this.bind(0);\n        this.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MAG_FILTER, this.magFilter);\n        this.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MIN_FILTER, this.minFilter);\n        this.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_S, this.wrapS);\n        this.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_T, this.wrapT);\n        this.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_COMPARE_FUNC, this.compareFunc);\n        this.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_COMPARE_MODE, this.compareMode);\n\n        if (this.baseLevel !== null) {\n            this.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_BASE_LEVEL, this.baseLevel);\n        }\n\n        if (this.maxLevel !== null) {\n            this.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MAX_LEVEL, this.maxLevel);\n        }\n\n        if (this.minLOD !== null) {\n            this.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MIN_LOD, this.minLOD);\n        }\n\n        if (this.maxLOD !== null) {\n            this.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MAX_LOD, this.maxLOD);\n        }\n\n        if (this.maxAnisotropy > 1) {\n            this.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MAX_ANISOTROPY_EXT, this.maxAnisotropy);\n        }\n\n        this.gl.texStorage2D(GL.TEXTURE_CUBE_MAP, this.levels, this.internalFormat, this.width, this.height);\n\n        let { negX, posX, negY, posY, negZ, posZ } = options;\n\n        if (negX) {\n            this.faceData(GL.TEXTURE_CUBE_MAP_NEGATIVE_X, negX);\n            this.faceData(GL.TEXTURE_CUBE_MAP_POSITIVE_X, posX);\n            this.faceData(GL.TEXTURE_CUBE_MAP_NEGATIVE_Y, negY);\n            this.faceData(GL.TEXTURE_CUBE_MAP_POSITIVE_Y, posY);\n            this.faceData(GL.TEXTURE_CUBE_MAP_NEGATIVE_Z, negZ);\n            this.faceData(GL.TEXTURE_CUBE_MAP_POSITIVE_Z, posZ);\n        }\n\n        if (this.mipmaps && !this.miplevelsProvided) {\n            this.gl.generateMipmap(GL.TEXTURE_CUBE_MAP);\n        }\n\n        return this;\n    }\n\n    /**\n        Delete this cubemap.\n\n        @method\n        @return {Cubemap} The Cubemap object.\n    */\n    delete() {\n        if (this.texture) {\n            this.gl.deleteTexture(this.texture);\n            this.texture = null;\n            this.appState.textures[this.currentUnit] = null;\n            this.currentUnit = -1;\n        }\n\n        return this;\n    }\n\n    // Input data for one cubemap face.\n    faceData(face, data) {\n        if (!Array.isArray(data)) {\n            DUMMY_UNIT_ARRAY[0] = data;\n            data = DUMMY_UNIT_ARRAY;\n        }\n\n        let numLevels = this.mipmaps ? data.length : 1;\n        let width = this.width;\n        let height = this.height;\n        let i;\n\n        this.gl.pixelStorei(GL.UNPACK_FLIP_Y_WEBGL, this.flipY);\n        this.gl.pixelStorei(GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n\n        if (this.compressed) {\n            for (i = 0; i < numLevels; ++i) {\n                this.gl.compressedTexSubImage2D(face, i, 0, 0, width, height, this.format, data[i]);\n                width = Math.max(width >> 1, 1);\n                height = Math.max(height >> 1, 1);\n            }\n        } else {\n            for (i = 0; i < numLevels; ++i) {\n                this.gl.texSubImage2D(face, i, 0, 0, width, height, this.format, this.type, data[i]);\n                width = Math.max(width >> 1, 1);\n                height = Math.max(height >> 1, 1);\n            }\n        }\n\n        return this;\n    }\n\n    // Bind this cubemap to a texture unit.\n    bind(unit) {\n        let currentTexture = this.appState.textures[unit];\n\n        if (this.appState.activeTexture !== unit) {\n            this.gl.activeTexture(GL.TEXTURE0 + unit);\n            this.appState.activeTexture = unit;\n        }\n\n        if (currentTexture !== this) {\n            if (currentTexture) {\n                currentTexture.currentUnit = -1;\n            }\n\n            if (this.currentUnit !== -1) {\n                this.appState.textures[this.currentUnit] = null;\n            }\n\n            this.gl.bindTexture(GL.TEXTURE_CUBE_MAP, this.texture);\n\n            this.appState.textures[unit] = this;\n            this.currentUnit = unit;\n        }\n\n        return this;\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL, WEBGL_INFO } from \"./constants.js\";\n\n/**\n    A DrawCall represents the program and values of associated\n    attributes, uniforms and textures for a single draw call.\n\n    @class DrawCall\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {Program} currentProgram The program to use for this draw call.\n    @prop {VertexArray} currentVertexArray Vertex array to use for this draw call.\n    @prop {TransformFeedback} currentTransformFeedback Transform feedback to use for this draw call.\n    @prop {Array} uniformBuffers Ordered list of active uniform buffers.\n    @prop {Array} uniformBlockNames Ordered list of uniform block names.\n    @prop {Number} uniformBlockCount Number of active uniform blocks for this draw call.\n    @prop {Object} uniformIndices Map of uniform names to indices in the uniform arrays.\n    @prop {Array} uniformNames Ordered list of uniform names.\n    @prop {Array} uniformValue Ordered list of uniform values.\n    @prop {number} uniformCount The number of active uniforms for this draw call.\n    @prop {Array} textures Array of active textures.\n    @prop {number} textureCount The number of active textures for this draw call.\n    @prop {Object} appState Tracked GL state.\n    @prop {GLsizei} numElements The number of element to draw.\n    @prop {GLsizei} numInstances The number of instances to draw.\n*/\nexport class DrawCall {\n\n    constructor(gl, appState, program, vertexArray = null, primitive) {\n        this.gl = gl;\n        this.currentProgram = program;\n        this.drawPrimitive = GL.TRIANGLES;\n        this.currentVertexArray = vertexArray;\n        this.currentTransformFeedback = null;\n        this.appState = appState;\n\n        this.uniformIndices = {};\n        this.uniformNames = new Array(WEBGL_INFO.MAX_UNIFORMS);\n        this.uniformValues = new Array(WEBGL_INFO.MAX_UNIFORMS);\n        this.uniformCount = 0;\n        this.uniformBuffers = new Array(WEBGL_INFO.MAX_UNIFORM_BUFFERS);\n        this.uniformBlockNames = new Array(WEBGL_INFO.MAX_UNIFORM_BUFFERS);\n        this.uniformBlockCount = 0;\n        this.textures = new Array(WEBGL_INFO.MAX_TEXTURE_UNITS);\n        this.textureCount = 0;\n\n        this.offsets = new Int32Array(1);\n        this.numElements = new Int32Array(1);\n        this.numInstances = new Int32Array(1);\n\n        this.numDraws = 1;\n        this.drawCountsFromVertexArray = true;\n\n        if (primitive !== undefined) {\n            console.warn(\"Primitive argument to 'App.createDrawCall' is deprecated and will be removed. Use 'DrawCall.primitive' instead.\");\n            this.primitive(primitive);\n        }\n    }\n\n    /**\n        Set the current draw primitive for this draw call.\n\n        @method\n        @param {GLenum} primitive Primitive to draw.\n        @return {DrawCall} The DrawCall object.\n    */\n    primitive(primitive) {\n        this.drawPrimitive = primitive;\n\n        return this;\n    }\n\n    /**\n        Set the current TransformFeedback object for draw.\n\n        @method\n        @param {TransformFeedback} transformFeedback Transform Feedback to set.\n        @return {DrawCall} The DrawCall object.\n    */\n    transformFeedback(transformFeedback) {\n        this.currentTransformFeedback = transformFeedback;\n\n        return this;\n    }\n\n    /**\n        Set the value for a uniform. Array uniforms are supported by\n        using appending \"[0]\" to the array name and passing a flat array\n        with all required values.\n\n        @method\n        @param {string} name Uniform name.\n        @param {any} value Uniform value.\n        @return {DrawCall} The DrawCall object.\n    */\n    uniform(name, value) {\n        let index = this.uniformIndices[name];\n        if (index === undefined) {\n            index = this.uniformCount++;\n            this.uniformIndices[name] = index;\n            this.uniformNames[index] = name;\n        }\n        this.uniformValues[index] = value;\n\n        return this;\n    }\n\n    /**\n        Set texture to bind to a sampler uniform.\n\n        @method\n        @param {string} name Sampler uniform name.\n        @param {Texture|Cubemap} texture Texture or Cubemap to bind.\n        @return {DrawCall} The DrawCall object.\n    */\n    texture(name, texture) {\n        let unit = this.currentProgram.samplers[name];\n        this.textures[unit] = texture;\n\n        return this;\n    }\n\n    /**\n        Set uniform buffer to bind to a uniform block.\n\n        @method\n        @param {string} name Uniform block name.\n        @param {UniformBuffer} buffer Uniform buffer to bind.\n        @return {DrawCall} The DrawCall object.\n    */\n    uniformBlock(name, buffer) {\n        let base = this.currentProgram.uniformBlocks[name];\n        this.uniformBuffers[base] = buffer;\n\n        return this;\n    }\n\n    /**\n        Ranges in the vertex array to draw. Multiple arguments can be provided to set up\n        a multi-draw. Note that after this method is called, draw counts will no longer\n        automatically be pulled from the VertexArray.\n\n        @method\n        @param {...Array} counts Variable number of 2 or 3 element arrays, each containing:\n            <ul>\n                <li> (Number) Number of elements to skip at the start of the array.\n                <li> (Number) Number of elements to draw.\n                <li> (Number - optional) Number of instances to draw of the given range.\n            </ul>\n        @return {DrawCall} The DrawCall object.\n    */\n    drawRanges(...counts) {\n        this.numDraws = counts.length;\n\n        if (this.offsets.length < this.numDraws) {\n            this.offsets = new Int32Array(this.numDraws);\n        }\n\n        if (this.numElements.length < this.numDraws) {\n            this.numElements = new Int32Array(this.numDraws);\n        }\n\n        if (this.numInstances.length < this.numDraws) {\n            this.numInstances = new Int32Array(this.numDraws);\n        }\n\n        for (let i = 0; i < this.numDraws; ++i) {\n            let count = counts[i];\n\n            this.offsets[i] = count[0];\n            this.numElements[i] = count[1];\n            this.numInstances[i] = count[2] || 1;\n        }\n\n        this.drawCountsFromVertexArray = false;\n\n        return this;\n    }\n\n    /**\n        Draw based on current state.\n\n        @method\n        @return {DrawCall} The DrawCall object.\n    */\n    draw() {\n        let uniformNames = this.uniformNames;\n        let uniformValues = this.uniformValues;\n        let uniformBuffers = this.uniformBuffers;\n        let uniformBlockCount = this.currentProgram.uniformBlockCount;\n        let textures = this.textures;\n        let textureCount = this.currentProgram.samplerCount;\n        let indexed = false;\n\n        this.currentProgram.bind();\n\n        if (this.currentVertexArray) {\n            this.currentVertexArray.bind();\n            indexed = this.currentVertexArray.indexed;\n\n            if (this.drawCountsFromVertexArray) {\n                this.numElements[0] = this.currentVertexArray.numElements;\n                this.numInstances[0] = this.currentVertexArray.numInstances;\n            }\n        }\n\n        for (let uIndex = 0; uIndex < this.uniformCount; ++uIndex) {\n            this.currentProgram.uniform(uniformNames[uIndex], uniformValues[uIndex]);\n        }\n\n        for (let base = 0; base < uniformBlockCount; ++base) {\n            uniformBuffers[base].bind(base);\n        }\n\n        for (let tIndex = 0; tIndex < textureCount; ++tIndex) {\n            textures[tIndex].bind(tIndex);\n        }\n\n        if (this.currentTransformFeedback) {\n            this.currentTransformFeedback.bind();\n            this.gl.beginTransformFeedback(this.drawPrimitive);\n        } else if (this.appState.transformFeedback) {\n            this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, null);\n            this.appState.transformFeedback = null;\n        }\n\n        if (WEBGL_INFO.MULTI_DRAW_INSTANCED) {\n            let ext = this.appState.extensions.multiDrawInstanced;\n            if (indexed) {\n                ext.multiDrawElementsInstancedWEBGL(this.drawPrimitive, this.numElements, 0, this.currentVertexArray.indexType, this.offsets, 0, this.numInstances, 0, this.numDraws);\n            } else {\n                ext.multiDrawArraysInstancedWEBGL(this.drawPrimitive, this.offsets, 0, this.numElements, 0, this.numInstances, 0, this.numDraws);\n            }\n        } else if (indexed) {\n            for (let i = 0; i < this.numDraws; ++i) {\n                this.gl.drawElementsInstanced(this.drawPrimitive, this.numElements[i], this.currentVertexArray.indexType, this.offsets[i], this.numInstances[i]);\n            }\n        } else {\n            for (let i = 0; i < this.numDraws; ++i) {\n                this.gl.drawArraysInstanced(this.drawPrimitive, this.offsets[i], this.numElements[i], this.numInstances[i]);\n            }\n        }\n\n        if (this.currentTransformFeedback) {\n            this.gl.endTransformFeedback();\n        }\n\n        return this;\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport {\n    GL,\n    WEBGL_INFO,\n    TEXTURE_FORMATS,\n    COMPRESSED_TEXTURE_TYPES,\n    DUMMY_OBJECT,\n    DUMMY_UNIT_ARRAY,\n    // DEPRECATED\n    TEXTURE_FORMAT_DEFAULTS\n} from \"./constants.js\";\n\n/**\n    General-purpose texture.\n\n    @class Texture\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {WebGLTexture} texture Handle to the texture.\n    @prop {number} width Texture width.\n    @prop {number} height Texture height.\n    @prop {number} depth Texture depth.\n    @prop {GLenum} binding Binding point for the texture.\n    @prop {GLenum} type Type of data stored in the texture.\n    @prop {GLenum} format Layout of texture data.\n    @prop {GLenum} internalFormat Internal arrangement of the texture data.\n    @prop {number} currentUnit The current texture unit this texture is bound to.\n    @prop {boolean} is3D Whether this texture contains 3D data.\n    @prop {boolean} flipY Whether the y-axis is flipped for this texture.\n    @prop {boolean} premultiplyAlpha Whether alpha should be pre-multiplied when loading this texture.\n    @prop {boolean} mipmaps Whether this texture is using mipmap filtering\n        (and thus should have a complete mipmap chain).\n    @prop {Object} appState Tracked GL state.\n*/\nexport class Texture {\n    constructor(gl, appState, binding, image, width = image.width, height = image.height, depth, is3D, options = DUMMY_OBJECT) {\n\n        this.gl = gl;\n        this.binding = binding;\n        this.texture = null;\n        this.width = width || 0;\n        this.height = height || 0;\n        this.depth = depth || 0;\n        this.is3D = is3D;\n        this.appState = appState;\n\n        this.compressed = Boolean(COMPRESSED_TEXTURE_TYPES[options.internalFormat]);\n\n        if (options.format !== undefined) {\n            console.warn(\"Texture option 'format' is deprecated and will be removed. Use 'internalFormat' with a sized format instead.\");\n            this.compressed = Boolean(COMPRESSED_TEXTURE_TYPES[options.format]);\n            if (options.type === undefined) {\n                options.type = options.format === GL.DEPTH_COMPONENT ? GL.UNSIGNED_SHORT : GL.UNSIGNED_BYTE;\n            }\n            if (options.internalFormat === undefined) {\n                if (this.compressed) {\n                    options.internalFormat = options.format;\n                } else {\n                    options.internalFormat = TEXTURE_FORMAT_DEFAULTS[options.type][options.format];\n                }\n            }\n        }\n\n        if (this.compressed) {\n            // For compressed textures, just need to provide one of format, internalFormat.\n            // The other will be the same.\n            this.internalFormat = options.internalFormat;\n            this.format = this.internalFormat;\n            this.type = GL.UNSIGNED_BYTE;\n        } else {\n            this.internalFormat = options.internalFormat !== undefined ? options.internalFormat : GL.RGBA8;\n\n            let formatInfo = TEXTURE_FORMATS[this.internalFormat];\n            this.format = formatInfo[0];\n            this.type = options.type !== undefined ? options.type : formatInfo[1];\n        }\n\n        // -1 indicates unbound\n        this.currentUnit = -1;\n\n        // Sampling parameters\n        let {\n            minFilter = image ? GL.LINEAR_MIPMAP_NEAREST : GL.NEAREST,\n            magFilter = image ? GL.LINEAR : GL.NEAREST,\n            wrapS = GL.REPEAT,\n            wrapT = GL.REPEAT,\n            wrapR = GL.REPEAT,\n            compareMode = GL.NONE,\n            compareFunc = GL.LEQUAL,\n            minLOD = null,\n            maxLOD = null,\n            baseLevel = null,\n            maxLevel = null,\n            maxAnisotropy = 1,\n            flipY = false,\n            premultiplyAlpha = false\n        } = options;\n\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.wrapR = wrapR;\n        this.compareMode = compareMode;\n        this.compareFunc = compareFunc;\n        this.minLOD = minLOD;\n        this.maxLOD = maxLOD;\n        this.baseLevel = baseLevel;\n        this.maxLevel = maxLevel;\n        this.maxAnisotropy = Math.min(maxAnisotropy, WEBGL_INFO.MAX_TEXTURE_ANISOTROPY);\n        this.flipY = flipY;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.mipmaps = (minFilter === GL.LINEAR_MIPMAP_NEAREST || minFilter === GL.LINEAR_MIPMAP_LINEAR);\n\n        this.restore(image);\n    }\n\n    /**\n        Restore texture after context loss.\n\n        @method\n        @param {HTMLElement|ArrayBufferView|Array} [image] Image data. An array can be passed to manually set all levels\n            of the mipmap chain. If a single level is passed and mipmap filtering is being used,\n            generateMipmap() will be called to produce the remaining levels.\n        @return {Texture} The Texture object.\n    */\n    restore(image) {\n        this.texture = null;\n        this.resize(this.width, this.height, this.depth);\n\n        if (image) {\n            this.data(image);\n        }\n\n        return this;\n    }\n\n    /**\n        Re-allocate texture storage.\n\n        @method\n        @param {number} width Image width.\n        @param {number} height Image height.\n        @param {number} [depth] Image depth or number of images. Required when passing 3D or texture array data.\n        @return {Texture} The Texture object.\n    */\n    resize(width, height, depth) {\n        depth = depth || 0;\n\n        if (this.texture && width === this.width && height === this.height && depth === this.depth) {\n            return this;\n        }\n\n        this.gl.deleteTexture(this.texture);\n        if (this.currentUnit !== -1) {\n            this.appState.textures[this.currentUnit] = null;\n        }\n\n        this.texture = this.gl.createTexture();\n        this.bind(Math.max(this.currentUnit, 0));\n\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n\n        this.gl.texParameteri(this.binding, GL.TEXTURE_MIN_FILTER, this.minFilter);\n        this.gl.texParameteri(this.binding, GL.TEXTURE_MAG_FILTER, this.magFilter);\n        this.gl.texParameteri(this.binding, GL.TEXTURE_WRAP_S, this.wrapS);\n        this.gl.texParameteri(this.binding, GL.TEXTURE_WRAP_T, this.wrapT);\n        this.gl.texParameteri(this.binding, GL.TEXTURE_WRAP_R, this.wrapR);\n        this.gl.texParameteri(this.binding, GL.TEXTURE_COMPARE_FUNC, this.compareFunc);\n        this.gl.texParameteri(this.binding, GL.TEXTURE_COMPARE_MODE, this.compareMode);\n\n        if (this.minLOD !== null) {\n            this.gl.texParameterf(this.binding, GL.TEXTURE_MIN_LOD, this.minLOD);\n        }\n\n        if (this.maxLOD !== null) {\n            this.gl.texParameterf(this.binding, GL.TEXTURE_MAX_LOD, this.maxLOD);\n        }\n\n        if (this.baseLevel !== null) {\n            this.gl.texParameteri(this.binding, GL.TEXTURE_BASE_LEVEL, this.baseLevel);\n        }\n\n        if (this.maxLevel !== null) {\n            this.gl.texParameteri(this.binding, GL.TEXTURE_MAX_LEVEL, this.maxLevel);\n        }\n\n        if (this.maxAnisotropy > 1) {\n            this.gl.texParameteri(this.binding, GL.TEXTURE_MAX_ANISOTROPY_EXT, this.maxAnisotropy);\n        }\n\n        let levels;\n        if (this.is3D) {\n            if (this.mipmaps) {\n                levels = Math.floor(Math.log2(Math.max(Math.max(this.width, this.height), this.depth))) + 1;\n            } else {\n                levels = 1;\n            }\n            this.gl.texStorage3D(this.binding, levels, this.internalFormat, this.width, this.height, this.depth);\n        } else {\n            if (this.mipmaps) {\n                levels = Math.floor(Math.log2(Math.max(this.width, this.height))) + 1;\n            } else {\n                levels = 1;\n            }\n            this.gl.texStorage2D(this.binding, levels, this.internalFormat, this.width, this.height);\n        }\n\n        return this;\n    }\n\n    /**\n        Set the image data for the texture. An array can be passed to manually set all levels\n        of the mipmap chain. If a single level is passed and mipmap filtering is being used,\n        generateMipmap() will be called to produce the remaining levels.\n        NOTE: the data must fit the currently-allocated storage!\n\n        @method\n        @param {HTMLImageElement|ArrayBufferView|Array} data Image data. If an array is passed, it will be\n            used to set mip map levels.\n        @return {Texture} The Texture object.\n    */\n    data(data) {\n        if (!Array.isArray(data)) {\n            DUMMY_UNIT_ARRAY[0] = data;\n            data = DUMMY_UNIT_ARRAY;\n        }\n\n        let numLevels = this.mipmaps ? data.length : 1;\n        let width = this.width;\n        let height = this.height;\n        let depth = this.depth;\n        let generateMipmaps = this.mipmaps && data.length === 1;\n        let i;\n\n        this.bind(Math.max(this.currentUnit, 0));\n        this.gl.pixelStorei(GL.UNPACK_FLIP_Y_WEBGL, this.flipY);\n        this.gl.pixelStorei(GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n\n        if (this.compressed) {\n            if (this.is3D) {\n                for (i = 0; i < numLevels; ++i) {\n                    this.gl.compressedTexSubImage3D(this.binding, i, 0, 0, 0, width, height, depth, this.format, data[i]);\n                    width = Math.max(width >> 1, 1);\n                    height = Math.max(height >> 1, 1);\n                    depth = Math.max(depth >> 1, 1);\n                }\n            } else {\n                for (i = 0; i < numLevels; ++i) {\n                    this.gl.compressedTexSubImage2D(this.binding, i, 0, 0, width, height, this.format, data[i]);\n                    width = Math.max(width >> 1, 1);\n                    height = Math.max(height >> 1, 1);\n                }\n            }\n        } else if (this.is3D) {\n            for (i = 0; i < numLevels; ++i) {\n                this.gl.texSubImage3D(this.binding, i, 0, 0, 0, width, height, depth, this.format, this.type, data[i]);\n                width = Math.max(width >> 1, 1);\n                height = Math.max(height >> 1, 1);\n                depth = Math.max(depth >> 1, 1);\n            }\n        } else {\n            for (i = 0; i < numLevels; ++i) {\n                this.gl.texSubImage2D(this.binding, i, 0, 0, width, height, this.format, this.type, data[i]);\n                width = Math.max(width >> 1, 1);\n                height = Math.max(height >> 1, 1);\n            }\n        }\n\n        if (generateMipmaps) {\n            this.gl.generateMipmap(this.binding);\n        }\n\n        return this;\n    }\n\n    /**\n        Delete this texture.\n\n        @method\n        @return {Texture} The Texture object.\n    */\n    delete() {\n        if (this.texture) {\n            this.gl.deleteTexture(this.texture);\n            this.texture = null;\n\n            if (this.currentUnit !== -1 && this.appState.textures[this.currentUnit] === this) {\n                this.appState.textures[this.currentUnit] = null;\n                this.currentUnit = -1;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n        Bind this texture to a texture unit.\n\n        @method\n        @ignore\n        @return {Texture} The Texture object.\n    */\n    bind(unit) {\n        let currentTexture = this.appState.textures[unit];\n\n        if (this.appState.activeTexture !== unit) {\n            this.gl.activeTexture(GL.TEXTURE0 + unit);\n            this.appState.activeTexture = unit;\n        }\n\n        if (currentTexture !== this) {\n            if (currentTexture) {\n                currentTexture.currentUnit = -1;\n            }\n\n            if (this.currentUnit !== -1) {\n                this.appState.textures[this.currentUnit] = null;\n            }\n\n            this.gl.bindTexture(this.binding, this.texture);\n\n            this.appState.textures[unit] = this;\n            this.currentUnit = unit;\n        }\n\n        return this;\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL } from \"./constants.js\";\n\n/**\n    Offscreen drawing attachment.\n\n    @class Renderbuffer\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {WebGLRenderbuffer} renderbuffer Handle to the renderbuffer.\n    @prop {number} width Renderbuffer width.\n    @prop {number} height Renderbuffer height.\n    @prop {GLenum} internalFormat Internal arrangement of the renderbuffer data.\n    @prop {number} samples Number of MSAA samples.\n*/\nexport class Renderbuffer {\n    constructor(gl, width, height, internalFormat, samples = 0) {\n        this.gl = gl;\n        this.renderbuffer = null;\n        this.width = width;\n        this.height = height;\n        this.internalFormat = internalFormat;\n        this.samples = samples;\n        this.restore();\n    }\n\n    /**\n        Restore renderbuffer after context loss.\n\n        @method\n        @return {Renderbuffer} The Renderbuffer object.\n    */\n    restore() {\n        this.renderbuffer = this.gl.createRenderbuffer();\n        this.resize(this.width, this.height);\n\n        return this;\n    }\n\n    /**\n        Resize the renderbuffer.\n\n        @method\n        @param {number} width New width of the renderbuffer.\n        @param {number} height New height of the renderbuffer.\n        @return {Renderbuffer} The Renderbuffer object.\n    */\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.gl.bindRenderbuffer(GL.RENDERBUFFER, this.renderbuffer);\n        this.gl.renderbufferStorageMultisample(GL.RENDERBUFFER, this.samples, this.internalFormat, this.width, this.height);\n        this.gl.bindRenderbuffer(GL.RENDERBUFFER, null);\n\n        return this;\n    }\n\n    /**\n        Delete this renderbuffer.\n\n        @method\n        @return {Renderbuffer} The Renderbuffer object.\n    */\n    delete() {\n        this.gl.deleteRenderbuffer(this.renderbuffer);\n        this.renderbuffer = null;\n\n        return this;\n    }\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL } from \"./constants.js\";\nimport { Texture } from \"./texture.js\";\nimport { Renderbuffer } from \"./renderbuffer.js\";\n\n/**\n    Offscreen drawing surface.\n\n    @class Framebuffer\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {WebGLFramebuffer} framebuffer Handle to the framebuffer.\n    @prop {number} width Framebuffer width.\n    @prop {number} height Framebuffer height.\n    @prop {Array} colorAttachments Array of color attachments.\n    @prop {Texture|Renderbuffer} depthAttachment Depth attachment.\n    @prop {Object} appState Tracked GL state.\n*/\nexport class Framebuffer {\n\n    constructor(gl, appState) {\n        this.gl = gl;\n        this.framebuffer = null;\n        this.appState = appState;\n\n        this.numColorTargets = 0;\n\n        this.colorAttachments = [];\n        this.colorAttachmentEnums = [];\n        this.colorAttachmentTargets = [];\n        this.depthAttachment = null;\n        this.depthAttachmentTarget = null;\n\n        this.width = 0;\n        this.height = 0;\n\n        this.restore();\n    }\n\n    /**\n        Restore framebuffer after context loss.\n\n        @method\n        @return {Framebuffer} The Framebuffer object.\n    */\n    restore() {\n        let currentFramebuffers = this.appState.framebuffers;\n        for (let binding in currentFramebuffers) {\n            if (currentFramebuffers[binding] === this) {\n                currentFramebuffers[binding] = null;\n            }\n        }\n\n        this.framebuffer = this.gl.createFramebuffer();\n\n        return this;\n    }\n\n    /**\n        Attach a color target to this framebuffer.\n\n        @method\n        @param {number} index Color attachment index.\n        @param {Texture|Cubemap|Renderbuffer} attachment The texture, cubemap or renderbuffer to attach.\n        @param {GLenum} [target] The texture target or layer to attach. If the texture is 3D or a texture array,\n            defaults to 0, otherwise to TEXTURE_2D. Ignored for renderbuffers.\n        @return {Framebuffer} The Framebuffer object.\n    */\n    colorTarget(index, attachment, target = attachment.is3D ? 0 : GL.TEXTURE_2D) {\n\n        if (index >= this.numColorTargets) {\n            let numColorTargets = index + 1;\n            this.colorAttachmentEnums.length = numColorTargets;\n            this.colorAttachments.length = numColorTargets;\n            this.colorAttachmentTargets.length = numColorTargets;\n\n            for (let i = this.numColorTargets; i < numColorTargets - 1; ++i) {\n                this.colorAttachmentEnums[i] = GL.NONE;\n                this.colorAttachments[i] = null;\n                this.colorAttachmentTargets[i] = 0;\n            }\n\n            this.numColorTargets = numColorTargets;\n        }\n\n        this.colorAttachmentEnums[index] = GL.COLOR_ATTACHMENT0 + index;\n        this.colorAttachments[index] = attachment;\n        this.colorAttachmentTargets[index] = target;\n\n        let currentFramebuffer = this.bindAndCaptureState();\n        let binding = this.appState.drawFramebufferBinding;\n\n        if (attachment instanceof Renderbuffer) {\n            this.gl.framebufferRenderbuffer(binding, this.colorAttachmentEnums[index], GL.RENDERBUFFER, attachment.renderbuffer);\n        } else if (attachment.is3D) {\n            this.gl.framebufferTextureLayer(binding, this.colorAttachmentEnums[index], attachment.texture, 0, target);\n        } else {\n            this.gl.framebufferTexture2D(binding, this.colorAttachmentEnums[index], target, attachment.texture, 0);\n        }\n\n        this.gl.drawBuffers(this.colorAttachmentEnums);\n\n        this.width = attachment.width;\n        this.height = attachment.height;\n\n        this.restoreState(currentFramebuffer);\n\n        return this;\n    }\n\n    /**\n        Attach a depth target to this framebuffer.\n\n        @method\n        @param {Texture|Cubemap|Renderbuffer} texture The texture, cubemap or renderbuffer to attach.\n        @param {GLenum} [target] The texture target or layer to attach. If the texture is 3D or a texture array or renderbuffer,\n            defaults to 0, otherwise to TEXTURE_2D. Ignored for renderbuffers.\n        @return {Framebuffer} The Framebuffer object.\n    */\n    depthTarget(attachment, target = attachment.is3D ? 0 : GL.TEXTURE_2D) {\n\n        let currentFramebuffer = this.bindAndCaptureState();\n        let binding = this.appState.drawFramebufferBinding;\n\n        this.depthAttachment = attachment;\n        this.depthAttachmentTarget = target;\n\n        if (attachment instanceof Renderbuffer) {\n            this.gl.framebufferRenderbuffer(binding, GL.DEPTH_ATTACHMENT, GL.RENDERBUFFER, attachment.renderbuffer);\n        } else if (attachment.is3D) {\n            this.gl.framebufferTextureLayer(binding, GL.DEPTH_ATTACHMENT, attachment.texture, 0, target);\n        } else {\n            this.gl.framebufferTexture2D(binding, GL.DEPTH_ATTACHMENT, target, attachment.texture, 0);\n        }\n\n        this.width = attachment.width;\n        this.height = attachment.height;\n\n        this.restoreState(currentFramebuffer);\n\n        return this;\n    }\n\n    /**\n        Resize all attachments.\n\n        @method\n        @param {number} [width=app.width] New width of the framebuffer.\n        @param {number} [height=app.height] New height of the framebuffer.\n        @return {Framebuffer} The Framebuffer object.\n    */\n    resize(width = this.gl.drawingBufferWidth, height = this.gl.drawingBufferHeight) {\n\n        let currentFramebuffer = this.bindAndCaptureState();\n        let binding = this.appState.drawFramebufferBinding;\n\n        for (let i = 0; i < this.numColorTargets; ++i) {\n            let attachment = this.colorAttachments[i];\n\n            if (!attachment) {\n                continue;\n            }\n\n            attachment.resize(width, height);\n            if (attachment instanceof Texture) {\n                // Texture resizing recreates the texture object.\n                if (attachment.is3D) {\n                    this.gl.framebufferTextureLayer(binding, this.colorAttachmentEnums[i], attachment.texture, 0, this.colorAttachmentTargets[i]);\n                } else {\n                    this.gl.framebufferTexture2D(binding, this.colorAttachmentEnums[i], this.colorAttachmentTargets[i], attachment.texture, 0);\n                }\n            }\n        }\n\n        if (this.depthAttachment) {\n            this.depthAttachment.resize(width, height);\n            if (this.depthAttachment instanceof Texture) {\n                // Texture resizing recreates the texture object.\n                if (this.depthAttachment.is3D) {\n                    this.gl.framebufferTextureLayer(binding, GL.DEPTH_ATTACHMENT, this.depthAttachment.texture, 0, this.depthAttachmentTarget);\n                } else {\n                    this.gl.framebufferTexture2D(binding, GL.DEPTH_ATTACHMENT, this.depthAttachmentTarget, this.depthAttachment.texture, 0);\n                }\n            }\n        }\n\n        this.width = width;\n        this.height = height;\n\n        this.restoreState(currentFramebuffer);\n\n        return this;\n    }\n\n    /**\n        Delete this framebuffer.\n\n        @method\n        @return {Framebuffer} The Framebuffer object.\n    */\n    delete() {\n        if (this.framebuffer) {\n            this.gl.deleteFramebuffer(this.framebuffer);\n            this.framebuffer = null;\n\n            let currentFramebuffers = this.appState.framebuffers;\n            for (let binding in currentFramebuffers) {\n                if (currentFramebuffers[binding] === this) {\n                    this.gl.bindFramebuffer(binding, null);\n                    currentFramebuffers[binding] = null;\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n        Get the current status of this framebuffer.\n\n        @method\n        @return {GLenum} The current status of this framebuffer.\n    */\n    getStatus() {\n        let currentFramebuffer = this.bindAndCaptureState();\n        let binding = this.appState.drawFramebufferBinding;\n        let status = this.gl.checkFramebufferStatus(binding);\n        this.restoreState(currentFramebuffer);\n\n        return status;\n    }\n\n    /**\n        Bind as the draw framebuffer\n\n        @method\n        @ignore\n        @return {Framebuffer} The Framebuffer object.\n    */\n    bindForDraw() {\n        let binding = this.appState.drawFramebufferBinding;\n        let currentFramebuffers = this.appState.framebuffers;\n        if (currentFramebuffers[binding] !== this) {\n            this.gl.bindFramebuffer(binding, this.framebuffer);\n            currentFramebuffers[binding] = this;\n        }\n\n        return this;\n    }\n\n    /**\n        Bind as the read framebuffer\n\n        @method\n        @ignore\n        @return {Framebuffer} The Framebuffer object.\n    */\n    bindForRead() {\n        let binding = this.appState.readFramebufferBinding;\n        let currentFramebuffers = this.appState.framebuffers;\n        if (currentFramebuffers[binding] !== this) {\n            this.gl.bindFramebuffer(binding, this.framebuffer);\n            currentFramebuffers[binding] = this;\n        }\n\n        return this;\n    }\n\n    /**\n        Bind for a framebuffer state update.\n        Capture current binding so we can restore it later.\n\n        @method\n        @ignore\n        @return {Framebuffer} The Framebuffer object.\n    */\n    bindAndCaptureState() {\n        let binding = this.appState.drawFramebufferBinding;\n        let currentFramebuffer = this.appState.framebuffers[binding];\n\n        if (currentFramebuffer !== this) {\n            this.gl.bindFramebuffer(binding, this.framebuffer);\n        }\n\n        return currentFramebuffer;\n    }\n\n    /**\n        Bind restore previous binding after state update\n\n        @method\n        @ignore\n        @return {Framebuffer} The Framebuffer object.\n    */\n    restoreState(framebuffer) {\n        if (framebuffer !== this) {\n            let binding = this.appState.drawFramebufferBinding;\n            this.gl.bindFramebuffer(binding, framebuffer ? framebuffer.framebuffer : null);\n        }\n\n        return this;\n    }\n\n    // TODO(Tarek): Transitional support for deprecated properties.\n    get colorTextures() {\n        console.error(\"Framebuffer.colorTextures is deprecated and will be removed. Please use Framebuffer.colorAttachments.\");\n        return this.colorAttachments;\n    }\n\n    get depthTexture() {\n        console.error(\"Framebuffer.depthTexture is deprecated and will be removed. Please use Framebuffer.depthAttachment.\");\n        return this.depthAttachment;\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL, WEBGL_INFO } from \"./constants.js\";\n\n/**\n    WebGL shader.\n\n    @class Shader\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {WebGLShader} shader The shader.\n*/\nexport class Shader {\n\n    constructor(gl, appState, type, source) {\n        this.gl = gl;\n        this.appState = appState;\n        this.shader = null;\n        this.type = type;\n        this.source = source.trim();\n\n        this.restore();\n    }\n\n    /**\n        Restore shader after context loss.\n\n        @method\n        @return {Shader} The Shader object.\n    */\n    restore() {\n        this.shader = this.gl.createShader(this.type);\n        this.gl.shaderSource(this.shader, this.source);\n        this.gl.compileShader(this.shader);\n\n        return this;\n    }\n\n    /**\n        Get the shader source translated for the platform's API.\n\n        @method\n        @return {String} The translated shader source.\n    */\n    translatedSource() {\n        if (WEBGL_INFO.DEBUG_SHADERS) {\n            return this.appState.extensions.debugShaders.getTranslatedShaderSource(this.shader);\n        } else {\n            return \"(Unavailable)\";\n        }\n    }\n\n    /**\n        Delete this shader.\n\n        @method\n        @return {Shader} The Shader object.\n    */\n    delete() {\n        if (this.shader) {\n            this.gl.deleteShader(this.shader);\n            this.shader = null;\n        }\n\n        return this;\n    }\n\n\n    checkCompilation() {\n        if (!this.gl.getShaderParameter(this.shader, GL.COMPILE_STATUS)) {\n            let i, lines;\n\n            console.error(this.gl.getShaderInfoLog(this.shader));\n            lines = this.source.split(\"\\n\");\n            for (i = 0; i < lines.length; ++i) {\n                console.error(`${i + 1}: ${lines[i]}`);\n            }\n        }\n\n        return this;\n    }\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL } from \"./constants.js\";\n\n// Classes to manage uniform value updates, including\n// caching current values.\n\nconst UNIFORM_FUNC_NAME = {};\nUNIFORM_FUNC_NAME[GL.BOOL] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.INT] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.SAMPLER_2D] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.INT_SAMPLER_2D] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.UNSIGNED_INT_SAMPLER_2D] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.SAMPLER_2D_SHADOW] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.SAMPLER_2D_ARRAY] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.INT_SAMPLER_2D_ARRAY] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.UNSIGNED_INT_SAMPLER_2D_ARRAY] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.SAMPLER_2D_ARRAY_SHADOW] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.SAMPLER_CUBE] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.INT_SAMPLER_CUBE] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.UNSIGNED_INT_SAMPLER_CUBE] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.SAMPLER_CUBE_SHADOW] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.SAMPLER_3D] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.INT_SAMPLER_3D] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.UNSIGNED_INT_SAMPLER_3D] = \"uniform1i\";\nUNIFORM_FUNC_NAME[GL.UNSIGNED_INT] = \"uniform1ui\";\nUNIFORM_FUNC_NAME[GL.FLOAT] = \"uniform1f\";\nUNIFORM_FUNC_NAME[GL.FLOAT_VEC2] = \"uniform2f\";\nUNIFORM_FUNC_NAME[GL.FLOAT_VEC3] = \"uniform3f\";\nUNIFORM_FUNC_NAME[GL.FLOAT_VEC4] = \"uniform4f\";\nUNIFORM_FUNC_NAME[GL.INT_VEC2] = \"uniform2i\";\nUNIFORM_FUNC_NAME[GL.INT_VEC3] = \"uniform3i\";\nUNIFORM_FUNC_NAME[GL.INT_VEC4] = \"uniform4i\";\nUNIFORM_FUNC_NAME[GL.UNSIGNED_INT_VEC2] = \"uniform2ui\";\nUNIFORM_FUNC_NAME[GL.UNSIGNED_INT_VEC3] = \"uniform3ui\";\nUNIFORM_FUNC_NAME[GL.UNSIGNED_INT_VEC4] = \"uniform4ui\";\nUNIFORM_FUNC_NAME[GL.BOOL_VEC2] = \"uniform2i\";\nUNIFORM_FUNC_NAME[GL.BOOL_VEC3] = \"uniform3i\";\nUNIFORM_FUNC_NAME[GL.BOOL_VEC4] = \"uniform4i\";\nUNIFORM_FUNC_NAME[GL.FLOAT_MAT2] = \"uniformMatrix2fv\";\nUNIFORM_FUNC_NAME[GL.FLOAT_MAT3] = \"uniformMatrix3fv\";\nUNIFORM_FUNC_NAME[GL.FLOAT_MAT4] = \"uniformMatrix4fv\";\nUNIFORM_FUNC_NAME[GL.FLOAT_MAT2x3] = \"uniformMatrix2x3fv\";\nUNIFORM_FUNC_NAME[GL.FLOAT_MAT2x4] = \"uniformMatrix2x4fv\";\nUNIFORM_FUNC_NAME[GL.FLOAT_MAT3x2] = \"uniformMatrix3x2fv\";\nUNIFORM_FUNC_NAME[GL.FLOAT_MAT3x4] = \"uniformMatrix3x4fv\";\nUNIFORM_FUNC_NAME[GL.FLOAT_MAT4x2] = \"uniformMatrix4x2fv\";\nUNIFORM_FUNC_NAME[GL.FLOAT_MAT4x3] = \"uniformMatrix4x3fv\";\n\nconst UNIFORM_COMPONENT_COUNT = {};\nUNIFORM_COMPONENT_COUNT[GL.BOOL] = 1;\nUNIFORM_COMPONENT_COUNT[GL.INT] = 1;\nUNIFORM_COMPONENT_COUNT[GL.SAMPLER_2D] = 1;\nUNIFORM_COMPONENT_COUNT[GL.INT_SAMPLER_2D] = 1;\nUNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_SAMPLER_2D] = 1;\nUNIFORM_COMPONENT_COUNT[GL.SAMPLER_2D_SHADOW] = 1;\nUNIFORM_COMPONENT_COUNT[GL.SAMPLER_2D_ARRAY] = 1;\nUNIFORM_COMPONENT_COUNT[GL.INT_SAMPLER_2D_ARRAY] = 1;\nUNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_SAMPLER_2D_ARRAY] = 1;\nUNIFORM_COMPONENT_COUNT[GL.SAMPLER_2D_ARRAY_SHADOW] = 1;\nUNIFORM_COMPONENT_COUNT[GL.SAMPLER_CUBE] = 1;\nUNIFORM_COMPONENT_COUNT[GL.INT_SAMPLER_CUBE] = 1;\nUNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_SAMPLER_CUBE] = 1;\nUNIFORM_COMPONENT_COUNT[GL.SAMPLER_CUBE_SHADOW] = 1;\nUNIFORM_COMPONENT_COUNT[GL.SAMPLER_3D] = 1;\nUNIFORM_COMPONENT_COUNT[GL.INT_SAMPLER_3D] = 1;\nUNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_SAMPLER_3D] = 1;\nUNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT] = 1;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT] = 1;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT_VEC2] = 2;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT_VEC3] = 3;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT_VEC4] = 4;\nUNIFORM_COMPONENT_COUNT[GL.INT_VEC2] = 2;\nUNIFORM_COMPONENT_COUNT[GL.INT_VEC3] = 3;\nUNIFORM_COMPONENT_COUNT[GL.INT_VEC4] = 4;\nUNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_VEC2] = 2;\nUNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_VEC3] = 3;\nUNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_VEC4] = 4;\nUNIFORM_COMPONENT_COUNT[GL.BOOL_VEC2] = 2;\nUNIFORM_COMPONENT_COUNT[GL.BOOL_VEC3] = 3;\nUNIFORM_COMPONENT_COUNT[GL.BOOL_VEC4] = 4;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT2] = 4;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT3] = 9;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT4] = 16;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT2x3] = 6;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT2x4] = 8;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT3x2] = 6;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT3x4] = 12;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT4x2] = 8;\nUNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT4x3] = 12;\n\nconst UNIFORM_CACHE_CLASS = {};\nUNIFORM_CACHE_CLASS[GL.INT] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.SAMPLER_2D] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.INT_SAMPLER_2D] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_SAMPLER_2D] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.SAMPLER_2D_SHADOW] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.SAMPLER_2D_ARRAY] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.INT_SAMPLER_2D_ARRAY] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_SAMPLER_2D_ARRAY] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.SAMPLER_2D_ARRAY_SHADOW] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.SAMPLER_CUBE] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.INT_SAMPLER_CUBE] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_SAMPLER_CUBE] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.SAMPLER_CUBE_SHADOW] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.SAMPLER_3D] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.INT_SAMPLER_3D] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_SAMPLER_3D] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.UNSIGNED_INT] = Uint32Array;\nUNIFORM_CACHE_CLASS[GL.FLOAT] = Float32Array;\nUNIFORM_CACHE_CLASS[GL.FLOAT_VEC2] = Float32Array;\nUNIFORM_CACHE_CLASS[GL.FLOAT_VEC3] = Float32Array;\nUNIFORM_CACHE_CLASS[GL.FLOAT_VEC4] = Float32Array;\nUNIFORM_CACHE_CLASS[GL.INT_VEC2] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.INT_VEC3] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.INT_VEC4] = Int32Array;\nUNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_VEC2] = Uint32Array;\nUNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_VEC3] = Uint32Array;\nUNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_VEC4] = Uint32Array;\n\nexport class SingleComponentUniform {\n    \n    constructor(gl, handle, type) {\n        this.gl = gl;\n        this.handle = handle;\n        this.glFuncName = UNIFORM_FUNC_NAME[type];\n        this.cache = type === GL.BOOL ? false : 0;\n    }\n\n    set(value) {\n        if (this.cache !== value) {\n            this.gl[this.glFuncName](this.handle, value);\n            this.cache = value;\n        }\n    }\n\n}\n\nexport class MultiNumericUniform {\n\n    constructor(gl, handle, type, count) {\n        this.gl = gl;\n        this.handle = handle;\n        this.glFuncName = UNIFORM_FUNC_NAME[type] + \"v\";\n        this.count = count;\n        this.cache = new UNIFORM_CACHE_CLASS[type](UNIFORM_COMPONENT_COUNT[type] * count);\n    }\n\n    set(value) {\n        for (let i = 0, len = value.length; i < len; ++i) {\n            if (this.cache[i] !== value[i]) {\n                this.gl[this.glFuncName](this.handle, value);\n                this.cache.set(value);\n                return;\n            }\n        }\n    }\n\n}\n\nexport class MultiBoolUniform {\n\n    constructor(gl, handle, type, count) {\n        this.gl = gl;\n        this.handle = handle;\n        this.glFuncName = UNIFORM_FUNC_NAME[type] + \"v\";\n        this.count = count;\n        this.cache = new Array(UNIFORM_COMPONENT_COUNT[type] * count).fill(false);\n    }\n\n    set(value) {\n        for (let i = 0, len = value.length; i < len; ++i) {\n            if (this.cache[i] !== value[i]) {\n                this.gl[this.glFuncName](this.handle, value);\n                for (let j = i; j < len; j++) {\n                    this.cache[j] = value[j];\n                }\n                return;\n            }\n        }\n    }\n\n}\n\nexport class MatrixUniform {\n\n    constructor(gl, handle, type, count) {\n        this.gl = gl;\n        this.handle = handle;\n        this.glFuncName = UNIFORM_FUNC_NAME[type];\n        this.count = count;\n        this.cache = new Float32Array(UNIFORM_COMPONENT_COUNT[type] * count);\n    }\n\n    set(value) {\n        for (let i = 0, len = value.length; i < len; ++i) {\n            if (this.cache[i] !== value[i]) {\n                this.gl[this.glFuncName](this.handle, false, value);\n                this.cache.set(value);\n                return;\n            }\n        }\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL, WEBGL_INFO } from \"./constants.js\";\nimport { Shader } from \"./shader.js\";\nimport {\n    SingleComponentUniform,\n    MultiNumericUniform,\n    MultiBoolUniform,\n    MatrixUniform\n} from \"./uniforms.js\";\n\n/**\n    WebGL program consisting of compiled and linked vertex and fragment\n    shaders.\n\n    @class Program\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {WebGLProgram} program The WebGL program.\n    @prop {array} transformFeedbackVaryings Names of transform feedback varyings, if any.\n    @prop {GLenum} transformFeedbackMode Capture mode of the transform feedback.\n    @prop {Object.<string, number>} attributeLocations Map of user-provided attribute names to indices, if any.\n    @prop {Object} uniforms Map of uniform names to handles.\n    @prop {Object} appState Tracked GL state.\n*/\nexport class Program {\n\n    constructor(gl, appState, vsSource, fsSource, xformFeebackVars, attributeLocations, transformFeedbackMode) {\n        this.gl = gl;\n        this.appState = appState;\n        this.program = null;\n        this.transformFeedbackVaryings = xformFeebackVars || null;\n        this.transformFeedbackMode = transformFeedbackMode || GL.SEPARATE_ATTRIBS;\n        this.attributeLocations = attributeLocations || null;\n        this.uniforms = {};\n        this.uniformBlocks = {};\n        this.uniformBlockCount = 0;\n        this.samplers = {};\n        this.samplerCount = 0;\n\n        this.vertexSource = null;\n        this.vertexShader = null;\n        this.fragmentSource = null;\n        this.fragmentShader = null;\n        this.linked = false;\n\n        if (typeof vsSource === \"string\") {\n            this.vertexSource = vsSource;\n        } else {\n            this.vertexShader = vsSource;\n        }\n\n        if (typeof fsSource === \"string\") {\n            this.fragmentSource = fsSource;\n        } else {\n            this.fragmentShader = fsSource;\n        }\n\n        this.initialize();\n    }\n\n    /**\n        Restore program after context loss. Note that this\n        will stall for completion. <b>App.restorePrograms</b>\n        is the preferred method for program restoration as\n        it will parallelize compilation where available.\n\n        @method\n        @return {Program} The Program object.\n    */\n    restore() {\n        this.initialize();\n        this.link();\n        this.checkLinkage();\n\n        return this;\n    }\n\n    /**\n        Get the vertex shader source translated for the platform's API.\n\n        @method\n        @return {String} The translated vertex shader source.\n    */\n    translatedVertexSource() {\n        if (this.vertexShader) {\n            return this.vertexShader.translatedSource();\n        } else {\n            let vertexShader = new Shader(this.gl, this.appState, GL.VERTEX_SHADER, this.vertexSource);\n            let translatedSource = vertexShader.translatedSource();\n            vertexShader.delete();\n            return translatedSource;\n        }\n    }\n\n    /**\n        Get the fragment shader source translated for the platform's API.\n\n        @method\n        @return {String} The translated fragment shader source.\n    */\n    translatedFragmentSource() {\n        if (this.fragmentShader) {\n            return this.fragmentShader.translatedSource();\n        } else {\n            let fragmentShader = new Shader(this.gl, this.appState, GL.FRAGMENT_SHADER, this.fragmentSource);\n            let translatedSource = fragmentShader.translatedSource();\n            fragmentShader.delete();\n            return translatedSource;\n        }\n    }\n\n    /**\n        Delete this program.\n\n        @method\n        @return {Program} The Program object.\n    */\n    delete() {\n        if (this.program) {\n            this.gl.deleteProgram(this.program);\n            this.program = null;\n\n            if (this.appState.program === this) {\n                this.gl.useProgram(null);\n                this.appState.program = null;\n            }\n        }\n\n        return this;\n    }\n\n    // Initialize program state\n    initialize() {\n        if (this.appState.program === this) {\n            this.gl.useProgram(null);\n            this.appState.program = null;\n        }\n\n        this.linked = false;\n        this.uniformBlockCount = 0;\n        this.samplerCount = 0;\n\n        if (this.vertexSource) {\n            this.vertexShader = new Shader(this.gl, this.appState, GL.VERTEX_SHADER, this.vertexSource);\n        }\n\n        if (this.fragmentSource) {\n            this.fragmentShader = new Shader(this.gl, this.appState, GL.FRAGMENT_SHADER, this.fragmentSource);\n        }\n\n        this.program = this.gl.createProgram();\n\n        return this;\n    }\n\n    // Attach shaders and link program.\n    // Done as a separate step to avoid stalls on compileShader\n    // when doing async compile.\n    link() {\n        this.gl.attachShader(this.program, this.vertexShader.shader);\n        this.gl.attachShader(this.program, this.fragmentShader.shader);\n        if (this.transformFeedbackVaryings) {\n            this.gl.transformFeedbackVaryings(this.program, this.transformFeedbackVaryings, this.transformFeedbackMode);\n        }\n        if (this.attributeLocations) {\n            for (let name in this.attributeLocations) {\n                this.gl.bindAttribLocation(this.program, this.attributeLocations[name], name);\n            }\n        }\n        this.gl.linkProgram(this.program);\n\n        return this;\n    }\n\n    // Check if compilation is complete\n    checkCompletion() {\n        if (WEBGL_INFO.PARALLEL_SHADER_COMPILE) {\n            return this.gl.getProgramParameter(this.program, GL.COMPLETION_STATUS_KHR);\n        }\n\n        return true;\n    }\n\n    // Check if program linked.\n    // Will stall for completion.\n    checkLinkage() {\n        if (this.linked) {\n            return this;\n        }\n\n        if (this.gl.getProgramParameter(this.program, GL.LINK_STATUS)) {\n            this.linked = true;\n            this.initVariables();\n        } else {\n            console.error(this.gl.getProgramInfoLog(this.program));\n            this.vertexShader.checkCompilation();\n            this.fragmentShader.checkCompilation();\n        }\n\n        if (this.vertexSource) {\n            this.vertexShader.delete();\n            this.vertexShader = null;\n        }\n\n        if (this.fragmentSource) {\n            this.fragmentShader.delete();\n            this.fragmentShader = null;\n        }\n\n        return this;\n    }\n\n    // Get variable handles from program\n    initVariables() {\n        this.bind();\n\n        let numUniforms = this.gl.getProgramParameter(this.program, GL.ACTIVE_UNIFORMS);\n        let textureUnit;\n\n        for (let i = 0; i < numUniforms; ++i) {\n            let uniformInfo = this.gl.getActiveUniform(this.program, i);\n            let uniformHandle = this.gl.getUniformLocation(this.program, uniformInfo.name);\n            let UniformClass = null;\n            let type = uniformInfo.type;\n            let numElements = uniformInfo.size;\n\n            switch (type) {\n                case GL.SAMPLER_2D:\n                case GL.INT_SAMPLER_2D:\n                case GL.UNSIGNED_INT_SAMPLER_2D:\n                case GL.SAMPLER_2D_SHADOW:\n                case GL.SAMPLER_2D_ARRAY:\n                case GL.INT_SAMPLER_2D_ARRAY:\n                case GL.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n                case GL.SAMPLER_2D_ARRAY_SHADOW:\n                case GL.SAMPLER_CUBE:\n                case GL.INT_SAMPLER_CUBE:\n                case GL.UNSIGNED_INT_SAMPLER_CUBE:\n                case GL.SAMPLER_CUBE_SHADOW:\n                case GL.SAMPLER_3D:\n                case GL.INT_SAMPLER_3D:\n                case GL.UNSIGNED_INT_SAMPLER_3D:\n                    textureUnit = this.samplerCount++;\n                    this.samplers[uniformInfo.name] = textureUnit;\n                    this.gl.uniform1i(uniformHandle, textureUnit);\n                    break;\n                case GL.INT:\n                case GL.UNSIGNED_INT:\n                case GL.FLOAT:\n                    UniformClass = numElements > 1 ? MultiNumericUniform : SingleComponentUniform;\n                    break;\n                case GL.BOOL:\n                    UniformClass = numElements > 1 ? MultiBoolUniform : SingleComponentUniform;\n                    break;\n                case GL.FLOAT_VEC2:\n                case GL.INT_VEC2:\n                case GL.UNSIGNED_INT_VEC2:\n                case GL.FLOAT_VEC3:\n                case GL.INT_VEC3:\n                case GL.UNSIGNED_INT_VEC3:\n                case GL.FLOAT_VEC4:\n                case GL.INT_VEC4:\n                case GL.UNSIGNED_INT_VEC4:\n                    UniformClass = MultiNumericUniform;\n                    break;\n                case GL.BOOL_VEC2:\n                case GL.BOOL_VEC3:\n                case GL.BOOL_VEC4:\n                    UniformClass = MultiBoolUniform;\n                    break;\n                case GL.FLOAT_MAT2:\n                case GL.FLOAT_MAT3:\n                case GL.FLOAT_MAT4:\n                case GL.FLOAT_MAT2x3:\n                case GL.FLOAT_MAT2x4:\n                case GL.FLOAT_MAT3x2:\n                case GL.FLOAT_MAT3x4:\n                case GL.FLOAT_MAT4x2:\n                case GL.FLOAT_MAT4x3:\n                    UniformClass = MatrixUniform;\n                    break;\n                default:\n                    console.error(\"Unrecognized type for uniform \", uniformInfo.name);\n                    break;\n            }\n\n            if (UniformClass) {\n                this.uniforms[uniformInfo.name] = new UniformClass(this.gl, uniformHandle, type, numElements);\n            }\n        }\n\n        let numUniformBlocks = this.gl.getProgramParameter(this.program, GL.ACTIVE_UNIFORM_BLOCKS);\n\n        for (let i = 0; i < numUniformBlocks; ++i) {\n            let blockName = this.gl.getActiveUniformBlockName(this.program, i);\n            let blockIndex = this.gl.getUniformBlockIndex(this.program, blockName);\n\n            let uniformBlockBase = this.uniformBlockCount++;\n            this.gl.uniformBlockBinding(this.program, blockIndex, uniformBlockBase);\n            this.uniformBlocks[blockName] = uniformBlockBase;\n        }\n    }\n\n    // Set the value of a uniform.\n    uniform(name, value) {\n        // some uniforms are optimized out\n        if (this.uniforms[name]) {\n            this.uniforms[name].set(value);\n        }\n\n        return this;\n    }\n\n    // Use this program.\n    bind() {\n        if (this.appState.program !== this) {\n            this.gl.useProgram(this.program);\n            this.appState.program = this;\n        }\n\n        return this;\n    }\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL } from \"./constants.js\";\n\n/**\n    Generic query object.\n\n    @class Query\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {WebGLQuery} query Query object.\n    @prop {GLenum} target The type of information being queried.\n    @prop {boolean} active Whether or not a query is currently in progress.\n    @prop {Any} result The result of the query (only available after a call to ready() returns true).\n*/\nexport class Query {\n\n    constructor(gl, target) {\n        this.gl = gl;\n        this.query = null;\n        this.target = target;\n        this.active = false;\n        this.result = null;\n\n        this.restore();\n    }\n\n    /**\n        Restore query after context loss.\n\n        @method\n        @return {Query} The Query object.\n    */\n    restore() {\n        this.query = this.gl.createQuery();\n        this.active = false;\n        this.result = null;\n\n        return this;\n    }\n\n    /**\n        Begin a query.\n\n        @method\n        @return {Query} The Query object.\n    */\n    begin() {\n        if (!this.active) {\n            this.gl.beginQuery(this.target, this.query);\n            this.result = null;\n        }\n\n        return this;\n    }\n\n    /**\n        End a query.\n\n        @method\n        @return {Query} The Query object.\n    */\n    end() {\n        if (!this.active) {\n            this.gl.endQuery(this.target);\n            this.active = true;\n        }\n\n        return this;\n    }\n\n    /**\n        Check if query result is available.\n\n        @method\n        @return {boolean} If results are available.\n    */\n    ready() {\n        if (this.active && this.gl.getQueryParameter(this.query, GL.QUERY_RESULT_AVAILABLE)) {\n            this.active = false;\n            // Note(Tarek): Casting because FF incorrectly returns booleans.\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1422714\n            this.result = Number(this.gl.getQueryParameter(this.query, GL.QUERY_RESULT));\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n        Delete this query.\n\n        @method\n        @return {Query} The Query object.\n    */\n    delete() {\n        if (this.query) {\n            this.gl.deleteQuery(this.query);\n            this.query = null;\n        }\n\n        return this;\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL, WEBGL_INFO } from \"./constants.js\";\nimport { Query } from \"./query.js\";\n\n/**\n    Rendering timer.\n\n    @class Timer\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {Object} cpuTimer Timer for CPU. Will be window.performance, if available, or window.Date.\n    @prop {WebGLQuery} gpuTimerQuery Timer query object for GPU (if gpu timing is supported).\n    @prop {boolean} gpuTimerQueryInProgress Whether a gpu timer query is currently in progress.\n    @prop {number} cpuStartTime When the last CPU timing started.\n    @prop {number} cpuTime Time spent on CPU during last timing. Only valid if ready() returns true.\n    @prop {number} gpuTime Time spent on GPU during last timing. Only valid if ready() returns true.\n            Will remain 0 if extension EXT_disjoint_timer_query_webgl2 is unavailable.\n*/\nexport class Timer {\n\n    constructor(gl) {\n        this.gl = gl;\n        this.cpuTimer = window.performance || window.Date;\n\n        this.gpuTimerQuery = null;\n\n        this.cpuStartTime = 0;\n        this.cpuTime = 0;\n        this.gpuTime = 0;\n\n        this.restore();\n    }\n\n    /**\n        Restore timer after context loss.\n\n        @method\n        @return {Timer} The Timer object.\n    */\n    restore() {\n        if (WEBGL_INFO.GPU_TIMER) {\n            if (this.gpuTimerQuery) {\n                this.gpuTimerQuery.restore();\n            } else {\n                this.gpuTimerQuery = new Query(this.gl, GL.TIME_ELAPSED_EXT);\n            }\n        }\n\n        this.cpuStartTime = 0;\n        this.cpuTime = 0;\n        this.gpuTime = 0;\n\n        return this;\n    }\n\n\n    /**\n        Start timing.\n\n        @method\n        @return {Timer} The Timer object.\n    */\n    start() {\n        if (WEBGL_INFO.GPU_TIMER) {\n            if (!this.gpuTimerQuery.active) {\n                this.gpuTimerQuery.begin();\n                this.cpuStartTime = this.cpuTimer.now();\n            }\n        } else {\n            this.cpuStartTime = this.cpuTimer.now();\n        }\n\n        return this;\n    }\n\n\n    /**\n        Stop timing.\n\n        @method\n        @return {Timer} The Timer object.\n    */\n    end() {\n        if (WEBGL_INFO.GPU_TIMER) {\n            if (!this.gpuTimerQuery.active) {\n                this.gpuTimerQuery.end();\n                this.cpuTime = this.cpuTimer.now() - this.cpuStartTime;\n            }\n        } else {\n            this.cpuTime = this.cpuTimer.now() - this.cpuStartTime;\n        }\n\n        return this;\n    }\n\n    /**\n        Check if timing results are available. If\n        this method returns true, the cpuTime and\n        gpuTime properties will be set to valid\n        values.\n\n        @method\n        @return {boolean} If results are available.\n    */\n    ready() {\n        if (WEBGL_INFO.GPU_TIMER) {\n            if (!this.gpuTimerQuery.active) {\n                return false;\n            }\n\n            var gpuTimerAvailable = this.gpuTimerQuery.ready();\n            var gpuTimerDisjoint = this.gl.getParameter(GL.GPU_DISJOINT_EXT);\n\n            if (gpuTimerAvailable && !gpuTimerDisjoint) {\n                this.gpuTime = this.gpuTimerQuery.result  / 1000000;\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return Boolean(this.cpuStartTime);\n        }\n    }\n\n    /**\n        Delete this timer.\n\n        @method\n        @return {Timer} The Timer object.\n    */\n    delete() {\n        if (this.gpuTimerQuery) {\n            this.gpuTimerQuery.delete();\n            this.gpuTimerQuery = null;\n        }\n\n        return this;\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL } from \"./constants.js\";\n\n/**\n    Tranform feedback object.\n\n    @class TransformFeedback\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {WebGLTransformFeedback} transformFeedback Transform feedback object.\n    @prop {Object} appState Tracked GL state.\n*/\nexport class TransformFeedback {\n\n    constructor(gl, appState) {\n        this.gl = gl;\n        this.appState = appState;\n        this.transformFeedback = null;\n\n        this.restore();\n    }\n\n    /**\n        Restore transform feedback after context loss.\n\n        @method\n        @return {TransformFeedback} The TransformFeedback object.\n    */\n    restore() {\n        if (this.appState.transformFeedback === this) {\n            this.appState.transformFeedback = null;\n        }\n\n        this.transformFeedback = this.gl.createTransformFeedback();\n\n        return this;\n    }\n\n    /**\n        Bind a feedback buffer to capture transform output.\n\n        @method\n        @param {number} index Index of transform feedback varying to capture.\n        @param {VertexBuffer} buffer Buffer to record output into.\n        @return {TransformFeedback} The TransformFeedback object.\n    */\n    feedbackBuffer(index, buffer) {\n        this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.transformFeedback);\n        this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER, index, buffer.buffer);\n\n        // TODO(Tarek): Firefox doesn't properly unbind TRANSFORM_FEEDBACK_BUFFER\n        // bindings when TRANSFORM_FEEDBACK is unbound.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1541396\n        this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, null);\n        this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER, index, null);\n\n        return this;\n    }\n\n    /**\n        Delete this transform feedback.\n\n        @method\n        @return {TransformFeedback} The TransformFeedback object.\n    */\n    delete() {\n        if (this.transformFeedback) {\n            this.gl.deleteTransformFeedback(this.transformFeedback);\n            this.transformFeedback = null;\n\n            if (this.appState.transformFeedback === this) {\n                this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, null);\n                this.appState.transformFeedback = null;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n        Bind this transform feedback.\n\n        @method\n        @ignore\n        @return {TransformFeedback} The TransformFeedback object.\n    */\n    bind() {\n        if (this.appState.transformFeedback !== this) {\n            this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.transformFeedback);\n            this.appState.transformFeedback = this;\n        }\n\n        return this;\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL } from \"./constants.js\";\n\n/**\n    Storage for uniform data. Data is stored in std140 layout.\n\n    @class UniformBuffer\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {WebGLBuffer} buffer Allocated buffer storage.\n    @prop {Float32Array} data Buffer data.\n    @prop {Object} dataViews Map of base data types to matching ArrayBufferViews of the buffer data.\n    @prop {Array} offsets Offsets into the array for each item in the buffer.\n    @prop {Array} sizes Size of the item at the given offset.\n    @prop {Array} types The base type of the item at the given offset (FLOAT, INT or UNSIGNED_INT).\n    @prop {number} size The size of the buffer (in 4-byte items).\n    @prop {GLenum} usage Usage pattern of the buffer.\n*/\nexport class UniformBuffer {\n\n    constructor(gl, appState, layout, usage = gl.DYNAMIC_DRAW) {\n        this.gl = gl;\n        this.buffer = null;\n        this.dataViews = {};\n        this.offsets = new Array(layout.length);\n        this.sizes = new Array(layout.length);\n        this.types = new Array(layout.length);\n        this.size = 0;\n        this.usage = usage;\n        this.appState = appState;\n\n        // -1 indicates unbound\n        this.currentBase = -1;\n\n        for (let i = 0, len = layout.length; i < len; ++i) {\n            let type = layout[i];\n            switch(type) {\n                case GL.FLOAT:\n                case GL.INT:\n                case GL.UNSIGNED_INT:\n                case GL.BOOL:\n                    this.offsets[i] = this.size;\n                    this.sizes[i] = 1;\n\n                    if (type === GL.INT) {\n                        this.types[i] = GL.INT;\n                    } else if (type === GL.UNSIGNED_INT) {\n                        this.types[i] = GL.UNSIGNED_INT;\n                    } else {\n                        this.types[i] = GL.FLOAT;\n                    }\n\n                    this.size++;\n                    break;\n                case GL.FLOAT_VEC2:\n                case GL.INT_VEC2:\n                case GL.UNSIGNED_INT_VEC2:\n                case GL.BOOL_VEC2:\n                    this.size += this.size % 2;\n                    this.offsets[i] = this.size;\n                    this.sizes[i] = 2;\n\n                    if (type === GL.INT_VEC2) {\n                        this.types[i] = GL.INT;\n                    } else if (type === GL.UNSIGNED_INT_VEC2) {\n                        this.types[i] = GL.UNSIGNED_INT;\n                    } else {\n                        this.types[i] = GL.FLOAT;\n                    }\n\n                    this.size += 2;\n                    break;\n                case GL.FLOAT_VEC3:\n                case GL.INT_VEC3:\n                case GL.UNSIGNED_INT_VEC3:\n                case GL.BOOL_VEC3:\n                case GL.FLOAT_VEC4:\n                case GL.INT_VEC4:\n                case GL.UNSIGNED_INT_VEC4:\n                case GL.BOOL_VEC4:\n                    this.size += (4 - this.size % 4) % 4;\n                    this.offsets[i] = this.size;\n                    this.sizes[i] = 4;\n\n                    if (type === GL.INT_VEC4 || type === GL.INT_VEC3) {\n                        this.types[i] = GL.INT;\n                    } else if (type === GL.UNSIGNED_INT_VEC4 || type === GL.UNSIGNED_INT_VEC3) {\n                        this.types[i] = GL.UNSIGNED_INT;\n                    } else {\n                        this.types[i] = GL.FLOAT;\n                    }\n\n                    this.size += 4;\n                    break;\n                case GL.FLOAT_MAT2:\n                case GL.FLOAT_MAT2x3:\n                case GL.FLOAT_MAT2x4:\n                    this.size += (4 - this.size % 4) % 4;\n                    this.offsets[i] = this.size;\n                    this.sizes[i] = 8;\n                    this.types[i] = GL.FLOAT;\n\n                    this.size += 8;\n                    break;\n                case GL.FLOAT_MAT3:\n                case GL.FLOAT_MAT3x2:\n                case GL.FLOAT_MAT3x4:\n                    this.size += (4 - this.size % 4) % 4;\n                    this.offsets[i] = this.size;\n                    this.sizes[i] = 12;\n                    this.types[i] = GL.FLOAT;\n\n                    this.size += 12;\n                    break;\n                case GL.FLOAT_MAT4:\n                case GL.FLOAT_MAT4x2:\n                case GL.FLOAT_MAT4x3:\n                    this.size += (4 - this.size % 4) % 4;\n                    this.offsets[i] = this.size;\n                    this.sizes[i] = 16;\n                    this.types[i] = GL.FLOAT;\n\n                    this.size += 16;\n                    break;\n                default:\n                    console.error(\"Unsupported type for uniform buffer.\");\n            }\n        }\n\n        this.size += (4 - this.size % 4) % 4;\n\n        this.data = new Float32Array(this.size);\n        this.dataViews[GL.FLOAT] = this.data;\n        this.dataViews[GL.INT] = new Int32Array(this.data.buffer);\n        this.dataViews[GL.UNSIGNED_INT] = new Uint32Array(this.data.buffer);\n\n        this.dirtyStart = this.size;\n        this.dirtyEnd = 0;\n\n        this.restore();\n    }\n\n    /**\n        Restore uniform buffer after context loss.\n\n        @method\n        @return {UniformBuffer} The UniformBuffer object.\n    */\n    restore() {\n        if (this.currentBase !== -1 && this.appState.uniformBuffers[this.currentBase] === this) {\n            this.appState.uniformBuffers[this.currentBase] = null;\n        }\n\n        this.buffer = this.gl.createBuffer();\n        this.gl.bindBuffer(GL.UNIFORM_BUFFER, this.buffer);\n        this.gl.bufferData(GL.UNIFORM_BUFFER, this.size * 4, this.usage);\n        this.gl.bindBuffer(GL.UNIFORM_BUFFER, null);\n\n        return this;\n    }\n\n    /**\n        Update data for a given item in the buffer. NOTE: Data is not\n        sent the the GPU until the update() method is called!\n\n        @method\n        @param {number} index Index in the layout of item to set.\n        @param {ArrayBufferView} value Value to store at the layout location.\n        @return {UniformBuffer} The UniformBuffer object.\n    */\n    set(index, value) {\n        let view = this.dataViews[this.types[index]];\n        let offset = this.offsets[index];\n        let size = this.sizes[index];\n\n        if (this.sizes[index] === 1)  {\n            view[offset] = value;\n        } else {\n            view.set(value, offset);\n        }\n\n        if (offset < this.dirtyStart) {\n            this.dirtyStart = offset;\n        }\n\n        if (this.dirtyEnd < offset + size) {\n            this.dirtyEnd = offset + size;\n        }\n\n        return this;\n    }\n\n    /**\n        Send stored buffer data to the GPU.\n\n        @method\n        @return {UniformBuffer} The UniformBuffer object.\n    */\n    update() {\n        if (this.dirtyStart >= this.dirtyEnd) {\n            return this;\n        }\n\n        let data = this.data.subarray(this.dirtyStart, this.dirtyEnd);\n        let offset = this.dirtyStart * 4;\n\n        this.gl.bindBuffer(this.gl.UNIFORM_BUFFER, this.buffer);\n        this.gl.bufferSubData(this.gl.UNIFORM_BUFFER, offset, data);\n        this.gl.bindBuffer(this.gl.UNIFORM_BUFFER, null);\n\n        this.dirtyStart = this.size;\n        this.dirtyEnd = 0;\n\n        return this;\n    }\n\n    /**\n        Delete this uniform buffer.\n\n        @method\n        @return {UniformBuffer} The UniformBuffer object.\n    */\n    delete() {\n        if (this.buffer) {\n            this.gl.deleteBuffer(this.buffer);\n            this.buffer = null;\n\n            if (this.currentBase !== -1 && this.appState.uniformBuffers[this.currentBase] === this) {\n                this.appState.uniformBuffers[this.currentBase] = null;\n            }\n\n            this.currentBase = -1;\n        }\n\n        return this;\n    }\n\n    /**\n        Bind this uniform buffer to the given base.\n\n        @method\n        @ignore\n        @return {UniformBuffer} The UniformBuffer object.\n    */\n    bind(base) {\n        let currentBuffer = this.appState.uniformBuffers[base];\n\n        if (currentBuffer !== this) {\n\n            if (currentBuffer) {\n                currentBuffer.currentBase = -1;\n            }\n\n            if (this.currentBase !== -1) {\n                this.appState.uniformBuffers[this.currentBase] = null;\n            }\n\n            this.gl.bindBufferBase(this.gl.UNIFORM_BUFFER, base, this.buffer);\n\n            this.appState.uniformBuffers[base] = this;\n            this.currentBase = base;\n        }\n\n        return this;\n    }\n\n}\n","// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL, TYPE_SIZE, DUMMY_OBJECT } from \"./constants.js\";\n\n/**\n    Organizes vertex buffer and attribute state.\n\n    @class VertexArray\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {WebGLVertexArrayObject} vertexArray Vertex array object.\n    @prop {number} numElements Number of elements in the vertex array.\n    @prop {boolean} indexed Whether this vertex array is set up for indexed drawing.\n    @prop {GLenum} indexType Data type of the indices.\n    @prop {number} numInstances Number of instances to draw with this vertex array.\n    @prop {Object} appState Tracked GL state.\n*/\nexport class VertexArray {\n\n    constructor(gl, appState) {\n        this.gl = gl;\n        this.appState = appState;\n        this.vertexArray = null;\n        this.indexType = null;\n        this.indexed = false;\n        this.numElements = 0;\n        this.numInstances = 1;\n        this.offsets = 0;\n        this.numDraws = 1;\n    }\n\n    /**\n        Restore vertex array after context loss.\n\n        @method\n        @return {VertexArray} The VertexArray object.\n    */\n    restore() {\n        if (this.appState.vertexArray === this) {\n            this.appState.vertexArray = null;\n        }\n\n        // re-allocate at gl level, if necessary\n        if (this.vertexArray !== null) {\n            this.vertexArray = this.gl.createVertexArray();\n        }\n\n        return this;\n    }\n\n\n    /**\n        Bind an per-vertex attribute buffer to this vertex array.\n\n        @method\n        @param {number} attributeIndex The attribute location to bind to.\n        @param {VertexBuffer} vertexBuffer The VertexBuffer to bind.\n        @param {Object} [options] Attribute pointer options. These will override those provided in the\n            VertexBuffer.\n        @param {GLenum} [options.type] Type of data stored in the buffer.\n        @param {GLenum} [options.size] Number of components per vertex.\n        @param {GLenum} [options.stride] Number of bytes between the start of data for each vertex.\n        @param {GLenum} [options.offset] Number of bytes before the start of data for the first vertex.\n        @param {boolean} [options.normalized] Data is integer data that should be normalized to a float.\n        @param {GLenum} [options.integer] Pass data as integers.\n        @return {VertexArray} The VertexArray object.\n    */\n    vertexAttributeBuffer(attributeIndex, vertexBuffer, options = DUMMY_OBJECT) {\n        this.attributeBuffer(attributeIndex, vertexBuffer, options, false);\n\n        return this;\n    }\n\n    /**\n        Bind an per-instance attribute buffer to this vertex array.\n\n        @method\n        @param {number} attributeIndex The attribute location to bind to.\n        @param {VertexBuffer} vertexBuffer The VertexBuffer to bind.\n        @param {Object} [options] Attribute pointer options. These will override those provided in the\n            VertexBuffer.\n        @param {GLenum} [options.type] Type of data stored in the buffer.\n        @param {GLenum} [options.size] Number of components per vertex.\n        @param {GLenum} [options.stride] Number of bytes between the start of data for each vertex.\n        @param {GLenum} [options.offset] Number of bytes before the start of data for the first vertex.\n        @param {GLenum} [options.normalized] Data is integer data that should be normalized to a float.\n        @param {GLenum} [options.integer] Pass data as integers.\n        @return {VertexArray} The VertexArray object.\n    */\n    instanceAttributeBuffer(attributeIndex, vertexBuffer, options = DUMMY_OBJECT) {\n        this.attributeBuffer(attributeIndex, vertexBuffer, options, true);\n\n        return this;\n    }\n\n    /**\n        Bind an index buffer to this vertex array.\n\n        @method\n        @param {VertexBuffer} vertexBuffer The VertexBuffer to bind.\n        @return {VertexArray} The VertexArray object.\n    */\n    indexBuffer(vertexBuffer) {\n        // allocate at gl level, if necessary\n        if (this.vertexArray === null) {\n            this.vertexArray = this.gl.createVertexArray();\n        }\n\n        this.bind();\n        this.gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, vertexBuffer.buffer);\n\n        this.numElements = vertexBuffer.numItems * 3;\n        this.indexType = vertexBuffer.type;\n        this.indexed = true;\n\n        return this;\n    }\n\n    /**\n        Delete this vertex array.\n\n        @method\n        @return {VertexArray} The VertexArray object.\n    */\n    delete() {\n        if (this.vertexArray) {\n            this.gl.deleteVertexArray(this.vertexArray);\n            this.vertexArray = null;\n\n            if (this.appState.vertexArray === this) {\n                this.gl.bindVertexArray(null);\n                this.appState.vertexArray = null;\n            }\n        }\n\n        return this;\n    }\n\n    // Bind this vertex array.\n    bind() {\n        if (this.appState.vertexArray !== this) {\n            this.gl.bindVertexArray(this.vertexArray);\n            this.appState.vertexArray = this;\n        }\n\n        return this;\n    }\n\n    // Generic attribute buffer attachment\n    attributeBuffer(attributeIndex, vertexBuffer, options = {}, instanced) {\n        // allocate at gl level, if necessary\n        if (this.vertexArray === null) {\n            this.vertexArray = this.gl.createVertexArray();\n        }\n\n        this.bind();\n        this.gl.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer.buffer);\n\n        let {\n            type = vertexBuffer.type,\n            size = vertexBuffer.itemSize,\n            stride = 0,\n            offset = 0,\n            normalized = false,\n            integer = Boolean(vertexBuffer.integer && !normalized)\n        } = options;\n\n        let numColumns = vertexBuffer.numColumns;\n\n        if (stride === 0) {\n            // Set explicitly for matrix buffers\n            stride = numColumns * size * TYPE_SIZE[type];\n        }\n\n        let numItems = Math.ceil((vertexBuffer.byteLength - offset) / stride);\n\n        for (let i = 0; i < numColumns; ++i) {\n            if (integer) {\n                this.gl.vertexAttribIPointer(\n                    attributeIndex + i,\n                    size,\n                    type,\n                    stride,\n                    offset + i * size * TYPE_SIZE[type]);\n            } else {\n                this.gl.vertexAttribPointer(\n                    attributeIndex + i,\n                    size,\n                    type,\n                    normalized,\n                    stride,\n                    offset + i * size * TYPE_SIZE[type]);\n            }\n\n            if (instanced) {\n                this.gl.vertexAttribDivisor(attributeIndex + i, 1);\n            }\n\n            this.gl.enableVertexAttribArray(attributeIndex + i);\n        }\n\n        if (this.numDraws === 1) {\n            if (instanced) {\n                this.numInstances = numItems;\n            } else if (!this.indexed) {\n                this.numElements = numItems;\n            }\n        }\n\n        this.gl.bindBuffer(GL.ARRAY_BUFFER, null);\n\n        return this;\n    }\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL, TYPE_SIZE } from \"./constants.js\";\n\nconst INTEGER_TYPES = {\n    [GL.BYTE]: true,\n    [GL.UNSIGNED_BYTE]: true,\n    [GL.SHORT]: true,\n    [GL.UNSIGNED_SHORT]: true,\n    [GL.INT]: true,\n    [GL.UNSIGNED_INT]: true\n};\n\n/**\n    Storage for vertex data.\n\n    @class VertexBuffer\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {WebGLBuffer} buffer Allocated buffer storage.\n    @prop {GLenum} type The type of data stored in the buffer.\n    @prop {number} itemSize Number of array elements per vertex.\n    @prop {number} numItems Number of vertices represented.\n    @prop {GLenum} usage The usage pattern of the buffer.\n    @prop {boolean} indexArray Whether this is an index array.\n    @prop {GLenum} binding GL binding point (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER).\n    @prop {Object} appState Tracked GL state.\n*/\nexport class VertexBuffer {\n\n    constructor(gl, appState, type, itemSize, data, usage = gl.STATIC_DRAW, indexArray) {\n        let numColumns;\n        switch(type) {\n            case GL.FLOAT_MAT4:\n            case GL.FLOAT_MAT4x2:\n            case GL.FLOAT_MAT4x3:\n                numColumns = 4;\n                break;\n            case GL.FLOAT_MAT3:\n            case GL.FLOAT_MAT3x2:\n            case GL.FLOAT_MAT3x4:\n                numColumns = 3;\n                break;\n            case GL.FLOAT_MAT2:\n            case GL.FLOAT_MAT2x3:\n            case GL.FLOAT_MAT2x4:\n                numColumns = 2;\n                break;\n            default:\n                numColumns = 1;\n        }\n\n        switch(type) {\n            case GL.FLOAT_MAT4:\n            case GL.FLOAT_MAT3x4:\n            case GL.FLOAT_MAT2x4:\n                itemSize = 4;\n                type = GL.FLOAT;\n                break;\n            case GL.FLOAT_MAT3:\n            case GL.FLOAT_MAT4x3:\n            case GL.FLOAT_MAT2x3:\n                itemSize = 3;\n                type = GL.FLOAT;\n                break;\n            case GL.FLOAT_MAT2:\n            case GL.FLOAT_MAT3x2:\n            case GL.FLOAT_MAT4x2:\n                itemSize = 2;\n                type = GL.FLOAT;\n                break;\n        }\n\n        let dataLength;\n        let byteLength;\n        if (typeof data === \"number\") {\n            dataLength = data;\n            if (type) {\n                data *= TYPE_SIZE[type];\n            }\n            byteLength = data;\n        } else {\n            dataLength = data.length;\n            byteLength = data.byteLength;\n        }\n\n        this.gl = gl;\n        this.buffer = null;\n        this.appState = appState;\n        this.type = type;\n        this.itemSize = itemSize;  // In bytes for interleaved arrays.\n        this.numItems = type ? dataLength / (itemSize * numColumns) : byteLength / itemSize;\n        this.numColumns = numColumns;\n        this.byteLength = byteLength;\n        this.usage = usage;\n        this.indexArray = Boolean(indexArray);\n        this.integer = Boolean(INTEGER_TYPES[this.type]);\n        this.binding = this.indexArray ? GL.ELEMENT_ARRAY_BUFFER : GL.ARRAY_BUFFER;\n\n        this.restore(data);\n    }\n\n    /**\n        Restore vertex buffer after context loss.\n\n        @method\n        @param {ArrayBufferView|number} data Buffer data itself or the total\n            number of elements to be allocated.\n        @return {VertexBuffer} The VertexBuffer object.\n    */\n    restore(data) {\n        if (!data) {\n            data = this.byteLength;\n        }\n\n        // Don't want to update vertex array bindings\n        if (this.appState.vertexArray) {\n            this.gl.bindVertexArray(null);\n            this.appState.vertexArray = null;\n        }\n\n        this.buffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.binding, this.buffer);\n        this.gl.bufferData(this.binding, data, this.usage);\n        this.gl.bindBuffer(this.binding, null);\n\n        return this;\n    }\n\n    /**\n        Update data in this buffer. NOTE: the data must fit\n        the originally-allocated buffer!\n\n        @method\n        @param {ArrayBufferView} data Data to store in the buffer.\n        @param {number} [offset=0] Byte offset into the buffer at which to start writing.\n        @return {VertexBuffer} The VertexBuffer object.\n    */\n    data(data, offset = 0) {\n        // Don't want to update vertex array bindings\n        if (this.appState.vertexArray) {\n            this.gl.bindVertexArray(null);\n            this.appState.vertexArray = null;\n        }\n\n        this.gl.bindBuffer(this.binding, this.buffer);\n        this.gl.bufferSubData(this.binding, offset, data);\n        this.gl.bindBuffer(this.binding, null);\n\n        return this;\n    }\n\n    /**\n        Delete this array buffer.\n\n        @method\n        @return {VertexBuffer} The VertexBuffer object.\n    */\n    delete() {\n        if (this.buffer) {\n            this.gl.deleteBuffer(this.buffer);\n            this.buffer = null;\n        }\n\n        return this;\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL, WEBGL_INFO, DUMMY_OBJECT } from \"./constants.js\";\nimport { Cubemap } from \"./cubemap.js\";\nimport { DrawCall } from \"./draw-call.js\";\nimport { Framebuffer } from \"./framebuffer.js\";\nimport { Renderbuffer } from \"./renderbuffer.js\";\nimport { Program } from \"./program.js\";\nimport { Shader } from \"./shader.js\";\nimport { Texture } from \"./texture.js\";\nimport { Timer } from \"./timer.js\";\nimport { TransformFeedback } from \"./transform-feedback.js\";\nimport { UniformBuffer } from \"./uniform-buffer.js\";\nimport { VertexArray } from \"./vertex-array.js\";\nimport { VertexBuffer } from \"./vertex-buffer.js\";\nimport { Query } from \"./query.js\";\n\n/**\n    Primary entry point to PicoGL. An app will store all parts of the WebGL\n    state.\n\n    @class App\n    @param {WebGLRenderingContext} gl\n    @prop {HTMLElement} canvas The canvas on which this app drawing.\n    @prop {WebGLRenderingContext} gl The WebGL context.\n    @prop {number} width The width of the drawing surface.\n    @prop {number} height The height of the drawing surface.\n    @prop {Object} state Tracked GL state.\n    @prop {Object} state.drawFramebufferBinding=GL.DRAW_FRAMEBUFFER Binding point to bind framebuffers to for draw. Should be set before any binding occurs. Should only have values GL.DRAW_FRAMEBUFFER or GL.FRAMEBUFFER (the latter with state.readFramebufferBinding set to the same).\n    @prop {Object} state.readFramebufferBinding=GL.READ_FRAMEBUFFER  Binding point to bind framebuffers to for read. Should be set before any binding occurs. Should only have values GL.READ_FRAMEBUFFER or GL.FRAMEBUFFER (the latter with state.drawFramebufferBinding set to the same).\n    @prop {GLenum} clearBits Current clear mask to use with clear().\n*/\nexport class App {\n\n    constructor(gl) {\n        this.gl = gl;\n        this.canvas = gl.canvas;\n        this.width = this.gl.drawingBufferWidth;\n        this.height = this.gl.drawingBufferHeight;\n        this.viewportX = 0;\n        this.viewportY = 0;\n        this.viewportWidth = 0;\n        this.viewportHeight = 0;\n        this.currentDrawCalls = null;\n        this.emptyFragmentShader = null;\n\n        this.state = {\n            program: null,\n            vertexArray: null,\n            transformFeedback: null,\n            activeTexture: -1,\n            textures: new Array(WEBGL_INFO.MAX_TEXTURE_UNITS),\n            uniformBuffers: new Array(WEBGL_INFO.MAX_UNIFORM_BUFFERS),\n            freeUniformBufferBases: [],\n            framebuffers: {},\n            drawFramebufferBinding: GL.DRAW_FRAMEBUFFER,\n            readFramebufferBinding: GL.READ_FRAMEBUFFER,\n            extensions: {}\n        };\n\n        this.clearBits = this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT| this.gl.STENCIL_BUFFER_BIT;\n\n        this.cpuTime = 0;\n        this.gpuTime = 0;\n\n        this.viewport(0, 0, this.width, this.height);\n\n        this.contextLostExt = null;\n        this.contextLostListener = null;\n        this.contextRestoredListener = null;\n        this.contextRestoredHandler = null;\n\n        this.initExtensions();\n    }\n\n    /**\n        Simulate context loss.\n\n        @method\n        @return {App} The App object.\n    */\n    loseContext() {\n        if (this.contextLostExt) {\n            this.contextLostExt.loseContext();\n        }\n\n        return this;\n    }\n\n    /**\n        Simulate context restoration.\n\n        @method\n        @return {App} The App object.\n    */\n    restoreContext() {\n        if (this.contextLostExt) {\n            this.contextLostExt.restoreContext();\n        }\n\n        return this;\n    }\n\n    /**\n        Set function to handle context restoration after loss.\n\n        @method\n        @param {function} fn Context restored handler.\n        @return {App} The App object.\n    */\n    onContextRestored(fn) {\n        this.contextRestoredHandler = fn;\n\n        this.initContextListeners();\n\n        return this;\n    }\n\n    /**\n        Enable WebGL capability (e.g. depth testing, blending, etc.).\n\n        @method\n        @param {GLenum} cap Capability to enable.\n        @return {App} The App object.\n    */\n    enable(cap) {\n        this.gl.enable(cap);\n\n        return this;\n    }\n\n    /**\n        Disable WebGL capability (e.g. depth testing, blending, etc.).\n\n        @method\n        @param {GLenum} cap Capability to disable.\n        @return {App} The App object.\n    */\n    disable(cap) {\n        this.gl.disable(cap);\n\n        return this;\n    }\n\n    /**\n        Set the color mask to selectively enable or disable particular\n        color channels while rendering.\n\n        @method\n        @param {boolean} r Red channel.\n        @param {boolean} g Green channel.\n        @param {boolean} b Blue channel.\n        @param {boolean} a Alpha channel.\n        @return {App} The App object.\n    */\n    colorMask(r, g, b, a) {\n        this.gl.colorMask(r, g, b, a);\n\n        return this;\n    }\n\n    /**\n        Set the clear color.\n\n        @method\n        @param {number} r Red channel.\n        @param {number} g Green channel.\n        @param {number} b Blue channel.\n        @param {number} a Alpha channel.\n        @return {App} The App object.\n    */\n    clearColor(r, g, b, a) {\n        this.gl.clearColor(r, g, b, a);\n\n        return this;\n    }\n\n    /**\n        Set the clear mask bits to use when calling clear().\n        E.g. app.clearMask(PicoGL.COLOR_BUFFER_BIT).\n\n        @method\n        @param {GLenum} mask Bit mask of buffers to clear.\n        @return {App} The App object.\n    */\n    clearMask(mask) {\n        this.clearBits = mask;\n\n        return this;\n    }\n\n    /**\n        Clear the canvas\n\n        @method\n        @return {App} The App object.\n    */\n    clear() {\n        this.gl.clear(this.clearBits);\n\n        return this;\n    }\n\n    /**\n        Bind a draw framebuffer to the WebGL context.\n\n        @method\n        @param {Framebuffer} framebuffer The Framebuffer object to bind.\n        @see Framebuffer\n        @return {App} The App object.\n    */\n    drawFramebuffer(framebuffer) {\n        framebuffer.bindForDraw();\n\n        return this;\n    }\n\n    /**\n        Bind a read framebuffer to the WebGL context.\n\n        @method\n        @param {Framebuffer} framebuffer The Framebuffer object to bind.\n        @see Framebuffer\n        @return {App} The App object.\n    */\n    readFramebuffer(framebuffer) {\n        framebuffer.bindForRead();\n\n        return this;\n    }\n\n    /**\n        Switch back to the default framebuffer for drawing (i.e. draw to the screen).\n        Note that this method resets the viewport to match the default framebuffer.\n\n        @method\n        @return {App} The App object.\n    */\n    defaultDrawFramebuffer() {\n        let binding = this.state.drawFramebufferBinding;\n        if (this.state.framebuffers[binding] !== null) {\n            this.gl.bindFramebuffer(binding, null);\n            this.state.framebuffers[binding] = null;\n        }\n\n        return this;\n    }\n\n    /**\n        Switch back to the default framebuffer for reading (i.e. read from the screen).\n\n        @method\n        @return {App} The App object.\n    */\n    defaultReadFramebuffer() {\n        let binding = this.state.readFramebufferBinding;\n        if (this.state.framebuffers[binding] !== null) {\n            this.gl.bindFramebuffer(binding, null);\n            this.state.framebuffers[binding] = null;\n        }\n\n        return this;\n    }\n\n    /**\n        Copy data from framebuffer attached to READ_FRAMEBUFFER to framebuffer attached to DRAW_FRAMEBUFFER.\n\n        @method\n        @param {GLenum} mask Write mask (e.g. PicoGL.COLOR_BUFFER_BIT).\n        @param {Object} [options] Blit options.\n        @param {number} [options.srcStartX=0] Source start x coordinate.\n        @param {number} [options.srcStartY=0] Source start y coordinate.\n        @param {number} [options.srcEndX=Width of the read framebuffer] Source end x coordinate.\n        @param {number} [options.srcEndY=Height of the read framebuffer] Source end y coordinate.\n        @param {number} [options.dstStartX=0] Destination start x coordinate.\n        @param {number} [options.dstStartY=0] Destination start y coordinate.\n        @param {number} [options.dstEndX=Width of the draw framebuffer] Destination end x coordinate.\n        @param {number} [options.dstEndY=Height of the draw framebuffer] Destination end y coordinate.\n        @param {number} [options.filter=NEAREST] Sampling filter.\n        @return {App} The App object.\n    */\n    blitFramebuffer(mask, options = DUMMY_OBJECT) {\n        let readBinding = this.state.readFramebufferBinding;\n        let drawBinding = this.state.drawFramebufferBinding;\n        let readFramebuffer = this.state.framebuffers[readBinding];\n        let drawFramebuffer = this.state.framebuffers[drawBinding];\n        let defaultReadWidth = readFramebuffer ? readFramebuffer.width : this.width;\n        let defaultReadHeight = readFramebuffer ? readFramebuffer.height : this.height;\n        let defaultDrawWidth = drawFramebuffer ? drawFramebuffer.width : this.width;\n        let defaultDrawHeight = drawFramebuffer ? drawFramebuffer.height : this.height;\n\n        let {\n            srcStartX = 0,\n            srcStartY = 0,\n            srcEndX = defaultReadWidth,\n            srcEndY = defaultReadHeight,\n            dstStartX = 0,\n            dstStartY = 0,\n            dstEndX = defaultDrawWidth,\n            dstEndY = defaultDrawHeight,\n            filter = GL.NEAREST\n        } = options;\n\n        this.gl.blitFramebuffer(srcStartX, srcStartY, srcEndX, srcEndY, dstStartX, dstStartY, dstEndX, dstEndY, mask, filter);\n\n        return this;\n    }\n\n    /**\n        Set the depth range.\n\n        @method\n        @param {number} near Minimum depth value.\n        @param {number} far Maximum depth value.\n        @return {App} The App object.\n    */\n    depthRange(near, far) {\n        this.gl.depthRange(near, far);\n\n        return this;\n    }\n\n    /**\n        Enable or disable writing to the depth buffer.\n\n        @method\n        @param {Boolean} mask The depth mask.\n        @return {App} The App object.\n    */\n    depthMask(mask) {\n        this.gl.depthMask(mask);\n\n        return this;\n    }\n\n    /**\n        Set the depth test function. E.g. app.depthFunc(PicoGL.LEQUAL).\n\n        @method\n        @param {GLenum} func The depth testing function to use.\n        @return {App} The App object.\n    */\n    depthFunc(func) {\n        this.gl.depthFunc(func);\n\n        return this;\n    }\n\n    /**\n        Set the blend function. E.g. app.blendFunc(PicoGL.ONE, PicoGL.ONE_MINUS_SRC_ALPHA).\n\n        @method\n        @param {GLenum} src The source blending weight.\n        @param {GLenum} dest The destination blending weight.\n        @return {App} The App object.\n    */\n    blendFunc(src, dest) {\n        this.gl.blendFunc(src, dest);\n\n        return this;\n    }\n\n    /**\n        Set the blend function, with separate weighting for color and alpha channels.\n        E.g. app.blendFuncSeparate(PicoGL.ONE, PicoGL.ONE_MINUS_SRC_ALPHA, PicoGL.ONE, PicoGL.ONE).\n\n        @method\n        @param {GLenum} csrc The source blending weight for the RGB channels.\n        @param {GLenum} cdest The destination blending weight for the RGB channels.\n        @param {GLenum} asrc The source blending weight for the alpha channel.\n        @param {GLenum} adest The destination blending weight for the alpha channel.\n        @return {App} The App object.\n    */\n    blendFuncSeparate(csrc, cdest, asrc, adest) {\n        this.gl.blendFuncSeparate(csrc, cdest, asrc, adest);\n\n        return this;\n    }\n\n    /**\n        Set the blend equation. E.g. app.blendEquation(PicoGL.MIN).\n\n        @method\n        @param {GLenum} mode The operation to use in combining source and destination channels.\n        @return {App} The App object.\n    */\n    blendEquation(mode) {\n        this.gl.blendEquation(mode);\n\n        return this;\n    }\n\n    /**\n        Set the bitmask to use for tested stencil values.\n        E.g. app.stencilMask(0xFF).\n        NOTE: Only works if { stencil: true } passed as a\n        context attribute when creating the App!\n\n        @method\n        @param {number} mask The mask value.\n        @return {App} The App object.\n\n    */\n    stencilMask(mask) {\n        this.gl.stencilMask(mask);\n\n        return this;\n    }\n\n    /**\n        Set the bitmask to use for tested stencil values for a particular face orientation.\n        E.g. app.stencilMaskSeparate(PicoGL.FRONT, 0xFF).\n        NOTE: Only works if { stencil: true } passed as a\n        context attribute when creating the App!\n\n        @method\n        @param {GLenum} face The face orientation to apply the mask to.\n        @param {number} mask The mask value.\n        @return {App} The App object.\n    */\n    stencilMaskSeparate(face, mask) {\n        this.gl.stencilMaskSeparate(face, mask);\n\n        return this;\n    }\n\n    /**\n        Set the stencil function and reference value.\n        E.g. app.stencilFunc(PicoGL.EQUAL, 1, 0xFF).\n        NOTE: Only works if { stencil: true } passed as a\n        context attribute when creating the App!\n\n        @method\n        @param {GLenum} func The testing function.\n        @param {number} ref The reference value.\n        @param {GLenum} mask The bitmask to use against tested values before applying\n            the stencil function.\n        @return {App} The App object.\n    */\n    stencilFunc(func, ref, mask) {\n        this.gl.stencilFunc(func, ref, mask);\n\n        return this;\n    }\n\n    /**\n        Set the stencil function and reference value for a particular face orientation.\n        E.g. app.stencilFuncSeparate(PicoGL.FRONT, PicoGL.EQUAL, 1, 0xFF).\n        NOTE: Only works if { stencil: true } passed as a\n        context attribute when creating the App!\n\n        @method\n        @param {GLenum} face The face orientation to apply the function to.\n        @param {GLenum} func The testing function.\n        @param {number} ref The reference value.\n        @param {GLenum} mask The bitmask to use against tested values before applying\n            the stencil function.\n        @return {App} The App object.\n    */\n    stencilFuncSeparate(face, func, ref, mask) {\n        this.gl.stencilFuncSeparate(face, func, ref, mask);\n\n        return this;\n    }\n\n    /**\n        Set the operations for updating stencil buffer values.\n        E.g. app.stencilOp(PicoGL.KEEP, PicoGL.KEEP, PicoGL.REPLACE).\n        NOTE: Only works if { stencil: true } passed as a\n        context attribute when creating the App!\n\n        @method\n        @param {GLenum} stencilFail Operation to apply if the stencil test fails.\n        @param {GLenum} depthFail Operation to apply if the depth test fails.\n        @param {GLenum} pass Operation to apply if the both the depth and stencil tests pass.\n        @return {App} The App object.\n    */\n    stencilOp(stencilFail, depthFail, pass) {\n        this.gl.stencilOp(stencilFail, depthFail, pass);\n\n        return this;\n    }\n\n    /**\n        Set the operations for updating stencil buffer values for a particular face orientation.\n        E.g. app.stencilOpSeparate(PicoGL.FRONT, PicoGL.KEEP, PicoGL.KEEP, PicoGL.REPLACE).\n        NOTE: Only works if { stencil: true } passed as a\n        context attribute when creating the App!\n\n        @method\n        @param {GLenum} face The face orientation to apply the operations to.\n        @param {GLenum} stencilFail Operation to apply if the stencil test fails.\n        @param {GLenum} depthFail Operation to apply if the depth test fails.\n        @param {GLenum} pass Operation to apply if the both the depth and stencil tests pass.\n        @return {App} The App object.\n    */\n    stencilOpSeparate(face, stencilFail, depthFail, pass) {\n        this.gl.stencilOpSeparate(face, stencilFail, depthFail, pass);\n\n        return this;\n    }\n\n    /**\n        Define the scissor box.\n\n        @method\n        @param {Number} x Horizontal position of the scissor box.\n        @param {Number} y Vertical position of the scissor box.\n        @param {Number} width Width of the scissor box.\n        @param {Number} height Height of the scissor box.\n        @return {App} The App object.\n    */\n    scissor(x, y, width, height) {\n        this.gl.scissor(x, y, width, height);\n\n        return this;\n    }\n\n    /**\n        Set the scale and units used.\n\n        @method\n        @param {Number} factor Scale factor used to create a variable depth offset for each polygon.\n        @param {Number} units Constant depth offset.\n        @return {App} The App object.\n    */\n    polygonOffset(factor, units) {\n        this.gl.polygonOffset(factor, units);\n\n        return this;\n    }\n\n    /**\n        Read a pixel's color value from the currently-bound framebuffer.\n\n        @method\n        @param {number} x The x coordinate of the pixel.\n        @param {number} y The y coordinate of the pixel.\n        @param {ArrayBufferView} outColor Typed array to store the pixel's color.\n        @param {object} [options] Options.\n        @param {GLenum} [options.type=UNSIGNED_BYTE] Type of data stored in the read framebuffer.\n        @param {GLenum} [options.format=RGBA] Read framebuffer data format.\n        @return {App} The App object.\n    */\n    readPixel(x, y, outColor, options = DUMMY_OBJECT) {\n        let {\n            format = GL.RGBA,\n            type = GL.UNSIGNED_BYTE\n        } = options;\n\n        this.gl.readPixels(x, y, 1, 1, format, type, outColor);\n\n        return this;\n    }\n\n    /**\n        Set the viewport.\n\n        @method\n        @param {number} x Left bound of the viewport rectangle.\n        @param {number} y Lower bound of the viewport rectangle.\n        @param {number} width Width of the viewport rectangle.\n        @param {number} height Height of the viewport rectangle.\n        @return {App} The App object.\n    */\n    viewport(x, y, width, height) {\n\n        if (this.viewportWidth !== width || this.viewportHeight !== height ||\n                this.viewportX !== x || this.viewportY !== y) {\n            this.viewportX = x;\n            this.viewportY = y;\n            this.viewportWidth = width;\n            this.viewportHeight = height;\n            this.gl.viewport(x, y, this.viewportWidth, this.viewportHeight);\n        }\n\n        return this;\n    }\n\n    /**\n        Set the viewport to the full canvas.\n\n        @method\n        @return {App} The App object.\n    */\n    defaultViewport() {\n        this.viewport(0, 0, this.width, this.height);\n\n        return this;\n    }\n\n    /**\n        Resize the drawing surface.\n\n        @method\n        @param {number} width The new canvas width.\n        @param {number} height The new canvas height.\n        @return {App} The App object.\n    */\n    resize(width, height) {\n        this.canvas.width = width;\n        this.canvas.height = height;\n\n        this.width = this.gl.drawingBufferWidth;\n        this.height = this.gl.drawingBufferHeight;\n        this.viewport(0, 0, this.width, this.height);\n\n        return this;\n    }\n\n    /**\n        Create a program synchronously. It is highly recommended to use <b>createPrograms</b> instead as\n            that method will compile shaders in parallel where possible.\n        @method\n        @param {Shader|string} vertexShader Vertex shader object or source code.\n        @param {Shader|string} fragmentShader Fragment shader object or source code.\n        @param {Object} [options] Texture options.\n        @param {Object} [options.attributeLocations] Map of attribute names to locations (useful when using GLSL 1).\n        @param {Array} [options.transformFeedbackVaryings] Array of varying names used for transform feedback output.\n        @param {GLenum} [options.transformFeedbackMode] Capture mode of the transform feedback. (Default: PicoGL.SEPARATE_ATTRIBS).\n        @return {Program} New Program object.\n    */\n    createProgram(vsSource, fsSource, opts = {}) {\n        let {transformFeedbackVaryings, attributeLocations, transformFeedbackMode} = opts;\n\n        return new Program(this.gl, this.state, vsSource, fsSource, transformFeedbackVaryings, attributeLocations, transformFeedbackMode)\n            .link()\n            .checkLinkage();\n    }\n\n    /**\n        Create several programs. Preferred method for program creation as it will compile shaders\n        in parallel where possible.\n\n        @method\n        @param {...Array} sources Variable number of 2 or 3 element arrays, each containing:\n            <ul>\n                <li> (Shader|string) Vertex shader object or source code.\n                <li> (Shader|string) Fragment shader object or source code.\n                <li> (Object - optional) Optional program parameters.\n                <ul>\n                    <li>(Object - optional) <strong><code>attributeLocations</code></strong> Map of attribute names to locations (useful when using GLSL 1).\n                    <li>(Array - optional) <strong><code>transformFeedbackVaryings</code></strong> Array of varying names used for transform feedback output.\n                    <li>(GLenum - optional) <strong><code>transformFeedbackMode</code></strong> Capture mode of the transform feedback. (Default: PicoGL.SEPARATE_ATTRIBS).\n                </ul>\n                </ul>\n            </ul>\n        @return {Promise<Program[]>} Promise that will resolve to an array of Programs when compilation and\n            linking are complete for all programs.\n    */\n    createPrograms(...sources) {\n        return new Promise((resolve, reject) => {\n            let numPrograms = sources.length;\n            let programs = new Array(numPrograms);\n            let pendingPrograms = new Array(numPrograms);\n            let numPending = numPrograms;\n\n            for (let i = 0; i < numPrograms; ++i) {\n                let source = sources[i];\n                let vsSource = source[0];\n                let fsSource = source[1];\n                let opts = source[2] || {};\n                let {transformFeedbackVaryings, attributeLocations, transformFeedbackMode} = opts;\n                programs[i] = new Program(this.gl, this.state, vsSource, fsSource, transformFeedbackVaryings, attributeLocations, transformFeedbackMode);\n                pendingPrograms[i] = programs[i];\n            }\n\n            for (let i = 0; i < numPrograms; ++i) {\n                programs[i].link();\n            }\n\n            let poll = () => {\n                let linked = 0;\n                for (let i = 0; i < numPending; ++i) {\n                    if (pendingPrograms[i].checkCompletion()) {\n                        pendingPrograms[i].checkLinkage();\n                        if (pendingPrograms[i].linked) {\n                            ++linked;\n                        } else {\n                            reject(new Error(\"Program linkage failed\"));\n                            return;\n                        }\n                    } else {\n                        pendingPrograms[i - linked] = pendingPrograms[i];\n                    }\n                }\n\n                numPending -= linked;\n\n                if (numPending === 0) {\n                    resolve(programs);\n                } else {\n                    requestAnimationFrame(poll);\n                }\n            };\n\n            poll();\n        });\n    }\n\n    /**\n        Restore several programs after a context loss. Will do so in parallel where available.\n\n        @method\n        @param {...Program} sources Variable number of programs to restore.\n\n        @return {Promise<void>} Promise that will resolve once all programs have been restored.\n    */\n    restorePrograms(...programs) {\n        return new Promise((resolve, reject) => {\n            let numPrograms = programs.length;\n            let pendingPrograms = programs.slice();\n            let numPending = numPrograms;\n\n            for (let i = 0; i < numPrograms; ++i) {\n                programs[i].initialize();\n            }\n\n            for (let i = 0; i < numPrograms; ++i) {\n                programs[i].link();\n            }\n\n            for (let i = 0; i < numPrograms; ++i) {\n                programs[i].checkCompletion();\n            }\n\n            let poll = () => {\n                let linked = 0;\n                for (let i = 0; i < numPending; ++i) {\n                    if (pendingPrograms[i].checkCompletion()) {\n                        pendingPrograms[i].checkLinkage();\n                        if (pendingPrograms[i].linked) {\n                            ++linked;\n                        } else {\n                            reject(new Error(\"Program linkage failed\"));\n                            return;\n                        }\n                    } else {\n                        pendingPrograms[i - linked] = pendingPrograms[i];\n                    }\n                }\n\n                numPending -= linked;\n\n                if (numPending === 0) {\n                    resolve();\n                } else {\n                    requestAnimationFrame(poll);\n                }\n            };\n\n            poll();\n        });\n    }\n\n    /**\n        Create a shader. Creating a shader separately from a program allows for\n        shader reuse.\n\n        @method\n        @param {GLenum} type Shader type.\n        @param {string} source Shader source.\n        @return {Shader} New Shader object.\n    */\n    createShader(type, source) {\n        return new Shader(this.gl, this.state, type, source);\n    }\n\n    /**\n        Create a vertex array.\n\n        @method\n        @return {VertexArray} New VertexArray object.\n    */\n    createVertexArray() {\n        return new VertexArray(this.gl, this.state);\n    }\n\n    /**\n        Create a transform feedback object.\n\n        @method\n        @return {TransformFeedback} New TransformFeedback object.\n    */\n    createTransformFeedback() {\n        return new TransformFeedback(this.gl, this.state);\n    }\n\n    /**\n        Create a vertex buffer.\n\n        @method\n        @param {GLenum} type The data type stored in the vertex buffer.\n        @param {number} itemSize Number of elements per vertex.\n        @param {ArrayBufferView|number} data Buffer data itself or the total\n            number of elements to be allocated.\n        @param {GLenum} [usage=STATIC_DRAW] Buffer usage.\n        @return {VertexBuffer} New VertexBuffer object.\n    */\n    createVertexBuffer(type, itemSize, data, usage) {\n        return new VertexBuffer(this.gl, this.state, type, itemSize, data, usage);\n    }\n\n    /**\n        Create a per-vertex matrix buffer. Matrix buffers ensure that columns\n        are correctly split across attribute locations.\n\n        @method\n        @param {GLenum} type The data type stored in the matrix buffer. Valid types\n        are FLOAT_MAT4, FLOAT_MAT4x2, FLOAT_MAT4x3, FLOAT_MAT3, FLOAT_MAT3x2,\n        FLOAT_MAT3x4, FLOAT_MAT2, FLOAT_MAT2x3, FLOAT_MAT2x4.\n        @param {ArrayBufferView} data Matrix buffer data.\n        @param {GLenum} [usage=STATIC_DRAW] Buffer usage.\n        @return {VertexBuffer} New VertexBuffer object.\n    */\n    createMatrixBuffer(type, data, usage) {\n        return new VertexBuffer(this.gl, this.state, type, 0, data, usage);\n    }\n\n    /**\n        Create an buffer without any structure information. Structure\n        must be fully specified when binding to a VertexArray.\n\n        @method\n        @param {number} bytesPerVertex Number of bytes per vertex.\n        @param {ArrayBufferView|number} data Buffer data itself or the total\n            number of bytes to be allocated.\n        @param {GLenum} [usage=STATIC_DRAW] Buffer usage.\n        @return {VertexBuffer} New VertexBuffer object.\n    */\n    createInterleavedBuffer(bytesPerVertex, data, usage) {\n        return new VertexBuffer(this.gl, this.state, null, bytesPerVertex, data, usage);\n    }\n\n    /**\n        Create an index buffer. If the `itemSize` is not specified, it defaults to 3\n\n        @method\n        @variation 1\n        @param {GLenum} type The data type stored in the index buffer.\n        @param {ArrayBufferView} data Index buffer data.\n        @param {GLenum} [usage=STATIC_DRAW] Buffer usage.\n        @return {VertexBuffer} New VertexBuffer object.\n    *//**\n        Create an index buffer.\n\n        @method\n        @variation 2\n        @param {GLenum} type The data type stored in the index buffer.\n        @param {number} itemSize Number of elements per primitive.\n        @param {ArrayBufferView} data Index buffer data.\n        @param {GLenum} [usage=STATIC_DRAW] Buffer usage.\n        @return {VertexBuffer} New VertexBuffer object.\n    */\n    createIndexBuffer(type, itemSize, data, usage) {\n        if (ArrayBuffer.isView(itemSize)) {\n            usage = data;\n            data = itemSize;\n            itemSize = 3;\n        }\n        return new VertexBuffer(this.gl, this.state, type, itemSize, data, usage, true);\n    }\n\n    /**\n        Create a uniform buffer in std140 layout. NOTE: FLOAT_MAT2, FLOAT_MAT3x2, FLOAT_MAT4x2,\n        FLOAT_MAT3, FLOAT_MAT2x3, FLOAT_MAT4x3 are supported, but must be manually padded to\n        4-float column alignment by the application!\n\n        @method\n        @param {Array} layout Array indicating the order and types of items to\n                        be stored in the buffer.\n        @param {GLenum} [usage=DYNAMIC_DRAW] Buffer usage.\n        @return {UniformBuffer} New UniformBuffer object.\n    */\n    createUniformBuffer(layout, usage) {\n        return new UniformBuffer(this.gl, this.state, layout, usage);\n    }\n\n    /**\n        Create empty 2D texture.\n        @method\n        @variation 1\n        @param {number} width - Texture width. Required for array or empty data.\n        @param {number} height - Texture height. Required for array or empty data.\n        @param {Object} [options] Texture options.\n        @param {GLenum} [options.internalFormat=RGBA8] Texture data internal format. Must be a sized format.\n        @param {GLenum} [options.type] Type of data stored in the texture. Default based on\n            <b>internalFormat</b>.\n        @param {boolean} [options.flipY=false] Whether the y-axis should be flipped when unpacking the texture.\n        @param {boolean} [options.premultiplyAlpha=false] Whether the alpha channel should be pre-multiplied when unpacking the texture.\n        @param {GLenum} [options.minFilter] Minification filter. Defaults to\n            LINEAR_MIPMAP_NEAREST if image data is provided, NEAREST otherwise.\n        @param {GLenum} [options.magFilter] Magnification filter. Defaults to LINEAR\n            if image data is provided, NEAREST otherwise.\n        @param {GLenum} [options.wrapS=REPEAT] Horizontal wrap mode.\n        @param {GLenum} [options.wrapT=REPEAT] Vertical wrap mode.\n        @param {GLenum} [options.compareMode=NONE] Comparison mode.\n        @param {GLenum} [options.compareFunc=LEQUAL] Comparison function.\n        @param {GLenum} [options.baseLevel] Base mipmap level.\n        @param {GLenum} [options.maxLevel] Maximum mipmap level.\n        @param {GLenum} [options.minLOD] Mimimum level of detail.\n        @param {GLenum} [options.maxLOD] Maximum level of detail.\n        @param {GLenum} [options.maxAnisotropy] Maximum anisotropy in filtering.\n        @return {Texture} New Texture object.\n    *//**\n        Create a 2D texture from a DOM image element.\n        @method\n        @variation 2\n        @param {HTMLImageElement|HTMLImageElement[]} image - Image data. An array can be passed to manually set all levels\n            of the mipmap chain. If a single level is passed and mipmap filtering is being used,\n            generateMipmap() will be called to produce the remaining levels.\n        @param {Object} [options] Texture options.\n        @param {GLenum} [options.internalFormat=RGBA8] Texture data internal format. Must be a sized format.\n        @param {GLenum} [options.type] Type of data stored in the texture. Default based on\n            <b>intrnalFormat</b>.\n        @param {boolean} [options.flipY=false] Whether the y-axis should be flipped when unpacking the texture.\n        @param {boolean} [options.premultiplyAlpha=false] Whether the alpha channel should be pre-multiplied when unpacking the texture.\n        @param {GLenum} [options.minFilter] Minification filter. Defaults to\n            LINEAR_MIPMAP_NEAREST if image data is provided, NEAREST otherwise.\n        @param {GLenum} [options.magFilter] Magnification filter. Defaults to LINEAR\n            if image data is provided, NEAREST otherwise.\n        @param {GLenum} [options.wrapS=REPEAT] Horizontal wrap mode.\n        @param {GLenum} [options.wrapT=REPEAT] Vertical wrap mode.\n        @param {GLenum} [options.compareMode=NONE] Comparison mode.\n        @param {GLenum} [options.compareFunc=LEQUAL] Comparison function.\n        @param {GLenum} [options.baseLevel] Base mipmap level.\n        @param {GLenum} [options.maxLevel] Maximum mipmap level.\n        @param {GLenum} [options.minLOD] Mimimum level of detail.\n        @param {GLenum} [options.maxLOD] Maximum level of detail.\n        @param {GLenum} [options.maxAnisotropy] Maximum anisotropy in filtering.\n        @return {Texture} New Texture object.\n    *//**\n        Create 2D texture from a typed array.\n        @method\n        @variation 3\n        @param {ArrayBufferView|ArrayBufferView[]} image - Image data. An array can be passed to manually set all levels\n            of the mipmap chain. If a single level is passed and mipmap filtering is being used,\n            generateMipmap() will be called to produce the remaining levels.\n        @param {number} width - Texture width. Required for array or empty data.\n        @param {number} height - Texture height. Required for array or empty data.\n        @param {Object} [options] Texture options.\n        @param {GLenum} [options.internalFormat=RGBA8] Texture data internal format. Must be a sized format.\n        @param {GLenum} [options.type] Type of data stored in the texture. Default based on\n            <b>internalFormat</b>.\n        @param {boolean} [options.flipY=false] Whether the y-axis should be flipped when unpacking the texture.\n        @param {boolean} [options.premultiplyAlpha=false] Whether the alpha channel should be pre-multiplied when unpacking the texture.\n        @param {GLenum} [options.minFilter] Minification filter. Defaults to\n            LINEAR_MIPMAP_NEAREST if image data is provided, NEAREST otherwise.\n        @param {GLenum} [options.magFilter] Magnification filter. Defaults to LINEAR\n            if image data is provided, NEAREST otherwise.\n        @param {GLenum} [options.wrapS=REPEAT] Horizontal wrap mode.\n        @param {GLenum} [options.wrapT=REPEAT] Vertical wrap mode.\n        @param {GLenum} [options.compareMode=NONE] Comparison mode.\n        @param {GLenum} [options.compareFunc=LEQUAL] Comparison function.\n        @param {GLenum} [options.baseLevel] Base mipmap level.\n        @param {GLenum} [options.maxLevel] Maximum mipmap level.\n        @param {GLenum} [options.minLOD] Mimimum level of detail.\n        @param {GLenum} [options.maxLOD] Maximum level of detail.\n        @param {GLenum} [options.maxAnisotropy] Maximum anisotropy in filtering.\n        @return {Texture} New Texture object.\n    */\n    createTexture2D(image, width, height, options) {\n        if (typeof image === \"number\") {\n            // Create empty texture just give width/height.\n            options = height;\n            height = width;\n            width = image;\n            image = null;\n        } else if (height === undefined) {\n            // Passing in a DOM element. Height/width not required.\n            options = width;\n            width = image.width;\n            height = image.height;\n        }\n\n        return new Texture(this.gl, this.state, this.gl.TEXTURE_2D, image, width, height, undefined, false, options);\n    }\n\n    /**\n        Create a 2D texture array.\n\n        @method\n        @param {ArrayBufferView|Array} image Pixel data. An array can be passed to manually set all levels\n            of the mipmap chain. If a single level is passed and mipmap filtering is being used,\n            generateMipmap() will be called to produce the remaining levels.\n        @param {number} width Texture width.\n        @param {number} height Texture height.\n        @param {number} size Number of images in the array.\n        @param {Object} [options] Texture options.\n        @param {GLenum} [options.internalFormat=RGBA8] Texture data internal format. Must be a sized format.\n        @param {GLenum} [options.type] Type of data stored in the texture. Default based on\n            <b>internalFormat</b>.\n        @param {boolean} [options.flipY=false] Whether the y-axis should be flipped when unpacking the texture.\n        @param {GLenum} [options.minFilter] Minification filter. Defaults to\n            LINEAR_MIPMAP_NEAREST if image data is provided, NEAREST otherwise.\n        @param {GLenum} [options.magFilter] Magnification filter. Defaults to LINEAR\n            if image data is provided, NEAREST otherwise.\n        @param {GLenum} [options.wrapS=REPEAT] Horizontal wrap mode.\n        @param {GLenum} [options.wrapT=REPEAT] Vertical wrap mode.\n        @param {GLenum} [options.wrapR=REPEAT] Depth wrap mode.\n        @param {GLenum} [options.compareMode=NONE] Comparison mode.\n        @param {GLenum} [options.compareFunc=LEQUAL] Comparison function.\n        @param {GLenum} [options.baseLevel] Base mipmap level.\n        @param {GLenum} [options.maxLevel] Maximum mipmap level.\n        @param {GLenum} [options.minLOD] Mimimum level of detail.\n        @param {GLenum} [options.maxLOD] Maximum level of detail.\n        @param {GLenum} [options.maxAnisotropy] Maximum anisotropy in filtering.\n        @return {Texture} New Texture object.\n    */\n    createTextureArray(image, width, height, depth, options) {\n        if (typeof image === \"number\") {\n            // Create empty texture just give width/height/depth.\n            options = depth;\n            depth = height;\n            height = width;\n            width = image;\n            image = null;\n        }\n        return new Texture(this.gl, this.state, this.gl.TEXTURE_2D_ARRAY, image, width, height, depth, true, options);\n    }\n\n    /**\n        Create a 3D texture.\n\n        @method\n        @param {ArrayBufferView|Array} image Pixel data. An array can be passed to manually set all levels\n            of the mipmap chain. If a single level is passed and mipmap filtering is being used,\n            generateMipmap() will be called to produce the remaining levels.\n        @param {number} width Texture width.\n        @param {number} height Texture height.\n        @param {number} depth Texture depth.\n        @param {Object} [options] Texture options.\n        @param {GLenum} [options.internalFormat=RGBA8] Texture data internal format. Must be a sized format.\n        @param {GLenum} [options.type] Type of data stored in the texture. Default based on\n            <b>internalFormat</b>.\n        @param {boolean} [options.flipY=false] Whether the y-axis should be flipped when unpacking the texture.\n        @param {GLenum} [options.minFilter] Minification filter. Defaults to\n            LINEAR_MIPMAP_NEAREST if image data is provided, NEAREST otherwise.\n        @param {GLenum} [options.magFilter] Magnification filter. Defaults to LINEAR\n            if image data is provided, NEAREST otherwise.\n        @param {GLenum} [options.wrapS=REPEAT] Horizontal wrap mode.\n        @param {GLenum} [options.wrapT=REPEAT] Vertical wrap mode.\n        @param {GLenum} [options.wrapR=REPEAT] Depth wrap mode.\n        @param {GLenum} [options.compareMode=NONE] Comparison mode.\n        @param {GLenum} [options.compareFunc=LEQUAL] Comparison function.\n        @param {GLenum} [options.baseLevel] Base mipmap level.\n        @param {GLenum} [options.maxLevel] Maximum mipmap level.\n        @param {GLenum} [options.minLOD] Mimimum level of detail.\n        @param {GLenum} [options.maxLOD] Maximum level of detail.\n        @param {GLenum} [options.maxAnisotropy] Maximum anisotropy in filtering.\n        @return {Texture} New Texture object.\n    */\n    createTexture3D(image, width, height, depth, options) {\n        if (typeof image === \"number\") {\n            // Create empty texture just give width/height/depth.\n            options = depth;\n            depth = height;\n            height = width;\n            width = image;\n            image = null;\n        }\n        return new Texture(this.gl, this.state, this.gl.TEXTURE_3D, image, width, height, depth, true, options);\n    }\n\n    /**\n        Create a cubemap.\n\n        @method\n        @param {Object} options Texture options.\n        @param {HTMLElement|ArrayBufferView} [options.negX] The image data for the negative X direction.\n                Can be any format that would be accepted by texImage2D.\n        @param {HTMLElement|ArrayBufferView} [options.posX] The image data for the positive X direction.\n                Can be any format that would be accepted by texImage2D.\n        @param {HTMLElement|ArrayBufferView} [options.negY] The image data for the negative Y direction.\n                Can be any format that would be accepted by texImage2D.\n        @param {HTMLElement|ArrayBufferView} [options.posY] The image data for the positive Y direction.\n                Can be any format that would be accepted by texImage2D.\n        @param {HTMLElement|ArrayBufferView} [options.negZ] The image data for the negative Z direction.\n                Can be any format that would be accepted by texImage2D.\n        @param {HTMLElement|ArrayBufferView} [options.posZ] The image data for the positive Z direction.\n                Can be any format that would be accepted by texImage2D.\n        @param {number} [options.width] Cubemap side width. Defaults to the width of negX if negX is an image.\n        @param {number} [options.height] Cubemap side height. Defaults to the height of negX if negX is an image.\n        @param {GLenum} [options.internalFormat=RGBA8] Texture data internal format. Must be a sized format.\n        @param {GLenum} [options.type] Type of data stored in the texture. Default based on\n            <b>internalFormat</b>.\n        @param {boolean} [options.flipY=false] Whether the y-axis should be flipped when unpacking the image.\n        @param {boolean} [options.premultiplyAlpha=false] Whether the alpha channel should be pre-multiplied when unpacking the image.\n        @param {GLenum} [options.minFilter] Minification filter. Defaults to\n            LINEAR_MIPMAP_NEAREST if image data is provided, NEAREST otherwise.\n        @param {GLenum} [options.magFilter] Magnification filter. Defaults to LINEAR\n            if image data is provided, NEAREST otherwise.\n        @param {GLenum} [options.wrapS=REPEAT] Horizontal wrap mode.\n        @param {GLenum} [options.wrapT=REPEAT] Vertical wrap mode.\n        @param {GLenum} [options.compareMode=NONE] Comparison mode.\n        @param {GLenum} [options.compareFunc=LEQUAL] Comparison function.\n        @param {GLenum} [options.baseLevel] Base mipmap level.\n        @param {GLenum} [options.maxLevel] Maximum mipmap level.\n        @param {GLenum} [options.minLOD] Mimimum level of detail.\n        @param {GLenum} [options.maxLOD] Maximum level of detail.\n        @param {GLenum} [options.maxAnisotropy] Maximum anisotropy in filtering.\n        @return {Cubemap} New Cubemap object.\n    */\n    createCubemap(options) {\n        return new Cubemap(this.gl, this.state, options);\n    }\n\n    /**\n        Create a renderbuffer.\n\n        @method\n        @param {number} width Renderbuffer width.\n        @param {number} height Renderbuffer height.\n        @param {GLenum} internalFormat Internal arrangement of the renderbuffer data.\n        @param {number} [samples=0] Number of MSAA samples.\n        @return {Renderbuffer} New Renderbuffer object.\n    */\n    createRenderbuffer(width, height, internalFormat, samples = 0) {\n        return new Renderbuffer(this.gl, width, height, internalFormat, samples);\n    }\n\n    /**\n        Create a framebuffer.\n\n        @method\n        @return {Framebuffer} New Framebuffer object.\n    */\n    createFramebuffer() {\n        return new Framebuffer(this.gl, this.state);\n    }\n\n    /**\n        Create a query.\n\n        @method\n        @param {GLenum} target Information to query.\n        @return {Query} New Query object.\n    */\n    createQuery(target) {\n        return new Query(this.gl, target);\n    }\n\n    /**\n        Create a timer.\n\n        @method\n        @return {Timer} New Timer object.\n    */\n    createTimer() {\n        return new Timer(this.gl);\n    }\n\n    /**\n        Create a DrawCall. A DrawCall manages the state associated with\n        a WebGL draw call including a program and associated vertex data, textures,\n        uniforms and uniform blocks.\n\n        @method\n        @param {Program} program The program to use for this DrawCall.\n        @param {VertexArray} [vertexArray=null] Vertex data to use for drawing.\n        @return {DrawCall} New DrawCall object.\n    */\n    createDrawCall(program, vertexArray, primitive) {\n        return new DrawCall(this.gl, this.state, program, vertexArray, primitive);\n    }\n\n    // Enable extensions\n    initExtensions() {\n        this.gl.getExtension(\"EXT_color_buffer_float\");\n        this.gl.getExtension(\"OES_texture_float_linear\");\n        this.gl.getExtension(\"WEBGL_compressed_texture_s3tc\");\n        this.gl.getExtension(\"WEBGL_compressed_texture_s3tc_srgb\");\n        this.gl.getExtension(\"WEBGL_compressed_texture_etc\");\n        this.gl.getExtension(\"WEBGL_compressed_texture_astc\");\n        this.gl.getExtension(\"WEBGL_compressed_texture_pvrtc\");\n        this.gl.getExtension(\"EXT_disjoint_timer_query_webgl2\");\n        this.gl.getExtension(\"EXT_disjoint_timer_query\");\n        this.gl.getExtension(\"EXT_texture_filter_anisotropic\");\n\n        this.state.extensions.debugShaders = this.gl.getExtension(\"WEBGL_debug_shaders\");\n        this.contextLostExt = this.gl.getExtension(\"WEBGL_lose_context\");\n\n        // Draft extensions\n        this.gl.getExtension(\"KHR_parallel_shader_compile\");\n        this.state.extensions.multiDrawInstanced = this.gl.getExtension(\"WEBGL_multi_draw_instanced\");\n    }\n\n    initContextListeners() {\n        if (this.contextRestoredHandler) {\n            this.contextLostListener = (e) => {\n                e.preventDefault();\n            };\n            this.contextRestoredListener = () => {\n                this.initExtensions();\n                this.contextRestoredHandler();\n            };\n            this.canvas.addEventListener(\"webglcontextlost\", this.contextLostListener);\n            this.canvas.addEventListener(\"webglcontextrestored\", this.contextRestoredListener);\n        } else {\n            this.canvas.removeEventListener(\"webglcontextlost\", this.contextLostListener);\n            this.canvas.removeEventListener(\"webglcontextrestored\", this.contextRestoredListener);\n            this.contextLostListener = null;\n            this.contextRestoredListener = null;\n        }\n    }\n\n    // DEPRECATED\n\n    depthTest() {\n        console.warn(\"App.depthTest is deprecated. Use App.enable(PicoGL.DEPTH_TEST) instead.\");\n        this.enable(GL.DEPTH_TEST);\n\n        return this;\n    }\n\n    noDepthTest() {\n        console.warn(\"App.noDepthTest is deprecated. Use App.disable(PicoGL.DEPTH_TEST) instead.\");\n        this.disable(GL.DEPTH_TEST);\n\n        return this;\n    }\n\n    blend() {\n        console.warn(\"App.blend is deprecated. Use App.enable(PicoGL.BLEND) instead.\");\n        this.enable(GL.BLEND);\n\n        return this;\n    }\n\n    noBlend() {\n        console.warn(\"App.noBlend is deprecated. Use App.disable(PicoGL.BLEND) instead.\");\n        this.disable(GL.BLEND);\n\n        return this;\n    }\n\n    stencilTest() {\n        console.warn(\"App.stencilTest is deprecated. Use App.enable(PicoGL.STENCIL_TEST) instead.\");\n        this.enable(GL.STENCIL_TEST);\n\n        return this;\n    }\n\n    noStencilTest() {\n        console.warn(\"App.noStencilTest is deprecated. Use App.disable(PicoGL.STENCIL_TEST) instead.\");\n        this.disable(GL.STENCIL_TEST);\n\n        return this;\n    }\n\n    scissorTest() {\n        console.warn(\"App.scissorTest is deprecated. Use App.enable(PicoGL.SCISSOR_TEST) instead.\");\n        this.enable(GL.SCISSOR_TEST);\n\n        return this;\n    }\n\n    noScissorTest() {\n        console.warn(\"App.noScissorTest is deprecated. Use App.disable(PicoGL.SCISSOR_TEST) instead.\");\n        this.disable(GL.SCISSOR_TEST);\n\n        return this;\n    }\n\n    rasterize() {\n        console.warn(\"App.noRasterize is deprecated. Use App.disable(PicoGL.RASTERIZER_DISCARD) instead.\");\n        this.disable(GL.RASTERIZER_DISCARD);\n\n        return this;\n    }\n\n    noRasterize() {\n        console.warn(\"App.rasterize is deprecated. Use App.enable(PicoGL.RASTERIZER_DISCARD) instead.\");\n        this.enable(GL.RASTERIZER_DISCARD);\n\n        return this;\n    }\n\n    cullBackfaces() {\n        console.warn(\"App.cullBackfaces is deprecated. Use App.enable(PicoGL.CULL_FACE) instead.\");\n        this.enable(GL.CULL_FACE);\n\n        return this;\n    }\n\n    drawBackfaces() {\n        console.warn(\"App.drawBackfaces is deprecated. Use App.disable(PicoGL.CULL_FACE) instead.\");\n        this.disable(GL.CULL_FACE);\n\n        return this;\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////////\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Tarek Sherif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n///////////////////////////////////////////////////////////////////////////////////\n\nimport { GL, WEBGL_INFO } from \"./constants.js\";\nimport { App } from \"./app.js\";\n\nlet webglInfoInitialized = false;\n\n/**\n    Global PicoGL module. For convenience, all WebGL enums are stored\n    as properties of PicoGL (e.g. PicoGL.FLOAT, PicoGL.ONE_MINUS_SRC_ALPHA).\n\n    @namespace PicoGL\n*/\nexport const PicoGL = Object.assign({\n    /**\n        The version of PicoGL\n\n        @type {string}\n        @name PicoGL.version\n        @private\n     */\n    version: \"0.17.9\",\n\n    /**\n        WebGL information about the current system\n\n        @type {Object.<string, *>}\n        @name PicoGL.WEBGL_INFO\n        @private\n     */\n    WEBGL_INFO,\n\n    /**\n        Create a PicoGL app. The app is the primary entry point to PicoGL. It stores\n        the canvas, the WebGL context and all WebGL state.\n\n        @function PicoGL.createApp\n        @param {HTMLElement} canvas The canvas on which to create the WebGL context.\n        @param {Object} [contextAttributes] Context attributes to pass when calling getContext().\n        @return {App} New App object.\n    */\n    createApp(gl, contextAttributes) {\n\n        // Support providing a canvas and getting a WebGL 2 context\n        if (gl.tagName === \"CANVAS\") {\n            gl = gl.getContext(\"webgl2\", contextAttributes);\n        }\n\n        if (!webglInfoInitialized) {\n            WEBGL_INFO.MAX_TEXTURE_UNITS = gl.getParameter(GL.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n            WEBGL_INFO.MAX_UNIFORM_BUFFERS = gl.getParameter(GL.MAX_UNIFORM_BUFFER_BINDINGS);\n            WEBGL_INFO.MAX_UNIFORMS = Math.min(\n                gl.getParameter(GL.MAX_VERTEX_UNIFORM_VECTORS),\n                gl.getParameter(GL.MAX_FRAGMENT_UNIFORM_VECTORS)\n            );\n            WEBGL_INFO.SAMPLES = gl.getParameter(GL.SAMPLES);\n            WEBGL_INFO.VENDOR = \"(Unknown)\";\n            WEBGL_INFO.RENDERER = \"(Unknown)\";\n\n            // Extensions\n            WEBGL_INFO.FLOAT_RENDER_TARGETS = Boolean(gl.getExtension(\"EXT_color_buffer_float\"));\n            WEBGL_INFO.LINEAR_FLOAT_TEXTURES = Boolean(gl.getExtension(\"OES_texture_float_linear\"));\n            WEBGL_INFO.S3TC_TEXTURES = Boolean(gl.getExtension(\"WEBGL_compressed_texture_s3tc\"));\n            WEBGL_INFO.S3TC_SRGB_TEXTURES = Boolean(gl.getExtension(\"WEBGL_compressed_texture_s3tc_srgb\"));\n            WEBGL_INFO.ETC_TEXTURES = Boolean(gl.getExtension(\"WEBGL_compressed_texture_etc\"));\n            WEBGL_INFO.ASTC_TEXTURES = Boolean(gl.getExtension(\"WEBGL_compressed_texture_astc\"));\n            WEBGL_INFO.PVRTC_TEXTURES = Boolean(gl.getExtension(\"WEBGL_compressed_texture_pvrtc\"));\n            WEBGL_INFO.LOSE_CONTEXT = Boolean(gl.getExtension(\"WEBGL_lose_context\"));\n            WEBGL_INFO.DEBUG_SHADERS = Boolean(gl.getExtension(\"WEBGL_debug_shaders\"));\n            WEBGL_INFO.GPU_TIMER = Boolean(gl.getExtension(\"EXT_disjoint_timer_query_webgl2\") || gl.getExtension(\"EXT_disjoint_timer_query\"));\n\n            WEBGL_INFO.TEXTURE_ANISOTROPY = Boolean(gl.getExtension(\"EXT_texture_filter_anisotropic\"));\n            WEBGL_INFO.MAX_TEXTURE_ANISOTROPY = WEBGL_INFO.TEXTURE_ANISOTROPY ? gl.getParameter(GL.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1;\n\n            WEBGL_INFO.DEBUG_RENDERER_INFO = Boolean(gl.getExtension(\"WEBGL_debug_renderer_info\"));\n            if (WEBGL_INFO.DEBUG_RENDERER_INFO) {\n                WEBGL_INFO.VENDOR = gl.getParameter(GL.UNMASKED_VENDOR_WEBGL);\n                WEBGL_INFO.RENDERER = gl.getParameter(GL.UNMASKED_RENDERER_WEBGL);\n            }\n\n            // Draft extensions\n            WEBGL_INFO.PARALLEL_SHADER_COMPILE = Boolean(gl.getExtension(\"KHR_parallel_shader_compile\"));\n            WEBGL_INFO.MULTI_DRAW_INSTANCED = Boolean(gl.getExtension(\"WEBGL_multi_draw_instanced\"));\n\n            webglInfoInitialized = true;\n        }\n        return new App(gl);\n    }\n}, GL);\n\n/**\n * This is a hack to be able to document the default export :(\n * @type {PicoGL}\n * @name exportDefaultPicoGL\n * @private\n */\nexport default PicoGL;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(825);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}